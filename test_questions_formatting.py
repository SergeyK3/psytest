#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ–∫—Ü–∏–∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤
"""

import sys
from pathlib import Path
from questions_answers_section import QuestionAnswerSection, create_sample_data_for_testing
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.platypus import SimpleDocTemplate
from reportlab.lib.pagesizes import A4

def test_formatting():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞
    qa_section = QuestionAnswerSection()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    sample_data = create_sample_data_for_testing()
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã
    # Soft Skills: –¥–∏–∞–ø–∞–∑–æ–Ω 1-5 (–Ω–µ 1-10)
    sample_data['soft_skills_answers'] = {str(i): (i % 5) + 1 for i in range(10)}
    sample_data['soft_skills_scores'] = {
        "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è": 4, "–†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ": 3, "–õ–∏–¥–µ—Ä—Å—Ç–≤–æ": 5, 
        "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ": 2, "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–µ–º": 4,
        "–°—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å": 3, "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç": 4,
        "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å": 5, "–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º": 3, "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å": 4
    }
    
    # HEXACO: –¥–∏–∞–ø–∞–∑–æ–Ω 1-5 (—É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π)
    sample_data['hexaco_scores'] = {"H": 4.2, "E": 3.1, "X": 3.8, "A": 4.0, "C": 3.5, "O": 4.1}
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π
    styles = getSampleStyleSheet()
    styles.add(styles['Heading1'].clone('MainTitle'))
    styles.add(styles['Heading2'].clone('SectionTitle'))
    styles.add(styles['Heading3'].clone('SubTitle'))
    styles.add(styles['Normal'].clone('Body'))
    styles.add(styles['Normal'].clone('ListWithIndent'))
    
    print("=== –¢–ï–°–¢ –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø SOFT SKILLS ===")
    soft_elements = qa_section.generate_soft_skills_questions_section(
        sample_data['soft_skills_answers'],
        sample_data['soft_skills_scores'],
        styles
    )
    print(f"–°–æ–∑–¥–∞–Ω–æ {len(soft_elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è Soft Skills")
    
    print("\n=== –¢–ï–°–¢ –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø HEXACO ===")
    hexaco_elements = qa_section.generate_hexaco_questions_section(
        sample_data['hexaco_answers'],
        sample_data['hexaco_scores'],
        styles
    )
    print(f"–°–æ–∑–¥–∞–Ω–æ {len(hexaco_elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è HEXACO")
    
    print("\n=== –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û PDF ===")
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π PDF –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    output_path = Path("test_questions_formatting.pdf")
    doc = SimpleDocTemplate(str(output_path), pagesize=A4)
    
    story = []
    story.extend(soft_elements)
    story.extend(hexaco_elements)
    
    try:
        doc.build(story)
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π PDF —Å–æ–∑–¥–∞–Ω: {output_path}")
        print(f"üìÑ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª–µ {output_path}")
        
        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
        print("\n=== –û–ñ–ò–î–ê–ï–ú–û–ï –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï ===")
        print("Soft Skills:")
        print("  - –û—Ç–≤–µ—Ç: X/5 –±–∞–ª–ª–æ–≤ (–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è)")
        print("  - –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –¥–ª—è —à–∫–∞–ª—ã 1-5:")
        print("    * 4-5: –í—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è")
        print("    * 3: –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å")
        print("    * 2: –ù–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è")
        print("    * 1: –¢—Ä–µ–±—É–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è")
        
        print("\nHEXACO:")
        print("  - –û—Ç–≤–µ—Ç: X/5 –±–∞–ª–ª–æ–≤ (–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è)")
        print("  - –ò—Ç–æ–≥–æ–≤—ã–µ –±–∞–ª–ª—ã: H=4.2, E=3.1, X=3.8 –∏ —Ç.–¥. (–±–µ–∑ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –∫ 10)")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è PDF: {e}")

if __name__ == "__main__":
    test_formatting()