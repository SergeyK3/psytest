"""
–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è Google Drive –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å OAuth
"""

import os
import json
from pathlib import Path
from datetime import datetime
from typing import Optional, Tuple

def setup_oauth_google_drive():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç OAuth –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–ª—è Google Drive"""
    
    try:
        from google.auth.transport.requests import Request
        from google.oauth2.credentials import Credentials
        from google_auth_oauthlib.flow import InstalledAppFlow
        from googleapiclient.discovery import build
        from googleapiclient.http import MediaFileUpload
        
        SCOPES = ['https://www.googleapis.com/auth/drive.file']
        
        creds = None
        token_file = 'token.json'
        credentials_file = 'oauth_credentials.json'
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–æ–∫–µ–Ω—ã
        if os.path.exists(token_file):
            creds = Credentials.from_authorized_user_file(token_file, SCOPES)
        
        # –ï—Å–ª–∏ –Ω–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤, –∑–∞–ø—É—Å–∫–∞–µ–º OAuth flow
        if not creds or not creds.valid:
            if creds and creds.expired and creds.refresh_token:
                creds.refresh(Request())
            else:
                if not os.path.exists(credentials_file):
                    print(f"‚ùå –§–∞–π–ª {credentials_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                    print("üìñ –°–æ–∑–¥–∞–π—Ç–µ OAuth credentials –≤ Google Cloud Console")
                    return None
                    
                flow = InstalledAppFlow.from_client_secrets_file(credentials_file, SCOPES)
                creds = flow.run_local_server(port=0)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω—ã –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            with open(token_file, 'w') as token:
                token.write(creds.to_json())
        
        service = build('drive', 'v3', credentials=creds)
        print("‚úÖ OAuth Google Drive API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        return service
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ OAuth: {e}")
        return None

def upload_to_google_drive_oauth(file_path: str, folder_name: str = "PsychTest Reports") -> Optional[str]:
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª –≤ Google Drive –∏—Å–ø–æ–ª—å–∑—É—è OAuth"""
    
    service = setup_oauth_google_drive()
    if not service:
        return None
    
    try:
        from googleapiclient.http import MediaFileUpload
        from googleapiclient.errors import HttpError
        
        # –ò—â–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É
        folder_id = None
        query = f"name='{folder_name}' and mimeType='application/vnd.google-apps.folder'"
        results = service.files().list(q=query, fields="files(id, name)").execute()
        folders = results.get('files', [])
        
        if folders:
            folder_id = folders[0]['id']
            print(f"üìÅ –ù–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞: {folder_name}")
        else:
            # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É
            folder_metadata = {
                'name': folder_name,
                'mimeType': 'application/vnd.google-apps.folder'
            }
            folder = service.files().create(body=folder_metadata).execute()
            folder_id = folder.get('id')
            print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {folder_name}")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
        file_name = os.path.basename(file_path)
        file_metadata = {
            'name': file_name,
            'parents': [folder_id]
        }
        
        media = MediaFileUpload(file_path, mimetype='application/pdf')
        file = service.files().create(
            body=file_metadata,
            media_body=media,
            fields='id,webViewLink'
        ).execute()
        
        file_id = file.get('id')
        web_link = file.get('webViewLink')
        
        print(f"üì§ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: {file_name}")
        print(f"üîó –°—Å—ã–ª–∫–∞: {web_link}")
        
        return web_link
        
    except HttpError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
        return None
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return None

if __name__ == "__main__":
    # –¢–µ—Å—Ç OAuth –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OAuth –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    test_file = "test_oauth.txt"
    with open(test_file, 'w', encoding='utf-8') as f:
        f.write("–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è OAuth Google Drive –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ Google Drive
    link = upload_to_google_drive_oauth(test_file)
    
    if link:
        print(f"üéâ –£—Å–ø–µ—Ö! –§–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ: {link}")
        os.remove(test_file)  # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏")