#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–æ–≤ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
"""

def test_answer_parsing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–æ–≤ –≤ —Å—Ç–∏–ª–µ telegram –±–æ—Ç–∞"""
    
    test_answers = [
        "1. –ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω",
        "2. –°–∫–æ—Ä–µ–µ –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω", 
        "3. –û–±—ã—á–Ω–æ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—é –∫—Ä–∏—Ç–∏–∫—É —Å–ø–æ–∫–æ–π–Ω–æ",
        "4. –°–∫–æ—Ä–µ–µ —Å–æ–≥–ª–∞—Å–µ–Ω",
        "5. –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–µ–Ω"
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –æ—Ç–≤–µ—Ç–æ–≤...")
    print("=" * 50)
    
    for answer_text in test_answers:
        print(f"üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç: '{answer_text}'")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –≤—ã—Ö–æ–¥
        if answer_text == "‚ùå –í—ã–π—Ç–∏":
            print("üö™ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –≤—ã—Ö–æ–¥–∞")
            continue
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ–≤–æ–π –æ—Ç–≤–µ—Ç (1-5)
        try:
            score = None
            for i in range(1, 6):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–∏—Ñ—Ä—ã 1-5
                if answer_text.startswith(str(i)):
                    score = i
                    break
                    
            if score is not None:
                print(f"‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω –±–∞–ª–ª: {score}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –±–∞–ª–ª –∏–∑: '{answer_text}'")
                
        except (ValueError, IndexError) as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
        
        print("-" * 30)
    
    print("\nüéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    test_answer_parsing()