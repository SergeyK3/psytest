#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–π –≤ PDF –æ—Ç—á–µ—Ç–µ
–Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏–∑ –ø—Ä–æ–º–ø—Ç–æ–≤ _res.txt
"""

from pathlib import Path
from datetime import datetime
from enhanced_pdf_report_v2 import EnhancedPDFReportV2

def test_detailed_descriptions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é PDF —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
    test_data = {
        "participant_name": "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á",
        "test_date": datetime.now().strftime("%d.%m.%Y"),
        
        # PAEI –¥–∞–Ω–Ω—ã–µ (5-–±–∞–ª–ª—å–Ω–∞—è —à–∫–∞–ª–∞)
        "paei_scores": {
            "P": 4,  # –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å
            "A": 2,  # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
            "E": 5,  # –ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å
            "I": 3   # –ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä
        },
        
        # DISC –¥–∞–Ω–Ω—ã–µ (—Å—É–º–º–∞ –±–∞–ª–ª–æ–≤ –ø–æ 2 –≤–æ–ø—Ä–æ—Å–∞ = –º–∞–∫—Å–∏–º—É–º 10)
        "disc_scores": {
            "D": 7,  # –î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
            "I": 5,  # –í–ª–∏—è–Ω–∏–µ
            "S": 3,  # –ü–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ
            "C": 6   # –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
        },
        
        # HEXACO –¥–∞–Ω–Ω—ã–µ (5-–±–∞–ª–ª—å–Ω–∞—è —à–∫–∞–ª–∞)
        "hexaco_scores": {
            "H": 4.2,  # –ß–µ—Å—Ç–Ω–æ—Å—Ç—å-–°–∫—Ä–æ–º–Ω–æ—Å—Ç—å
            "E": 3.1,  # –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
            "X": 4.8,  # –≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è
            "A": 3.5,  # –î–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
            "C": 4.1,  # –î–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å
            "O": 2.8   # –û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –æ–ø—ã—Ç—É
        },
        
        # Soft Skills –¥–∞–Ω–Ω—ã–µ (10-–±–∞–ª–ª—å–Ω–∞—è —à–∫–∞–ª–∞)
        "soft_skills_scores": {
            "–õ–∏–¥–µ—Ä—Å—Ç–≤–æ": 7,
            "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç": 8,
            "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è": 6,
            "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ": 4,
            "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–µ–º": 7,
            "–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤": 8,
            "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å": 6,
            "–†–∞–∑–≤–∏—Ç–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤": 5
        },
        
        # –ò–ò –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏)
        "ai_interpretations": {
            "paei": "–ò–ò –∞–Ω–∞–ª–∏–∑ PAEI: –ü—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å–∫–∏–π —Å—Ç–∏–ª—å —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏.",
            "disc": "–ò–ò –∞–Ω–∞–ª–∏–∑ DISC: –î–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π —Ç–∏–ø —Å –≤—ã—Å–æ–∫–æ–π —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é.",
            "hexaco": "–ò–ò –∞–Ω–∞–ª–∏–∑ HEXACO: –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Å –≤—ã—Å–æ–∫–æ–π —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏–µ–π.",
            "soft_skills": "–ò–ò –∞–Ω–∞–ª–∏–∑ Soft Skills: –†–∞–∑–≤–∏—Ç—ã–µ –Ω–∞–≤—ã–∫–∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.",
            "general": "–û–±—â–∏–µ –≤—ã–≤–æ–¥—ã –ò–ò: –°–∏–ª—å–Ω—ã–π –ª–∏–¥–µ—Ä—Å–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Å –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å–∫–∏–º –º—ã—à–ª–µ–Ω–∏–µ–º."
        }
    }
    
    # –°–æ–∑–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤
    pdf_generator = EnhancedPDFReportV2()
    
    # –ü—É—Ç—å –¥–ª—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    output_path = Path("test_detailed_descriptions.pdf")
    
    try:
        print("üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –æ—Ç—á–µ—Ç–∞ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏...")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        result_path = pdf_generator.generate_enhanced_report(
            participant_name=test_data["participant_name"],
            test_date=test_data["test_date"],
            paei_scores=test_data["paei_scores"],
            disc_scores=test_data["disc_scores"],
            hexaco_scores=test_data["hexaco_scores"],
            soft_skills_scores=test_data["soft_skills_scores"],
            ai_interpretations=test_data["ai_interpretations"],
            out_path=output_path
        )
        
        if result_path.exists():
            print(f"‚úÖ PDF –æ—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: {result_path}")
            print(f"üìÑ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {result_path.stat().st_size / 1024:.1f} KB")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–π
            print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–π:")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏–π
            test_methods = [
                ("PAEI", test_data["paei_scores"]),
                ("DISC", test_data["disc_scores"]),
                ("HEXACO", test_data["hexaco_scores"]),
                ("SOFT_SKILLS", test_data["soft_skills_scores"])
            ]
            
            for test_type, scores in test_methods:
                description = pdf_generator._generate_detailed_test_description(test_type, scores)
                if description and len(description) > 50:
                    print(f"‚úÖ {test_type}: –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ ({len(description)} —Å–∏–º–≤–æ–ª–æ–≤)")
                else:
                    print(f"‚ùå {test_type}: –æ–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
            print(f"\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: –û—Ç—á–µ—Ç —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏ –≥–æ—Ç–æ–≤!")
            print(f"üìÅ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {result_path.absolute()}")
            
        else:
            print("‚ùå –û—à–∏–±–∫–∞: PDF —Ñ–∞–π–ª –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False
    
    return True

def test_individual_descriptions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏–π"""
    
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –æ–ø–∏—Å–∞–Ω–∏–π:")
    
    pdf_generator = EnhancedPDFReportV2()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_cases = [
        ("PAEI", {"P": 4, "A": 2, "E": 5, "I": 3}),
        ("DISC", {"D": 7, "I": 5, "S": 3, "C": 6}),
        ("HEXACO", {"H": 4.2, "E": 3.1, "X": 4.8, "A": 3.5, "C": 4.1, "O": 2.8}),
        ("SOFT_SKILLS", {"–õ–∏–¥–µ—Ä—Å—Ç–≤–æ": 7, "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç": 8, "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è": 6})
    ]
    
    for test_type, scores in test_cases:
        try:
            description = pdf_generator._generate_detailed_test_description(test_type, scores)
            print(f"\n--- {test_type} ---")
            print(f"–î–ª–∏–Ω–∞ –æ–ø–∏—Å–∞–Ω–∏—è: {len(description)} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"–ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤: {description[:200]}...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            if test_type == "PAEI":
                if "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å" in description and "–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å" in description:
                    print("‚úÖ –°–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã PAEI")
                else:
                    print("‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–ª—é—á–µ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã PAEI")
            
            elif test_type == "DISC":
                if "–î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ" in description and "–±–∞–ª–ª–æ–≤" in description:
                    print("‚úÖ –°–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã DISC")
                else:
                    print("‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–ª—é—á–µ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã DISC")
            
            elif test_type == "HEXACO":
                if "–ß–µ—Å—Ç–Ω–æ—Å—Ç—å-–°–∫—Ä–æ–º–Ω–æ—Å—Ç—å" in description and "—É—Ä–æ–≤–µ–Ω—å" in description:
                    print("‚úÖ –°–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã HEXACO")
                else:
                    print("‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–ª—é—á–µ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã HEXACO")
            
            elif test_type == "SOFT_SKILLS":
                if "–õ–∏–¥–µ—Ä—Å—Ç–≤–æ" in description and "–Ω–∞–≤—ã–∫" in description:
                    print("‚úÖ –°–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã Soft Skills")
                else:
                    print("‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–ª—é—á–µ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã Soft Skills")
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ {test_type}: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–π...")
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF
    success = test_detailed_descriptions()
    
    # –¢–µ—Å—Ç –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
    test_individual_descriptions()
    
    if success:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Ç–µ—Å—Ç–∞—Ö!")