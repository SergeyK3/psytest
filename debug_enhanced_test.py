#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢ enhanced_pdf_report_v2.py
–° –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º –æ—à–∏–±–æ–∫
"""

from pathlib import Path
from datetime import datetime
from enhanced_pdf_report_v2 import EnhancedPDFReportV2
import traceback

def debug_enhanced_report():
    """
    –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
    """
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢ ENHANCED PDF")
    print("=" * 50)
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
        print("1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞...")
        generator = EnhancedPDFReportV2()
        print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω")
        
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        print("2Ô∏è‚É£ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
        participant_name = "Debug Test User"
        test_date = datetime.now().strftime("%Y-%m-%d")
        
        paei_scores = {"P": 8, "A": 6, "E": 9, "I": 7}
        disc_scores = {"D": 7, "I": 8, "S": 5, "C": 6}
        hexaco_scores = {"H": 4, "E": 3, "X": 5, "A": 4, "C": 5, "O": 4}
        
        soft_skills_scores = {
            "–õ–∏–¥–µ—Ä—Å—Ç–≤–æ": 8, "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è": 9, "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å": 7,
            "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞": 6, "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å": 8, "–ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞": 9,
            "–≠–º–ø–∞—Ç–∏—è": 8, "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ": 7, 
            "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–µ–º": 6, "–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º": 8
        }
        
        ai_interpretations = {
            "PAEI": "–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ PAEI –ø—Ä–æ—Ñ–∏–ª—è...",
            "DISC": "–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ DISC —Å—Ç–∏–ª—è...", 
            "HEXACO": "–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ HEXACO –ª–∏—á–Ω–æ—Å—Ç–∏...",
            "SOFT_SKILLS": "–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º—è–≥–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤..."
        }
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        print("3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ PDF —Ñ–∞–π–ª–∞...")
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        out_path = Path(f"debug_enhanced_{timestamp}.pdf")
        
        print(f"   –§–∞–π–ª: {out_path}")
        print(f"   –£—á–∞—Å—Ç–Ω–∏–∫: {participant_name}")
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ (–±–µ–∑ Google Drive –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏)
        print("4Ô∏è‚É£ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (–±–µ–∑ Google Drive)...")
        pdf_path = generator.generate_enhanced_report(
            participant_name=participant_name,
            test_date=test_date,
            paei_scores=paei_scores,
            disc_scores=disc_scores,
            hexaco_scores=hexaco_scores,
            soft_skills_scores=soft_skills_scores,
            ai_interpretations=ai_interpretations,
            out_path=out_path
        )
        
        print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        print("5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...")
        if pdf_path.exists():
            size = pdf_path.stat().st_size
            size_kb = size / 1024
            print(f"‚úÖ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: {pdf_path}")
            print(f"üìä –†–∞–∑–º–µ—Ä: {size} –±–∞–π—Ç ({size_kb:.1f} KB)")
            
            if size > 50000:
                print("‚úÖ –†–∞–∑–º–µ—Ä —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–Ω–æ–º—É –æ—Ç—á–µ—Ç—É")
            else:
                print("‚ö†Ô∏è –†–∞–∑–º–µ—Ä –º–µ–Ω—å—à–µ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ - –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã")
        else:
            print("‚ùå –§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω")
            
        return pdf_path
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        print("üìã –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
        traceback.print_exc()
        return None

if __name__ == "__main__":
    debug_enhanced_report()