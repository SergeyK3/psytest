#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –∫–æ–º–∞–Ω–¥–µ –≤ PDF
"""

import os
from pathlib import Path
import PyPDF2

def test_pdf_has_team_recommendations():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–∞–∑–¥–µ–ª —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ –≤ PDF"""
    
    print("üîç –ü–û–ò–°–ö –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ô –ü–û –ö–û–ú–ê–ù–î–ï –í PDF –û–¢–ß–ï–¢–ê–•")
    print("=" * 60)
    
    # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ PDF —Ñ–∞–π–ª—ã
    docs_folder = Path("docs")
    if not docs_folder.exists():
        print("‚ùå –ü–∞–ø–∫–∞ docs –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ PDF —Ñ–∞–π–ª—ã —Å —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –¥–∞—Ç–æ–π
    today = "2025-10-24"
    pdf_files = list(docs_folder.glob(f"{today}*.pdf"))
    
    if not pdf_files:
        print(f"‚ùå PDF —Ñ–∞–π–ª—ã —Å –¥–∞—Ç–æ–π {today} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return False
    
    print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ {len(pdf_files)} PDF —Ñ–∞–π–ª–æ–≤:")
    for pdf_file in pdf_files:
        print(f"   ‚Ä¢ {pdf_file.name}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π PDF —Ñ–∞–π–ª
    team_keywords = [
        '—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ–¥–±–æ—Ä—É', '–ø–æ–¥–±–æ—Ä –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤', '–ø–æ–¥–±–æ—Ä—É –∫–æ–º–∞–Ω–¥—ã',
        'disc-–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è', 'paei-–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ', 'hexaco-–±–∞–ª–∞–Ω—Å', 'soft skills-—Å–∏–Ω–µ—Ä–≥–∏—è',
        '–∫–æ–º–∞–Ω–¥—É', '—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤', '–±–∞–ª–∞–Ω—Å–∞ –∫–æ–º–∞–Ω–¥—ã'
    ]
    
    for pdf_file in pdf_files:
        print(f"\nüìÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º {pdf_file.name}:")
        
        try:
            with open(pdf_file, 'rb') as file:
                reader = PyPDF2.PdfReader(file)
                all_text = ""
                
                for page_num, page in enumerate(reader.pages):
                    text = page.extract_text()
                    all_text += text
                    print(f"   üìÉ –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page_num + 1}: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤")
                
                # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
                all_text_lower = all_text.lower()
                found_keywords = []
                
                for keyword in team_keywords:
                    if keyword in all_text_lower:
                        found_keywords.append(keyword)
                
                if found_keywords:
                    print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω—ã –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∫–æ–º–∞–Ω–¥: {found_keywords}")
                    
                    # –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã
                    if '—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ–¥–±–æ—Ä—É' in all_text_lower:
                        print("   üéØ –ù–ê–ô–î–ï–ù –†–ê–ó–î–ï–õ: '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ–¥–±–æ—Ä—É –∫–æ–º–∞–Ω–¥—ã'")
                        return True
                else:
                    print("   ‚ö†Ô∏è  –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∫–æ–º–∞–Ω–¥ –ù–ï –Ω–∞–π–¥–µ–Ω—ã")
                    
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è PDF: {e}")
    
    return False

if __name__ == "__main__":
    success = test_pdf_has_team_recommendations()
    if success:
        print("\nüéä –£–°–ü–ï–•: –†–∞–∑–¥–µ–ª —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –∫–æ–º–∞–Ω–¥–µ –Ω–∞–π–¥–µ–Ω –≤ PDF!")
    else:
        print("\n‚ùå –ü–†–û–ë–õ–ï–ú–ê: –†–∞–∑–¥–µ–ª —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –∫–æ–º–∞–Ω–¥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PDF")
        print("   –í–æ–∑–º–æ–∂–Ω–æ, –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –ø—Ä–∏–º–µ–Ω–∏–ª–∏—Å—å –∏–ª–∏ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")