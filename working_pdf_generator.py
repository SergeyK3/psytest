# –†–∞–±–æ—á–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä PDF —Å –ø–æ–ª–Ω–æ–π –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü
# –°–æ–∑–¥–∞–Ω: 04.10.2025
# –°—Ç–∞—Ç—É—Å: ‚úÖ –†–ê–ë–û–¢–ê–ï–¢

from reportlab.lib.pagesizes import A4
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, PageBreak
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.pdfgen import canvas
from reportlab.lib.units import mm
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
import os

class WorkingNumberedCanvas(canvas.Canvas):
    """–ü–†–û–í–ï–†–ï–ù–ù–´–ô —Ä–∞–±–æ—á–∏–π Canvas —Å –ø–æ–ª–Ω–æ–π –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π"""
    def __init__(self, *args, **kwargs):
        canvas.Canvas.__init__(self, *args, **kwargs)
        self._saved_page_states = []

    def showPage(self):
        self._saved_page_states.append(dict(self.__dict__))
        self._startPage()

    def save(self):
        """–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü –Ω–∞ –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
        num_pages = len(self._saved_page_states)
        for (page_num, page_state) in enumerate(self._saved_page_states):
            self.__dict__.update(page_state)
            self.draw_page_number(page_num + 1, num_pages)
            canvas.Canvas.showPage(self)
        canvas.Canvas.save(self)

    def draw_page_number(self, page_num, total_pages):
        """–ü–†–û–í–ï–†–ï–ù–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏"""
        # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Arial –¥–ª—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
        try:
            arial_path = "C:/Windows/Fonts/arial.ttf"
            if os.path.exists(arial_path):
                # –ï—Å–ª–∏ Arial –¥–æ—Å—Ç—É–ø–µ–Ω
                pdfmetrics.registerFont(TTFont('Arial-Work', arial_path))
                self.setFont("Arial-Work", 10)
                text = f"–°—Ç—Ä. {page_num} –∏–∑ {total_pages}"
            else:
                raise Exception("Arial not found")
        except:
            # Fallback –Ω–∞ Times-Roman
            self.setFont("Times-Roman", 10)
            text = f"–°—Ç—Ä. {page_num} –∏–∑ {total_pages}"
        
        # –ü–æ–∑–∏—Ü–∏—è –≤ –≤–µ—Ä—Ö–Ω–µ–º –ø—Ä–∞–≤–æ–º —É–≥–ª—É
        self.drawRightString(A4[0] - 20*mm, A4[1] - 15*mm, text)

def create_working_pdf_report():
    """–ü–†–û–í–ï–†–ï–ù–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è PDF —Å –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π"""
    
    filename = 'working_full_format_report.pdf'
    
    # –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
    doc = SimpleDocTemplate(
        filename,
        pagesize=A4,
        leftMargin=25*mm,
        rightMargin=25*mm,
        topMargin=25*mm,
        bottomMargin=25*mm,
        canvasmaker=WorkingNumberedCanvas
    )
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ç–∏–ª–∏
    styles = getSampleStyleSheet()
    
    title_style = ParagraphStyle(
        'WorkingTitle',
        parent=styles['Heading1'],
        fontSize=18,
        spaceAfter=30,
        alignment=1,
        fontName='Times-Bold'
    )
    
    header_style = ParagraphStyle(
        'WorkingHeader',
        parent=styles['Heading2'],
        fontSize=14,
        spaceAfter=15,
        fontName='Times-Bold'
    )
    
    normal_style = ParagraphStyle(
        'WorkingNormal',
        parent=styles['Normal'],
        fontSize=11,
        spaceAfter=8,
        fontName='Times-Roman'
    )
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    story = []
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    story.append(Paragraph("–ü–°–ò–•–û–õ–û–ì–ò–ß–ï–°–ö–ò–ô –û–¢–ß–ï–¢", title_style))
    story.append(Paragraph("–†–∞–±–æ—á–∞—è –≤–µ—Ä—Å–∏—è —Å –ø–æ–ª–Ω–æ–π –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π", header_style))
    story.append(Spacer(1, 30))
    
    # –†–∞–∑–¥–µ–ª 1
    story.append(Paragraph("–†–ê–ó–î–ï–õ 1: –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø", header_style))
    story.append(Spacer(1, 15))
    
    for i in range(15):
        story.append(Paragraph(
            f"–ü–∞—Ä–∞–≥—Ä–∞—Ñ {i+1}. –≠—Ç–æ —Ä–∞–±–æ—á–∞—è –≤–µ—Ä—Å–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ PDF —Å –ø–æ–ª–Ω–æ–π –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü. "
            f"–ù–∞ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç '–°—Ç—Ä. X –∏–∑ N', –≥–¥–µ N - –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü. "
            f"–î–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.",
            normal_style
        ))
        story.append(Spacer(1, 8))
    
    story.append(PageBreak())
    
    # –†–∞–∑–¥–µ–ª 2
    story.append(Paragraph("–†–ê–ó–î–ï–õ 2: –¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø", header_style))
    story.append(Spacer(1, 15))
    
    for i in range(15):
        story.append(Paragraph(
            f"–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–µ—Ç–∞–ª—å {i+1}. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–ª–∞—Å—Å WorkingNumberedCanvas, "
            f"–∫–æ—Ç–æ—Ä—ã–π —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω—É–º–µ—Ä–∞—Ü–∏—é –≤ –º–µ—Ç–æ–¥–µ save(). "
            f"–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è Arial —à—Ä–∏—Ñ—Ç –¥–ª—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã —Å fallback –Ω–∞ Times-Roman.",
            normal_style
        ))
        story.append(Spacer(1, 8))
    
    story.append(PageBreak())
    
    # –†–∞–∑–¥–µ–ª 3
    story.append(Paragraph("–†–ê–ó–î–ï–õ 3: –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï", header_style))
    story.append(Spacer(1, 15))
    
    for i in range(10):
        story.append(Paragraph(
            f"–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è {i+1}. –î–∞–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –æ—Å–Ω–æ–≤—É "
            f"–¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö PDF –æ—Ç—á–µ—Ç–æ–≤ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π. "
            f"–ö–æ–¥ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–∞–º–æ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω.",
            normal_style
        ))
        story.append(Spacer(1, 8))
    
    # –°—Ç—Ä–æ–∏–º –¥–æ–∫—É–º–µ–Ω—Ç
    doc.build(story)
    
    return filename

if __name__ == "__main__":
    try:
        result = create_working_pdf_report()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ä–∞–±–æ—á–∏–π PDF: {result}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
        size = os.path.getsize(result)
        print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size} –±–∞–π—Ç")
        
        if size > 10000:
            print("‚úÖ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π - –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ö†Ô∏è –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –º–∞–ª")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")