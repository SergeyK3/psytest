#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ò—Ç–æ–≥–æ–≤—ã–π —Ç–µ—Å—Ç –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏
"""

import telegram_test_bot
from pathlib import Path
import tempfile
from datetime import datetime
from enhanced_pdf_report_v2 import EnhancedPDFReportV2

def test_updated_questions_and_normalization():
    """–¢–µ—Å—Ç –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏"""
    
    print("=== –ü–†–û–í–ï–†–ö–ê –ö–û–õ–ò–ß–ï–°–¢–í–ê –í–û–ü–†–û–°–û–í ===")
    print(f"‚úÖ PAEI: {len(telegram_test_bot.PAEI_QUESTIONS)} –≤–æ–ø—Ä–æ—Å–æ–≤ (–æ–∂–∏–¥–∞–ª–æ—Å—å: 5)")
    print(f"‚úÖ DISC: {len(telegram_test_bot.DISC_QUESTIONS)} –≤–æ–ø—Ä–æ—Å–æ–≤ (–æ–∂–∏–¥–∞–ª–æ—Å—å: 8)")  
    print(f"‚úÖ HEXACO: {len(telegram_test_bot.HEXACO_QUESTIONS)} –≤–æ–ø—Ä–æ—Å–æ–≤ (–æ–∂–∏–¥–∞–ª–æ—Å—å: 6)")
    print(f"‚úÖ Soft Skills: {len(telegram_test_bot.SOFT_SKILLS_QUESTIONS)} –≤–æ–ø—Ä–æ—Å–æ–≤ (–æ–∂–∏–¥–∞–ª–æ—Å—å: 10)")
    
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–û–†–ú–ê–õ–ò–ó–ê–¶–ò–ò ===")
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    paei_scores = {"P": 5, "A": 3, "E": 4, "I": 2}  # –ú–∞–∫—Å–∏–º—É–º 5 –∑–∞ 5 –≤–æ–ø—Ä–æ—Å–æ–≤
    disc_scores = {"D": 6, "I": 4, "S": 8, "C": 5}  # –ú–∞–∫—Å–∏–º—É–º 8 –∑–∞ 8 –≤–æ–ø—Ä–æ—Å–æ–≤
    hexaco_scores = {"H": 4.2, "E": 3.8, "X": 5.0, "A": 2.1, "C": 4.5, "O": 3.3}  # –®–∫–∞–ª–∞ 1-5
    soft_skills_scores = {
        "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è": 8.5,
        "–õ–∏–¥–µ—Ä—Å—Ç–≤–æ": 7.8, 
        "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ": 8.2,
        "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å": 7.6,
        "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞": 8.8,
        "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ": 7.2,
        "–ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞": 9.0,
        "–°—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å": 7.5,
        "–°–∞–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—å": 8.0,
        "–í–ª–∏—è–Ω–∏–µ": 7.0
    }  # –®–∫–∞–ª–∞ 1-10
    
    print("–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print(f"PAEI: {paei_scores}")
    print(f"DISC: {disc_scores}")
    print(f"HEXACO: {hexaco_scores}")
    print(f"Soft Skills: {len(soft_skills_scores)} –Ω–∞–≤—ã–∫–æ–≤")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é
    paei_normalized = {k: round((v / 5.0) * 10.0, 1) for k, v in paei_scores.items()}
    disc_normalized = {k: round((v / 8.0) * 10.0, 1) for k, v in disc_scores.items()}
    hexaco_normalized = {k: round((v / 5.0) * 10.0, 1) for k, v in hexaco_scores.items()}
    
    print("\n–ü–æ—Å–ª–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ —à–∫–∞–ª—É 0-10:")
    print(f"PAEI: {paei_normalized}")
    print(f"DISC: {disc_normalized}")
    print(f"HEXACO: {hexaco_normalized}")
    print(f"Soft Skills: —É–∂–µ –≤ —à–∫–∞–ª–µ 1-10")
    
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï PDF –ì–ï–ù–ï–†–ê–¢–û–†–ê ===")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
    temp_dir = Path.cwd() / "test_final_updates"
    temp_dir.mkdir(exist_ok=True)
    
    try:
        # –°–æ–∑–¥–∞–µ–º PDF –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
        pdf_gen = EnhancedPDFReportV2(template_dir=temp_dir / "charts")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏
        interpretations = {
            "paei": f"PAEI —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å 5 –≤–æ–ø—Ä–æ—Å–∞–º–∏: {paei_scores}",
            "disc": f"DISC —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å 8 –≤–æ–ø—Ä–æ—Å–∞–º–∏: {disc_scores}",
            "hexaco": f"HEXACO —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å 6 –≤–æ–ø—Ä–æ—Å–∞–º–∏: {hexaco_scores}"
        }
        
        pdf_path = temp_dir / f"final_test_report_{int(datetime.now().timestamp())}.pdf"
        
        print("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–µ–π...")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        result = pdf_gen.generate_enhanced_report(
            participant_name="–§–∏–Ω–∞–ª—å–Ω—ã–π –¢–µ—Å—Ç –û–±–Ω–æ–≤–ª–µ–Ω–∏–π",
            test_date=datetime.now().strftime("%Y-%m-%d"),
            paei_scores=paei_scores,
            disc_scores=disc_scores,
            hexaco_scores=hexaco_scores,
            soft_skills_scores=soft_skills_scores,
            ai_interpretations=interpretations,
            out_path=pdf_path
        )
        
        if pdf_path.exists():
            print(f"‚úÖ PDF —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: {pdf_path}")
            print(f"üìä –†–∞–∑–º–µ—Ä: {pdf_path.stat().st_size} bytes")
            
            print("\n=== –ü–†–û–í–ï–†–ö–ê –ö–û–†–†–ï–ö–¢–ù–û–°–¢–ò ===")
            print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤")
            print("‚úÖ –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            print("‚úÖ PDF –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
            print("‚úÖ –í—Å–µ –¥–∏–∞–≥—Ä–∞–º–º—ã —Ç–µ–ø–µ—Ä—å –≤ –µ–¥–∏–Ω–æ–π —à–∫–∞–ª–µ 0-10")
            
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞: PDF –Ω–µ —Å–æ–∑–¥–∞–Ω")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF: {e}")
        return False

if __name__ == "__main__":
    print("üîß –ò–¢–û–ì–û–í–´–ô –¢–ï–°–¢ –û–ë–ù–û–í–õ–ï–ù–ò–ô –ü–°–ò–•–û–õ–û–ì–ò–ß–ï–°–ö–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø\n")
    
    success = test_updated_questions_and_normalization()
    
    if success:
        print("\nüéâ –í–°–ï –û–ë–ù–û–í–õ–ï–ù–ò–Ø –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!")
        print("\n–¢–µ–ø–µ—Ä—å Telegram bot –∏–º–µ–µ—Ç:")
        print("‚Ä¢ PAEI: 5 –≤–æ–ø—Ä–æ—Å–æ–≤ –≤–º–µ—Å—Ç–æ 3")
        print("‚Ä¢ DISC: 8 –≤–æ–ø—Ä–æ—Å–æ–≤ –≤–º–µ—Å—Ç–æ 3") 
        print("‚Ä¢ HEXACO: 6 –≤–æ–ø—Ä–æ—Å–æ–≤ (–Ω–æ–≤—ã–π —Ç–µ—Å—Ç)")
        print("‚Ä¢ Soft Skills: 10 –≤–æ–ø—Ä–æ—Å–æ–≤")
        print("‚Ä¢ –ï–¥–∏–Ω–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –¥–∏–∞–≥—Ä–∞–º–º –∫ —à–∫–∞–ª–µ 0-10")
    else:
        print("\n‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –í –û–ë–ù–û–í–õ–ï–ù–ò–Ø–•")