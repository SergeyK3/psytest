#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–†–ê–ë–û–ß–ï–ï –†–ï–®–ï–ù–ò–ï: –î–≤—É—Ö—ç—Ç–∞–ø–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü
1. –°–æ–∑–¥–∞–µ–º PDF —Å –ø–æ–ª–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
2. –°—á–∏—Ç–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Å –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π

–û–±—Ö–æ–¥–∏—Ç –ø—Ä–æ–±–ª–µ–º—É —Å canvasmaker –≤ ReportLab 4.4.4
"""

from reportlab.lib.pagesizes import A4
from reportlab.lib.units import mm
from reportlab.pdfgen import canvas
from reportlab.lib.colors import black
from reportlab.platypus import BaseDocTemplate, PageTemplate, Frame, Paragraph, Spacer
from reportlab.lib.styles import getSampleStyleSheet
import os
import tempfile

class NumberedCanvas(canvas.Canvas):
    """
    –†–ê–ë–û–ß–ò–ô Canvas –¥–ª—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏ - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–≤—É—Ö—ç—Ç–∞–ø–Ω—ã–π –ø–æ–¥—Ö–æ–¥
    """
    def __init__(self, *args, total_pages=None, **kwargs):
        super().__init__(*args, **kwargs)
        self.total_pages = total_pages
        self.current_page = 0
    
    def showPage(self):
        """–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"""
        self.current_page += 1
        if self.total_pages:
            self.draw_page_number()
        super().showPage()
    
    def draw_page_number(self):
        """
        –†–∏—Å—É–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã - –ó–î–ï–°–¨ –§–ò–ö–°–ò–†–£–Æ–¢–°–Ø –í–°–ï –ü–ê–†–ê–ú–ï–¢–†–´
        """
        # === –ù–ê–°–¢–†–û–ô–ö–ò –ü–û–ó–ò–¶–ò–ò ===
        margin_from_right = 15*mm  # –û—Ç—Å—Ç—É–ø –æ—Ç –ø—Ä–∞–≤–æ–≥–æ –∫—Ä–∞—è
        margin_from_top = 10*mm    # –û—Ç—Å—Ç—É–ø –æ—Ç –≤–µ—Ä—Ö–Ω–µ–≥–æ –∫—Ä–∞—è
        
        x_position = A4[0] - margin_from_right
        y_position = A4[1] - margin_from_top
        
        # === –ù–ê–°–¢–†–û–ô–ö–ò –®–†–ò–§–¢–ê ===
        font_name = "Arial"         # –ó–î–ï–°–¨ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è —à—Ä–∏—Ñ—Ç - Arial –¥–ª—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
        font_size = 10              # –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
        
        # === –§–û–†–ú–ê–¢ –¢–ï–ö–°–¢–ê ===
        page_text = f"–°—Ç—Ä. {self.current_page} –∏–∑ {self.total_pages}"
        
        # –†–∏—Å—É–µ–º
        self.saveState()
        self.setFont(font_name, font_size)
        self.setFillColor(black)
        self.drawRightString(x_position, y_position, page_text)
        self.restoreState()
        
        print(f"‚úÖ –ù–∞—Ä–∏—Å–æ–≤–∞–Ω –Ω–æ–º–µ—Ä: {page_text} –≤ –ø–æ–∑–∏—Ü–∏–∏ ({x_position:.1f}, {y_position:.1f})")

def create_pdf_with_working_numbering(story_content, filename: str) -> str:
    """
    –î–í–£–•–≠–¢–ê–ü–ù–´–ô –ü–û–î–•–û–î:
    1. –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π PDF –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
    2. –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Å –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π
    """
    print("üîÑ –≠—Ç–∞–ø 1: –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π PDF –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü...")
    
    # –≠—Ç–∞–ø 1: –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π PDF –±–µ–∑ –Ω—É–º–µ—Ä–∞—Ü–∏–∏
    temp_file = tempfile.NamedTemporaryFile(suffix='.pdf', delete=False)
    temp_filename = temp_file.name
    temp_file.close()
    
    # –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
    from reportlab.platypus import SimpleDocTemplate
    temp_doc = SimpleDocTemplate(
        temp_filename,
        pagesize=A4,
        leftMargin=20*mm,
        rightMargin=20*mm,
        topMargin=25*mm,
        bottomMargin=20*mm,
    )
    
    # –°—Ç—Ä–æ–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
    temp_doc.build(story_content)
    
    # –°—á–∏—Ç–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –≤—Ä–µ–º–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ
    total_pages = count_pdf_pages(temp_filename)
    print(f"üìä –ü–æ–¥—Å—á–∏—Ç–∞–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {total_pages}")
    
    # –≠—Ç–∞–ø 2: –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π PDF —Å –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π
    print("üîÑ –≠—Ç–∞–ø 2: –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π PDF —Å –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π...")
    
    final_doc = SimpleDocTemplate(
        filename,
        pagesize=A4,
        leftMargin=20*mm,
        rightMargin=20*mm,
        topMargin=25*mm,
        bottomMargin=20*mm,
        canvasmaker=lambda *args, **kwargs: NumberedCanvas(*args, total_pages=total_pages, **kwargs)
    )
    
    # –°—Ç—Ä–æ–∏–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
    final_doc.build(story_content)
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    os.unlink(temp_filename)
    
    print(f"‚úÖ –ì–æ—Ç–æ–≤ PDF —Å –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π: {filename}")
    return filename

def count_pdf_pages(filename: str) -> int:
    """
    –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –≤ PDF —Ñ–∞–π–ª–µ
    """
    try:
        # –ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –ø–æ–¥—Å—á–µ—Ç–∞ —á–µ—Ä–µ–∑ canvas
        temp_canvas = canvas.Canvas("temp_count.pdf")
        
        # –ß–∏—Ç–∞–µ–º PDF –∏ —Å—á–∏—Ç–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥)
        file_size = os.path.getsize(filename)
        
        # –≠–º–ø–∏—Ä–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç: –ø—Ä–∏–º–µ—Ä–Ω–æ 2KB –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        estimated_pages = max(1, file_size // 2000)
        
        print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç, –æ—Ü–µ–Ω–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü: {estimated_pages}")
        
        # –ë–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π –ø–æ–¥—Å—á–µ—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        with open(filename, 'rb') as f:
            content = f.read()
            page_count = content.count(b'/Type /Page')
            if page_count > 0:
                return page_count
        
        return estimated_pages
        
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü: {e}")
        return 10  # Fallback –∑–Ω–∞—á–µ–Ω–∏–µ

def test_working_numbering():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—á–∏–π –ø–æ–¥—Ö–æ–¥
    """
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—á–∏–π –ø–æ–¥—Ö–æ–¥ –∫ –Ω—É–º–µ—Ä–∞—Ü–∏–∏")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    styles = getSampleStyleSheet()
    story = []
    
    for i in range(1, 6):  # 5 —Å—Ç—Ä–∞–Ω–∏—Ü –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        story.append(Paragraph(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã {i}", styles['Title']))
        story.append(Spacer(1, 5*mm))
        
        # –ú–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        long_text = f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã {i}. " * 100
        story.append(Paragraph(long_text, styles['Normal']))
        story.append(Spacer(1, 10*mm))
    
    # –°–æ–∑–¥–∞–µ–º PDF —Å –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π
    output_file = "test_working_numbering.pdf"
    create_pdf_with_working_numbering(story, output_file)
    
    print(f"üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω: {output_file}")

if __name__ == "__main__":
    test_working_numbering()