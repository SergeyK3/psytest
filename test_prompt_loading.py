#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤
"""
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from psytest.prompts import load_prompt

def test_prompt_loading():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–ì–†–£–ó–ö–ò –ü–†–û–ú–ü–¢–û–í")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º DISC –ø—Ä–æ–º–ø—Ç
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DISC –ø—Ä–æ–º–ø—Ç–∞:")
    try:
        disc_prompt = load_prompt("disk_system_res.txt")
        print(f"‚úÖ DISC –ø—Ä–æ–º–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω (–¥–ª–∏–Ω–∞: {len(disc_prompt)} —Å–∏–º–≤–æ–ª–æ–≤)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        key_elements = [
            "–í–ê–ñ–ù–û: –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –†–ï–ê–õ–¨–ù–´–ï –±–∞–ª–ª—ã –∫–ª–∏–µ–Ω—Ç–∞",
            "–û–±—Ä–∞–∑–µ—Ü –±–ª–æ–∫–∞ DISC (–ø—Ä–∏–º–µ—Ä 1 - —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å)",
            "–û–±—Ä–∞–∑–µ—Ü –±–ª–æ–∫–∞ DISC (–ø—Ä–∏–º–µ—Ä 2 - –¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π —Ç–∏–ø D)",
            "–û–±—Ä–∞–∑–µ—Ü –±–ª–æ–∫–∞ DISC (–ø—Ä–∏–º–µ—Ä 3 - –¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π —Ç–∏–ø I)"
        ]
        
        found_elements = []
        for element in key_elements:
            if element in disc_prompt:
                found_elements.append(element)
                print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω: {element[:50]}...")
            else:
                print(f"  ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω: {element[:50]}...")
        
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(found_elements)} –∏–∑ {len(key_elements)} –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ DISC –ø—Ä–æ–º–ø—Ç–∞: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º ADIZES –ø—Ä–æ–º–ø—Ç
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ADIZES –ø—Ä–æ–º–ø—Ç–∞:")
    try:
        adizes_prompt = load_prompt("adizes_system_res.txt")
        print(f"‚úÖ ADIZES –ø—Ä–æ–º–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω (–¥–ª–∏–Ω–∞: {len(adizes_prompt)} —Å–∏–º–≤–æ–ª–æ–≤)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        key_elements = [
            "–í–ê–ñ–ù–û: –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –†–ï–ê–õ–¨–ù–´–ï –≤—ã–±–æ—Ä—ã –∫–ª–∏–µ–Ω—Ç–∞",
            "–û–±—Ä–∞–∑–µ—Ü –±–ª–æ–∫–∞ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ –ê–¥–∏–∑–µ—Å—É (–ø—Ä–∏–º–µ—Ä 1 - –¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π –ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä)",
            "–û–±—Ä–∞–∑–µ—Ü –±–ª–æ–∫–∞ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ –ê–¥–∏–∑–µ—Å—É (–ø—Ä–∏–º–µ—Ä 2 - —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å)",
            "–û–±—Ä–∞–∑–µ—Ü –±–ª–æ–∫–∞ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ –ê–¥–∏–∑–µ—Å—É (–ø—Ä–∏–º–µ—Ä 3 - –¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π –ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å)"
        ]
        
        found_elements = []
        for element in key_elements:
            if element in adizes_prompt:
                found_elements.append(element)
                print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω: {element[:50]}...")
            else:
                print(f"  ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω: {element[:50]}...")
        
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(found_elements)} –∏–∑ {len(key_elements)} –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ADIZES –ø—Ä–æ–º–ø—Ç–∞: {e}")

def test_prompt_quality():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–º–ø—Ç–æ–≤"""
    print("\n\nüîç –ê–ù–ê–õ–ò–ó –ö–ê–ß–ï–°–¢–í–ê –ü–†–û–ú–ü–¢–û–í")
    print("=" * 50)
    
    # –ê–Ω–∞–ª–∏–∑ DISC –ø—Ä–æ–º–ø—Ç–∞
    print("\nüìä –ê–Ω–∞–ª–∏–∑ DISC –ø—Ä–æ–º–ø—Ç–∞:")
    try:
        disc_prompt = load_prompt("disk_system_res.txt")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
        examples_count = disc_prompt.count("–û–±—Ä–∞–∑–µ—Ü –±–ª–æ–∫–∞ DISC")
        print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–º–µ—Ä–æ–≤: {examples_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø—Ä–æ—Ñ–∏–ª–µ–π
        profiles = ["—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π", "–¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π —Ç–∏–ø D", "–¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π —Ç–∏–ø I"]
        for profile in profiles:
            if profile in disc_prompt.lower():
                print(f"  ‚úÖ –ï—Å—Ç—å –ø—Ä–∏–º–µ—Ä –¥–ª—è: {profile}")
            else:
                print(f"  ‚ùå –ù–µ—Ç –ø—Ä–∏–º–µ—Ä–∞ –¥–ª—è: {profile}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        instructions = [
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –†–ï–ê–õ–¨–ù–´–ï –±–∞–ª–ª—ã",
            "—Ç–æ—á–Ω—É—é —Å—É–º–º—É –±–∞–ª–ª–æ–≤",
            "–¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π —Ç–∏–ø –ø–æ–≤–µ–¥–µ–Ω–∏—è",
            "–ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"
        ]
        
        for instruction in instructions:
            if instruction in disc_prompt:
                print(f"  ‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: {instruction}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ DISC: {e}")
    
    # –ê–Ω–∞–ª–∏–∑ ADIZES –ø—Ä–æ–º–ø—Ç–∞  
    print("\nüìä –ê–Ω–∞–ª–∏–∑ ADIZES –ø—Ä–æ–º–ø—Ç–∞:")
    try:
        adizes_prompt = load_prompt("adizes_system_res.txt")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
        examples_count = adizes_prompt.count("–û–±—Ä–∞–∑–µ—Ü –±–ª–æ–∫–∞ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ –ê–¥–∏–∑–µ—Å—É")
        print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–º–µ—Ä–æ–≤: {examples_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –ø—Ä–æ—Ñ–∏–ª–µ–π
        profiles = ["–ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä", "—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π", "–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å"]
        for profile in profiles:
            if profile in adizes_prompt:
                print(f"  ‚úÖ –ï—Å—Ç—å –ø—Ä–∏–º–µ—Ä –¥–ª—è: {profile}")
            else:
                print(f"  ‚ùå –ù–µ—Ç –ø—Ä–∏–º–µ—Ä–∞ –¥–ª—è: {profile}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        structure_elements = [
            "–û–±—â–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç",
            "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∞", 
            "–ò–¥–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–æ–ª–∏",
            "–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã",
            "–ó–æ–Ω—ã —Ä–æ—Å—Ç–∞"
        ]
        
        for element in structure_elements:
            if element in adizes_prompt:
                print(f"  ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç: {element}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ ADIZES: {e}")

if __name__ == "__main__":
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–õ–£–ß–®–ï–ù–ù–´–• –ü–†–û–ú–ü–¢–û–í (–ë–ï–ó API)")
    print("=" * 60)
    
    test_prompt_loading()
    test_prompt_quality()
    
    print("\n\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("–ü—Ä–æ–º–ø—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")