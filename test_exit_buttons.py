#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –≤—ã—Ö–æ–¥–∞ –≤ –±–æ—Ç–µ
"""

import sys
sys.path.append("d:/MyActivity/MyInfoBusiness/MyPythonApps/07 PsychTest")

from telegram_test_bot import add_exit_button, PAEI_QUESTIONS, DISC_QUESTIONS, HEXACO_QUESTIONS, SOFT_SKILLS_QUESTIONS

def test_exit_button_in_keyboards():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞—Ö...")
    
    # –¢–µ—Å—Ç PAEI –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    print("\nüìä –¢–µ—Å—Ç PAEI –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:")
    if len(PAEI_QUESTIONS) > 0:
        question_data = PAEI_QUESTIONS[0]
        keyboard = []
        for key, answer in question_data["answers"].items():
            keyboard.append([f"{key}. {answer}"])
        
        print(f"   –ò—Å—Ö–æ–¥–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞: {len(keyboard)} –∫–Ω–æ–ø–æ–∫")
        keyboard_with_exit = add_exit_button(keyboard)
        print(f"   –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –≤—ã—Ö–æ–¥–∞: {len(keyboard_with_exit)} –∫–Ω–æ–ø–æ–∫")
        print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –∫–Ω–æ–ø–∫–∞: {keyboard_with_exit[-1]}")
        
        if keyboard_with_exit[-1] == ["‚ùå –í—ã–π—Ç–∏"]:
            print("   ‚úÖ –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("   ‚ùå –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
    
    # –¢–µ—Å—Ç DISC –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã  
    print("\nüé≠ –¢–µ—Å—Ç DISC –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:")
    scale_labels = {
        "1": "1 - –ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω",
        "2": "2 - –°–∫–æ—Ä–µ–µ –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω", 
        "3": "3 - –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ",
        "4": "4 - –°–∫–æ—Ä–µ–µ —Å–æ–≥–ª–∞—Å–µ–Ω",
        "5": "5 - –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–µ–Ω"
    }
    
    keyboard = []
    for key, label in scale_labels.items():
        keyboard.append([label])
    
    print(f"   –ò—Å—Ö–æ–¥–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞: {len(keyboard)} –∫–Ω–æ–ø–æ–∫")
    keyboard_with_exit = add_exit_button(keyboard)
    print(f"   –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –≤—ã—Ö–æ–¥–∞: {len(keyboard_with_exit)} –∫–Ω–æ–ø–æ–∫")
    print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –∫–Ω–æ–ø–∫–∞: {keyboard_with_exit[-1]}")
    
    if keyboard_with_exit[-1] == ["‚ùå –í—ã–π—Ç–∏"]:
        print("   ‚úÖ –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("   ‚ùå –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
    
    # –¢–µ—Å—Ç HEXACO –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    print("\nüß† –¢–µ—Å—Ç HEXACO –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:")
    keyboard = [
        ["1 - –ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω"],
        ["2 - –°–∫–æ—Ä–µ–µ –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω"],
        ["3 - –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ"],
        ["4 - –°–∫–æ—Ä–µ–µ —Å–æ–≥–ª–∞—Å–µ–Ω"],
        ["5 - –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–µ–Ω"]
    ]
    
    print(f"   –ò—Å—Ö–æ–¥–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞: {len(keyboard)} –∫–Ω–æ–ø–æ–∫")
    keyboard_with_exit = add_exit_button(keyboard)
    print(f"   –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –≤—ã—Ö–æ–¥–∞: {len(keyboard_with_exit)} –∫–Ω–æ–ø–æ–∫")
    print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –∫–Ω–æ–ø–∫–∞: {keyboard_with_exit[-1]}")
    
    if keyboard_with_exit[-1] == ["‚ùå –í—ã–π—Ç–∏"]:
        print("   ‚úÖ –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("   ‚ùå –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
    
    # –¢–µ—Å—Ç Soft Skills –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    print("\nüí™ –¢–µ—Å—Ç Soft Skills –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:")
    if len(SOFT_SKILLS_QUESTIONS) > 0:
        question_data = SOFT_SKILLS_QUESTIONS[0]
        keyboard = []
        if "answers" in question_data:
            for key, answer in question_data["answers"].items():
                keyboard.append([f"{key}. {answer}"])
        
        print(f"   –ò—Å—Ö–æ–¥–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞: {len(keyboard)} –∫–Ω–æ–ø–æ–∫")
        keyboard_with_exit = add_exit_button(keyboard)
        print(f"   –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –≤—ã—Ö–æ–¥–∞: {len(keyboard_with_exit)} –∫–Ω–æ–ø–æ–∫")
        print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –∫–Ω–æ–ø–∫–∞: {keyboard_with_exit[-1]}")
        
        if keyboard_with_exit[-1] == ["‚ùå –í—ã–π—Ç–∏"]:
            print("   ‚úÖ –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("   ‚ùå –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞")

def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –≤—ã—Ö–æ–¥–∞...")
    
    print("‚úÖ –í–æ–ø—Ä–æ—Å—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞
    test_exit_button_in_keyboards()
    
    print("\nüìã –†–µ–∑—é–º–µ:")
    print("‚úÖ –§—É–Ω–∫—Ü–∏—è add_exit_button() —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚úÖ –ö–Ω–æ–ø–∫–∞ '‚ùå –í—ã–π—Ç–∏' –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤–æ –≤—Å–µ —Ç–∏–ø—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä")
    print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ answer_text == '‚ùå –í—ã–π—Ç–∏' –¥–æ–±–∞–≤–ª–µ–Ω—ã")
    print("‚úÖ –ö–æ–º–∞–Ω–¥—ã /cancel –∏ /exit –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    
    print("\nüéØ –°–ø–æ—Å–æ–±—ã –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("1. –ö–æ–º–∞–Ω–¥–∞ /cancel")
    print("2. –ö–æ–º–∞–Ω–¥–∞ /exit") 
    print("3. –ö–Ω–æ–ø–∫–∞ '‚ùå –í—ã–π—Ç–∏' –≤ –ª—é–±–æ–º –≤–æ–ø—Ä–æ—Å–µ")
    
    print("\nüöÄ –ì–æ—Ç–æ–≤–æ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!")
    print("üì± Telegram –±–æ—Ç: @psychtestteambot")

if __name__ == "__main__":
    main()