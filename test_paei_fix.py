#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–æ–≤ –ø–æ –º–µ—Ç–æ–¥–∏–∫–µ –ê–¥–∏–∑–µ—Å–∞
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(str(Path(__file__).parent))

from telegram_test_bot import UserSession, UserAnswersCollector
from scale_normalizer import ScaleNormalizer

def test_paei_calculations():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ä–∞—Å—á–µ—Ç–æ–≤ PAEI –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    
    print("üßÆ –¢–ï–°–¢ –†–ê–°–ß–ï–¢–û–í –ê–î–ò–ó–ï–°–ê (PAEI)")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–µ—Å—Å–∏—é
    session = UserSession(user_id=123)
    session.name = "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã: P=0, A=3, E=1, I=1
    print("üìù –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    test_answers = [
        (0, "A", "–í–æ–ø—Ä–æ—Å 1: –≤—ã–±—Ä–∞–Ω A"),
        (1, "A", "–í–æ–ø—Ä–æ—Å 2: –≤—ã–±—Ä–∞–Ω A"), 
        (2, "A", "–í–æ–ø—Ä–æ—Å 3: –≤—ã–±—Ä–∞–Ω A"),
        (3, "E", "–í–æ–ø—Ä–æ—Å 4: –≤—ã–±—Ä–∞–Ω E"),
        (4, "I", "–í–æ–ø—Ä–æ—Å 5: –≤—ã–±—Ä–∞–Ω I")
    ]
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç—ã –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –±–æ—Ç–µ
    for q_num, answer, description in test_answers:
        session.paei_scores[answer] += 1  # –î–æ–±–∞–≤–ª—è–µ–º –±–∞–ª–ª
        session.answers_collector.add_paei_answer(q_num, answer)
        print(f"   ‚úÖ {description}")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–¥—Å—á–µ—Ç–∞ (–ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏):")
    print(f"   P = {session.paei_scores['P']}")
    print(f"   A = {session.paei_scores['A']}")
    print(f"   E = {session.paei_scores['E']}")
    print(f"   I = {session.paei_scores['I']}")
    print(f"   –°—É–º–º–∞ = {sum(session.paei_scores.values())}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é
    print(f"\nüîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ ScaleNormalizer:")
    normalized, method = ScaleNormalizer.auto_normalize("PAEI", session.paei_scores)
    
    print(f"   –ò—Å—Ö–æ–¥–Ω—ã–µ: {session.paei_scores}")
    print(f"   –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ: {normalized}")
    print(f"   –ú–µ—Ç–æ–¥: {method}")
    print(f"   –°—É–º–º–∞ –ø–æ—Å–ª–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏: {sum(normalized.values())}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏
    expected = {"P": 0, "A": 3, "E": 1, "I": 1}
    expected_sum = 5
    
    print(f"\nüéØ –ü–†–û–í–ï–†–ö–ê –ö–û–†–†–ï–ö–¢–ù–û–°–¢–ò:")
    print(f"   –û–∂–∏–¥–∞–µ–º: {expected} (—Å—É–º–º–∞ = {expected_sum})")
    print(f"   –ü–æ–ª—É—á–∏–ª–∏: {normalized} (—Å—É–º–º–∞ = {sum(normalized.values())})")
    
    is_correct = (
        normalized == expected and 
        sum(normalized.values()) == expected_sum
    )
    
    if is_correct:
        print("   ‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù! –†–∞—Å—á–µ—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã –ø–æ –º–µ—Ç–æ–¥–∏–∫–µ –ê–¥–∏–∑–µ—Å–∞")
    else:
        print("   ‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù! –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞—Å—á–µ—Ç–∞—Ö")
    
    return is_correct

def test_various_paei_cases():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏ PAEI —Ä–∞—Å—á–µ—Ç–æ–≤"""
    
    print(f"\nüß™ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–´:")
    print("=" * 50)
    
    test_cases = [
        {"name": "–í—Å–µ P", "answers": ["P", "P", "P", "P", "P"], "expected": {"P": 5, "A": 0, "E": 0, "I": 0}},
        {"name": "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π", "answers": ["P", "A", "E", "I", "P"], "expected": {"P": 2, "A": 1, "E": 1, "I": 1}},
        {"name": "–î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ A", "answers": ["A", "A", "A", "I", "E"], "expected": {"P": 0, "A": 3, "E": 1, "I": 1}},
    ]
    
    all_passed = True
    
    for case in test_cases:
        print(f"\nüìã –¢–µ—Å—Ç: {case['name']}")
        session = UserSession(user_id=123)
        session.name = "Test"
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç—ã
        for answer in case['answers']:
            session.paei_scores[answer] += 1
        
        # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º
        normalized, method = ScaleNormalizer.auto_normalize("PAEI", session.paei_scores)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º
        is_correct = normalized == case['expected']
        status = "‚úÖ PASS" if is_correct else "‚ùå FAIL"
        
        print(f"   –û—Ç–≤–µ—Ç—ã: {case['answers']}")
        print(f"   –û–∂–∏–¥–∞–µ–º: {case['expected']}")
        print(f"   –ü–æ–ª—É—á–∏–ª–∏: {normalized}")
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {status}")
        
        if not is_correct:
            all_passed = False
    
    return all_passed

if __name__ == "__main__":
    print("üéØ –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –†–ê–°–ß–ï–¢–û–í –ü–û –ê–î–ò–ó–ï–°–£\n")
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
    main_test_passed = test_paei_calculations()
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
    additional_tests_passed = test_various_paei_cases()
    
    print(f"\n" + "=" * 50)
    print("üèÜ –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"   –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç: {'‚úÖ PASS' if main_test_passed else '‚ùå FAIL'}")
    print(f"   –î–æ–ø. —Ç–µ—Å—Ç—ã: {'‚úÖ PASS' if additional_tests_passed else '‚ùå FAIL'}")
    
    if main_test_passed and additional_tests_passed:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –†–∞—Å—á–µ—Ç—ã –ø–æ –ê–¥–∏–∑–µ—Å—É –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
        print("üí° –¢–µ–ø–µ—Ä—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –º–µ—Ç–æ–¥–∏–∫–µ:")
        print("   ‚Ä¢ 1 –±–∞–ª–ª –∑–∞ –∫–∞–∂–¥—ã–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç")
        print("   ‚Ä¢ –°—É–º–º–∞ –±–∞–ª–ª–æ–≤ = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ (5)")
        print("   ‚Ä¢ –ë–µ–∑ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è")
    else:
        print("\n‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞")