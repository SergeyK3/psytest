#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ç–µ—Å—Ç —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã –≤ PDF
"""

from pathlib import Path
from reportlab.lib.pagesizes import A4
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer
from reportlab.lib.units import mm
from reportlab.lib.colors import black
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
import os

def test_font_methods():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã"""
    
    output_path = Path("font_test_comparison.pdf")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ PDF –¥–æ–∫—É–º–µ–Ω—Ç–∞
    doc = SimpleDocTemplate(str(output_path), pagesize=A4,
                          topMargin=20*mm, bottomMargin=20*mm)
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Å—Ç–∏–ª–µ–π
    styles = getSampleStyleSheet()
    story = []
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title_style = ParagraphStyle(
        name='Title',
        parent=styles['Title'],
        fontSize=16,
        fontName='Times-Bold',
        textColor=black,
        alignment=1
    )
    
    story.append(Paragraph("–¢–ï–°–¢ –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –ö–ò–†–ò–õ–õ–ò–¶–´ –í PDF", title_style))
    story.append(Spacer(1, 10*mm))
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç
    test_text = "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: –ü–µ—Ç—Ä–æ–≤ –í–∞—Å–∏–ª–∏–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á"
    
    # 1. Times-Roman (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π)
    times_style = ParagraphStyle(
        name='TimesRoman',
        parent=styles['Normal'],
        fontSize=12,
        fontName='Times-Roman',
    )
    
    story.append(Paragraph("<b>1. Times-Roman (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π):</b>", times_style))
    story.append(Paragraph(test_text, times_style))
    story.append(Spacer(1, 5*mm))
    
    # 2. Helvetica (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π)
    helvetica_style = ParagraphStyle(
        name='Helvetica',
        parent=styles['Normal'],
        fontSize=12,
        fontName='Helvetica',
    )
    
    story.append(Paragraph("<b>2. Helvetica (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π):</b>", helvetica_style))
    story.append(Paragraph(test_text, helvetica_style))
    story.append(Spacer(1, 5*mm))
    
    # 3. –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Arial Unicode (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
    arial_available = False
    try:
        windows_fonts = "C:/Windows/Fonts/"
        arial_path = os.path.join(windows_fonts, "arial.ttf")
        
        if os.path.exists(arial_path):
            pdfmetrics.registerFont(TTFont('ArialCustom', arial_path))
            arial_available = True
            
            arial_style = ParagraphStyle(
                name='ArialCustom',
                parent=styles['Normal'],
                fontSize=12,
                fontName='ArialCustom',
            )
            
            story.append(Paragraph("<b>3. Arial TTF (Windows —à—Ä–∏—Ñ—Ç):</b>", arial_style))
            story.append(Paragraph(test_text, arial_style))
        else:
            story.append(Paragraph("<b>3. Arial TTF:</b> –ù–µ –Ω–∞–π–¥–µ–Ω", times_style))
            
    except Exception as e:
        story.append(Paragraph(f"<b>3. Arial TTF:</b> –û—à–∏–±–∫–∞ - {e}", times_style))
    
    story.append(Spacer(1, 5*mm))
    
    # 4. –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏ –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è
    special_text = "–ü–ê–≠–ò (PAEI): –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å, –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å, –ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä ‚Äî —Ä–æ–ª–∏ –ê–¥–∏–∑–µ—Å–∞."
    
    story.append(Paragraph("<b>4. –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã (Times-Roman):</b>", times_style))
    story.append(Paragraph(special_text, times_style))
    story.append(Spacer(1, 5*mm))
    
    # 5. –ß–∏—Å–ª–∞ –∏ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏
    numbers_text = "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã: D: 9, I: 7, S: 3, C: 6 ‚Äî —Å—Ç–∏–ª—å –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø–æ DISC."
    
    story.append(Paragraph("<b>5. –ß–∏—Å–ª–∞ –∏ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã (Times-Roman):</b>", times_style))
    story.append(Paragraph(numbers_text, times_style))
    story.append(Spacer(1, 10*mm))
    
    # –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
    conclusion_style = ParagraphStyle(
        name='Conclusion',
        parent=styles['Normal'],
        fontSize=10,
        fontName='Times-Roman',
        textColor=black,
    )
    
    story.append(Paragraph("<b>–ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:</b>", conclusion_style))
    story.append(Paragraph("–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —á–µ—Ä–Ω—ã–µ –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–∏ –≤–º–µ—Å—Ç–æ —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞,", conclusion_style))
    story.append(Paragraph("–ø—Ä–æ–±–ª–µ–º–∞ –≤ —à—Ä–∏—Ñ—Ç–µ. Times-Roman –¥–æ–ª–∂–µ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∫–∏—Ä–∏–ª–ª–∏—Ü—É.", conclusion_style))
    story.append(Paragraph("–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –æ—Å—Ç–∞–µ—Ç—Å—è, –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å TTF —à—Ä–∏—Ñ—Ç—ã.", conclusion_style))
    
    # –°–±–æ—Ä–∫–∞ PDF
    try:
        doc.build(story)
        print(f"‚úÖ –¢–µ—Å—Ç —à—Ä–∏—Ñ—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω: {output_path}")
        print("üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ:")
        print("   1. –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ª–∏ –∫–∏—Ä–∏–ª–ª–∏—Ü–∞ –≤ Times-Roman?")
        print("   2. –ï—Å—Ç—å –ª–∏ —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —à—Ä–∏—Ñ—Ç–∞–º–∏?")
        print("   3. –ö–∞–∫–æ–π —à—Ä–∏—Ñ—Ç –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø–æ–¥—Ö–æ–¥–∏—Ç?")
        
        if arial_available:
            print("   ‚úÖ Arial —à—Ä–∏—Ñ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            print("   ‚ö†Ô∏è  Arial —à—Ä–∏—Ñ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
        if output_path.exists():
            size_kb = output_path.stat().st_size / 1024
            print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size_kb:.1f} KB")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_font_methods()