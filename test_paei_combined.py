#!/usr/bin/env python3#!/usr/bin/env python3#!/usr/bin/env python3

"""

–¢–µ—Å—Ç –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã PAEI (—Å—Ç–æ–ª–±–∏–∫–æ–≤–∞—è + –∫—Ä—É–≥–æ–≤–∞—è)"""# -*- coding: utf-8 -*-

"""

–¢–µ—Å—Ç –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã PAEI (—Å—Ç–æ–ª–±–∏–∫–æ–≤–∞—è + –∫—Ä—É–≥–æ–≤–∞—è)"""

from pathlib import Path

from src.psytest.charts import make_paei_combined_chart"""–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã PAEI (—Å—Ç–æ–ª–±–∏–∫–æ–≤–∞—è + –ø–∏—Ä–æ–≥–æ–≤–∞—è)



def test_paei_combined():"""

    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã PAEI"""

    from pathlib import Path

    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏

    labels = ['P', 'A', 'E', 'I']from src.psytest.charts import make_paei_combined_chartfrom pathlib import Path

    values = [8, 5, 7, 4]  # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

    from datetime import datetime

    # –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è

    output_path = Path("temp_charts/test_paei_combined.png")def test_paei_combined():from enhanced_pdf_report_v2 import EnhancedPDFReportV2

    output_path.parent.mkdir(exist_ok=True)

        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã PAEI"""

    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–≥—Ä–∞–º–º—ã

    try:    def test_paei_combined_chart():

        result_path = make_paei_combined_chart(

            labels=labels,    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã PAEI"""

            values=values,

            out_path=output_path,    labels = ['P', 'A', 'E', 'I']    

            title="PAEI - –¢–µ—Å—Ç –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã"

        )    values = [8, 5, 7, 4]  # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è    print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã PAEI...")

        

        print(f"‚úÖ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ PAEI —Å–æ–∑–¥–∞–Ω–∞: {result_path}")        

        print(f"üìä –î–∞–Ω–Ω—ã–µ: {dict(zip(labels, values))}")

            # –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ

        if result_path.exists():

            print(f"üìÅ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {result_path.stat().st_size} –±–∞–π—Ç")    output_path = Path("temp_charts/test_paei_combined.png")    test_cases = [

            return True

        else:    output_path.parent.mkdir(exist_ok=True)        {

            print("‚ùå –§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω")

            return False                "name": "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å",

            

    except Exception as e:    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–≥—Ä–∞–º–º—ã            "scores": {"P": 3, "A": 4, "E": 3, "I": 4}

        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–∞–≥—Ä–∞–º–º—ã: {e}")

        return False    try:        },



def test_various_data():        result_path = make_paei_combined_chart(        {

    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–∏–∞–≥—Ä–∞–º–º—É —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –Ω–∞–±–æ—Ä–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö"""

                labels=labels,            "name": "–î–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π –ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å", 

    test_cases = [

        {            values=values,            "scores": {"P": 2, "A": 1, "E": 5, "I": 2}

            'name': '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ',

            'values': [6, 7, 6, 5],            out_path=output_path,        },

            'filename': 'paei_balanced.png'

        },            title="PAEI - –¢–µ—Å—Ç –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã"        {

        {

            'name': '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –¥–æ–º–∏–Ω–∏—Ä—É–µ—Ç',        )            "name": "–í—ã—Å–æ–∫–∏–π –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å",

            'values': [12, 3, 4, 2],

            'filename': 'paei_producer_dominant.png'                    "scores": {"P": 5, "A": 2, "E": 1, "I": 3}

        },

        {        print(f"‚úÖ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ PAEI —Å–æ–∑–¥–∞–Ω–∞: {result_path}")        }

            'name': '–ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä –≤—ã—Å–æ–∫–∏–π',

            'values': [4, 5, 3, 11],        print(f"üìä –î–∞–Ω–Ω—ã–µ: {dict(zip(labels, values))}")    ]

            'filename': 'paei_integrator_high.png'

        },            

        {

            'name': '–ö–∞–∫ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏',        if result_path.exists():    pdf_generator = EnhancedPDFReportV2()

            'values': [8, 5, 7, 4],

            'filename': 'paei_from_image.png'            print(f"üìÅ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {result_path.stat().st_size} –±–∞–π—Ç")    

        }

    ]            return True    for i, test_case in enumerate(test_cases, 1):

    

    labels = ['P', 'A', 'E', 'I']        else:        print(f"\n--- –¢–µ—Å—Ç {i}: {test_case['name']} ---")

    

    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –Ω–∞–±–æ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö:")            print("‚ùå –§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω")        

    

    for test_case in test_cases:            return False        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ

        output_path = Path(f"temp_charts/{test_case['filename']}")

                            test_data = {

        try:

            result_path = make_paei_combined_chart(    except Exception as e:            "participant_name": f"–¢–µ—Å—Ç–æ–≤—ã–π –£—á–∞—Å—Ç–Ω–∏–∫ {i}",

                labels=labels,

                values=test_case['values'],        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–∞–≥—Ä–∞–º–º—ã: {e}")            "test_date": datetime.now().strftime("%d.%m.%Y"),

                out_path=output_path,

                title=f"PAEI - {test_case['name']}"        return False            "paei_scores": test_case["scores"],

            )

                        "disc_scores": {"D": 5, "I": 4, "S": 3, "C": 6},

            print(f"  ‚úÖ {test_case['name']}: {test_case['values']} ‚Üí {result_path.name}")

            def test_various_data():            "hexaco_scores": {"H": 3.5, "E": 3.0, "X": 4.0, "A": 3.2, "C": 3.8, "O": 3.1},

        except Exception as e:

            print(f"  ‚ùå {test_case['name']}: –û—à–∏–±–∫–∞ - {e}")    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–∏–∞–≥—Ä–∞–º–º—É —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –Ω–∞–±–æ—Ä–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö"""            "soft_skills_scores": {"–õ–∏–¥–µ—Ä—Å—Ç–≤–æ": 6, "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è": 7},



if __name__ == "__main__":                "ai_interpretations": {

    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã PAEI")

    print("=" * 50)    test_cases = [                "paei": f"–ò–ò –∞–Ω–∞–ª–∏–∑ –¥–ª—è {test_case['name']}",

    

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç        {                "disc": "–¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ DISC", 

    success = test_paei_combined()

                'name': '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ',                "hexaco": "–¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ HEXACO",

    if success:

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã            'values': [6, 7, 6, 5],                "soft_skills": "–¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ Soft Skills",

        test_various_data()

                    'filename': 'paei_balanced.png'                "general": "–û–±—â–∏–µ –≤—ã–≤–æ–¥—ã"

        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")

        print("üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ temp_charts/")        },            }

    else:

        print("\n‚ùå –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª")        {        }

            'name': '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –¥–æ–º–∏–Ω–∏—Ä—É–µ—Ç',        

            'values': [12, 3, 4, 2],        # –ü—É—Ç—å –¥–ª—è PDF

            'filename': 'paei_producer_dominant.png'        output_path = Path(f"test_paei_combined_{i}.pdf")

        },        

        {        try:

            'name': '–ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä –≤—ã—Å–æ–∫–∏–π',            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç

            'values': [4, 5, 3, 11],            result_path = pdf_generator.generate_enhanced_report(

            'filename': 'paei_integrator_high.png'                participant_name=test_data["participant_name"],

        },                test_date=test_data["test_date"],

        {                paei_scores=test_data["paei_scores"],

            'name': '–ö–∞–∫ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏',                disc_scores=test_data["disc_scores"],

            'values': [8, 5, 7, 4],                hexaco_scores=test_data["hexaco_scores"],

            'filename': 'paei_from_image.png'                soft_skills_scores=test_data["soft_skills_scores"],

        }                ai_interpretations=test_data["ai_interpretations"],

    ]                out_path=output_path

                )

    labels = ['P', 'A', 'E', 'I']            

                if result_path.exists():

    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –Ω–∞–±–æ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö:")                size_kb = result_path.stat().st_size / 1024

                    print(f"‚úÖ PDF —Å–æ–∑–¥–∞–Ω: {result_path.name} ({size_kb:.1f} KB)")

    for test_case in test_cases:                

        output_path = Path(f"temp_charts/{test_case['filename']}")                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã

                        combined_chart = pdf_generator.template_dir / "paei_combined.png"

        try:                if combined_chart.exists():

            result_path = make_paei_combined_chart(                    print(f"‚úÖ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ PAEI —Å–æ–∑–¥–∞–Ω–∞: {combined_chart}")

                labels=labels,                else:

                values=test_case['values'],                    print("‚ö†Ô∏è –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ PAEI –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

                out_path=output_path,                    

                title=f"PAEI - {test_case['name']}"            else:

            )                print(f"‚ùå –û—à–∏–±–∫–∞: PDF —Ñ–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω")

                            

            print(f"  ‚úÖ {test_case['name']}: {test_case['values']} ‚Üí {result_path.name}")        except Exception as e:

                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")

        except Exception as e:            import traceback

            print(f"  ‚ùå {test_case['name']}: –û—à–∏–±–∫–∞ - {e}")            traceback.print_exc()



if __name__ == "__main__":def test_paei_chart_components():

    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã PAEI")    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–∏–∞–≥—Ä–∞–º–º—ã PAEI"""

    print("=" * 50)    

        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–∏–∞–≥—Ä–∞–º–º—ã PAEI...")

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç    

    success = test_paei_combined()    pdf_generator = EnhancedPDFReportV2()

        

    if success:    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã    paei_scores = {"P": 4, "A": 2, "E": 5, "I": 3}

        test_various_data()    

            # –°–æ–∑–¥–∞–µ–º –≤—Å–µ –¥–∏–∞–≥—Ä–∞–º–º—ã

        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")    charts = pdf_generator._create_all_charts(

        print("üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ temp_charts/")        paei_scores=paei_scores,

    else:        disc_scores={"D": 5, "I": 4, "S": 3, "C": 6},

        print("\n‚ùå –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª")        hexaco_scores={"H": 3.5, "E": 3.0, "X": 4.0, "A": 3.2, "C": 3.8, "O": 3.1},
        soft_skills_scores={"–õ–∏–¥–µ—Ä—Å—Ç–≤–æ": 6, "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è": 7}
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    expected_files = ['paei_bar', 'paei_pie', 'paei']
    
    for chart_type in expected_files:
        if chart_type in charts and charts[chart_type].exists():
            size = charts[chart_type].stat().st_size
            print(f"‚úÖ {chart_type}: {charts[chart_type].name} ({size} bytes)")
        else:
            print(f"‚ùå {chart_type}: —Ñ–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω")
    
    # –¢–µ—Å—Ç –º–µ—Ç–æ–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
    if 'paei_bar' in charts and 'paei_pie' in charts:
        try:
            test_combined_path = pdf_generator.template_dir / "test_paei_combined.png"
            result = pdf_generator._create_paei_combined_chart(
                charts['paei_bar'], 
                charts['paei_pie'], 
                test_combined_path, 
                paei_scores
            )
            
            if result.exists():
                print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ —Å–æ–∑–¥–∞–Ω–∞: {result.name}")
            else:
                print("‚ùå –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã: {e}")

def test_edge_cases():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫—Ä–∞–π–Ω–∏–µ —Å–ª—É—á–∞–∏ –¥–ª—è PAEI –¥–∏–∞–≥—Ä–∞–º–º"""
    
    print("\nüî¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∞–π–Ω–∏—Ö —Å–ª—É—á–∞–µ–≤ PAEI...")
    
    pdf_generator = EnhancedPDFReportV2()
    
    edge_cases = [
        {"name": "–í—Å–µ –Ω—É–ª–∏", "scores": {"P": 0, "A": 0, "E": 0, "I": 0}},
        {"name": "–û–¥–∏–Ω –º–∞–∫—Å–∏–º—É–º", "scores": {"P": 5, "A": 0, "E": 0, "I": 0}},
        {"name": "–í—Å–µ –º–∞–∫—Å–∏–º—É–º—ã", "scores": {"P": 5, "A": 5, "E": 5, "I": 5}}
    ]
    
    for case in edge_cases:
        print(f"\n--- {case['name']} ---")
        try:
            # –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—É—é –¥–∏–∞–≥—Ä–∞–º–º—É
            bar_path = pdf_generator.template_dir / f"test_bar_{case['name'].replace(' ', '_')}.png"
            pie_path = pdf_generator.template_dir / f"test_pie_{case['name'].replace(' ', '_')}.png"
            combined_path = pdf_generator.template_dir / f"test_combined_{case['name'].replace(' ', '_')}.png"
            
            # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã (–∑–∞–≥–ª—É—à–∫–∏)
            import matplotlib.pyplot as plt
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –∑–∞–≥–ª—É—à–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            fig, ax = plt.subplots(figsize=(6, 4))
            ax.text(0.5, 0.5, f"Test {case['name']}", ha='center', va='center')
            plt.savefig(bar_path, dpi=150)
            plt.savefig(pie_path, dpi=150)
            plt.close()
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—É—é –¥–∏–∞–≥—Ä–∞–º–º—É
            result = pdf_generator._create_paei_combined_chart(
                bar_path, pie_path, combined_path, case["scores"]
            )
            
            if result.exists():
                print(f"‚úÖ {case['name']}: –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print(f"‚ùå {case['name']}: –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è")
                
        except Exception as e:
            print(f"‚ùå {case['name']}: –∏—Å–∫–ª—é—á–µ–Ω–∏–µ - {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã PAEI...")
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
    test_paei_combined_chart()
    
    # –¢–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    test_paei_chart_components()
    
    # –¢–µ—Å—Ç –∫—Ä–∞–π–Ω–∏—Ö —Å–ª—É—á–∞–µ–≤
    test_edge_cases()
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã PAEI –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")