#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π PDF –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ä–∞–∑–¥–µ–ª–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –∫–æ–º–∞–Ω–¥–µ
"""

import PyPDF2
from pathlib import Path

def check_pdf_for_teams(pdf_path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π PDF —Ñ–∞–π–ª"""
    
    print(f"üîç –ê–ù–ê–õ–ò–ó PDF: {pdf_path}")
    print("=" * 60)
    
    try:
        with open(pdf_path, 'rb') as file:
            reader = PyPDF2.PdfReader(file)
            
            print(f"üìÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {len(reader.pages)}")
            
            # –°–æ–±–∏—Ä–∞–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç
            all_text = ""
            for page_num, page in enumerate(reader.pages):
                text = page.extract_text()
                all_text += text
                print(f"   üìÉ –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page_num + 1}: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
            team_keywords = [
                '—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ–¥–±–æ—Ä—É –∫–æ–º–∞–Ω–¥—ã',
                '—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ–¥–±–æ—Ä—É',
                '–ø–æ–¥–±–æ—Ä –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤',
                '–ø–æ–¥–±–æ—Ä—É –∫–æ–º–∞–Ω–¥—ã',
                '–∫–æ–º–∞–Ω–¥—É',
                '—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤',
                'disc-–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è',
                'paei-–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ',
                'hexaco-–±–∞–ª–∞–Ω—Å',
                'soft skills-—Å–∏–Ω–µ—Ä–≥–∏—è'
            ]
            
            all_text_lower = all_text.lower()
            
            print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–û–ò–°–ö–ê:")
            print("-" * 40)
            
            found_any = False
            for keyword in team_keywords:
                if keyword in all_text_lower:
                    print(f"   ‚úÖ –ù–ê–ô–î–ï–ù–û: '{keyword}'")
                    found_any = True
                else:
                    print(f"   ‚ùå –ù–ï–¢: '{keyword}'")
            
            if not found_any:
                print("\n‚ö†Ô∏è  –ù–ò –û–î–ù–û –ö–õ–Æ–ß–ï–í–û–ï –°–õ–û–í–û –ù–ï –ù–ê–ô–î–ï–ù–û!")
                
                # –ü–æ–∫–∞–∂–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                print("\nüìù –°–û–î–ï–†–ñ–ò–ú–û–ï PDF (–ø–µ—Ä–≤—ã–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤):")
                print("-" * 40)
                print(all_text[:1000])
                print("\n...")
                
                # –ò—â–µ–º —Ä–∞–∑–¥–µ–ª—ã
                sections = []
                for line in all_text.split('\n'):
                    if line.strip() and (line.isupper() or '–ê–ù–ê–õ–ò–ó' in line.upper() or '–ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï' in line.upper()):
                        sections.append(line.strip())
                
                if sections:
                    print(f"\nüìë –ù–ê–ô–î–ï–ù–ù–´–ï –†–ê–ó–î–ï–õ–´ ({len(sections)}):")
                    print("-" * 40)
                    for i, section in enumerate(sections[:20]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 20
                        print(f"   {i+1}. {section}")
            else:
                print(f"\nüéä –£–°–ü–ï–•: –ù–∞–π–¥–µ–Ω–æ {sum(1 for k in team_keywords if k in all_text_lower)} –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤!")
            
            return found_any
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê —á—Ç–µ–Ω–∏—è PDF: {e}")
        return False

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    pdf_path = Path("archive/charts/final_test_adizes_markdown.pdf")
    
    if pdf_path.exists():
        success = check_pdf_for_teams(pdf_path)
        if success:
            print("\nüéâ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï: –†–∞–∑–¥–µ–ª —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –∫–æ–º–∞–Ω–¥–µ –Ω–∞–π–¥–µ–Ω!")
        else:
            print("\n‚ùå –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï: –†–∞–∑–¥–µ–ª —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –∫–æ–º–∞–Ω–¥–µ –ù–ï –Ω–∞–π–¥–µ–Ω!")
    else:
        print(f"‚ùå –§–ê–ô–õ –ù–ï –ù–ê–ô–î–ï–ù: {pdf_path}")
        print("   –í–æ–∑–º–æ–∂–Ω–æ, –ø—É—Ç—å –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")