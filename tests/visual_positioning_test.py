#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–í–ò–ó–£–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ü–û–ó–ò–¶–ò–û–ù–ò–†–û–í–ê–ù–ò–Ø –ù–£–ú–ï–†–ê–¶–ò–ò –°–¢–†–ê–ù–ò–¶

–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–π PDF —Å –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π –≤ —Ä–∞–∑–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏—è—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:
1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞—Å—á–µ—Ç–æ–≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
2. –í–∏–¥–∏–º–æ—Å—Ç–∏ —à—Ä–∏—Ñ—Ç–∞ Arial —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π
3. –†–∞–∑–º–µ—â–µ–Ω–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫—Ä–∞–µ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
"""

from reportlab.lib.pagesizes import A4
from reportlab.lib.units import mm
from reportlab.pdfgen import canvas
from reportlab.lib.colors import red, blue, green, black
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
import os

def register_arial_font():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º Arial –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã"""
    try:
        # –ü—Ä–æ–±—É–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å Arial –∏–∑ —Å–∏—Å—Ç–µ–º—ã Windows
        arial_path = "C:/Windows/Fonts/arial.ttf"
        if os.path.exists(arial_path):
            pdfmetrics.registerFont(TTFont('Arial', arial_path))
            print("‚úÖ Arial —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
            return True
        else:
            print("‚ö†Ô∏è Arial –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º Helvetica")
            return False
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Arial: {e}")
        return False

def create_position_test_pdf(filename: str):
    """
    –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π PDF —Å –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π –≤ —Ä–∞–∑–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏—è—Ö
    """
    print(f"üìÑ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π PDF: {filename}")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º Arial
    arial_available = register_arial_font()
    font_name = "Arial" if arial_available else "Helvetica"
    
    c = canvas.Canvas(filename, pagesize=A4)
    
    # === –°–¢–†–ê–ù–ò–¶–ê 1: –¢–µ—Å—Ç –≤—Å–µ—Ö —É–≥–ª–æ–≤ ===
    print("üìù –°—Ç—Ä–∞–Ω–∏—Ü–∞ 1: –¢–µ—Å—Ç –ø–æ–∑–∏—Ü–∏–π –≤–æ –≤—Å–µ—Ö —É–≥–ª–∞—Ö")
    
    # –†–∏—Å—É–µ–º –≥—Ä–∞–Ω–∏—Ü—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏
    c.setStrokeColor(black)
    c.setLineWidth(0.5)
    c.rect(0, 0, A4[0], A4[1])  # –í–Ω–µ—à–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞
    c.rect(20*mm, 20*mm, A4[0]-40*mm, A4[1]-40*mm)  # –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ (—Ä–∞–±–æ—á–∞—è –æ–±–ª–∞—Å—Ç—å)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —à—Ä–∏—Ñ—Ç–∞ –¥–ª—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏
    c.setFont(font_name, 12)
    
    # === –¢–ï–°–¢ –í–°–ï–• 4 –£–ì–õ–û–í ===
    
    # 1. –ü–†–ê–í–´–ô –í–ï–†–•–ù–ò–ô –£–ì–û–õ (–æ—Å–Ω–æ–≤–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è)
    x_top_right = A4[0] - 15*mm
    y_top_right = A4[1] - 10*mm
    c.setFillColor(red)
    c.drawRightString(x_top_right, y_top_right, "–°—Ç—Ä. 1 –∏–∑ 3 (–ü–†–ê–í–´–ô –í–ï–†–•)")
    print(f"üî¥ –ü—Ä–∞–≤—ã–π –≤–µ—Ä—Ö: ({x_top_right:.1f}, {y_top_right:.1f})")
    
    # 2. –õ–ï–í–´–ô –í–ï–†–•–ù–ò–ô –£–ì–û–õ
    x_top_left = 15*mm
    y_top_left = A4[1] - 10*mm
    c.setFillColor(blue)
    c.drawString(x_top_left, y_top_left, "–°—Ç—Ä. 1 –∏–∑ 3 (–õ–ï–í–´–ô –í–ï–†–•)")
    print(f"üîµ –õ–µ–≤—ã–π –≤–µ—Ä—Ö: ({x_top_left:.1f}, {y_top_left:.1f})")
    
    # 3. –ü–†–ê–í–´–ô –ù–ò–ñ–ù–ò–ô –£–ì–û–õ
    x_bottom_right = A4[0] - 15*mm
    y_bottom_right = 10*mm
    c.setFillColor(green)
    c.drawRightString(x_bottom_right, y_bottom_right, "–°—Ç—Ä. 1 –∏–∑ 3 (–ü–†–ê–í–´–ô –ù–ò–ó)")
    print(f"üü¢ –ü—Ä–∞–≤—ã–π –Ω–∏–∑: ({x_bottom_right:.1f}, {y_bottom_right:.1f})")
    
    # 4. –õ–ï–í–´–ô –ù–ò–ñ–ù–ò–ô –£–ì–û–õ
    x_bottom_left = 15*mm
    y_bottom_left = 10*mm
    c.setFillColor(black)
    c.drawString(x_bottom_left, y_bottom_left, "–°—Ç—Ä. 1 –∏–∑ 3 (–õ–ï–í–´–ô –ù–ò–ó)")
    print(f"‚ö´ –õ–µ–≤—ã–π –Ω–∏–∑: ({x_bottom_left:.1f}, {y_bottom_left:.1f})")
    
    # –¶–µ–Ω—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
    center_x = A4[0] / 2
    center_y = A4[1] / 2
    c.setFillColor(black)
    c.setFont(font_name, 16)
    c.drawCentredString(center_x, center_y, f"–¶–ï–ù–¢–† –°–¢–†–ê–ù–ò–¶–´")
    c.drawCentredString(center_x, center_y - 20, f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —à—Ä–∏—Ñ—Ç: {font_name}")
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    c.showPage()
    
    # === –°–¢–†–ê–ù–ò–¶–ê 2: –¢–µ—Å—Ç —Ä–∞–∑–º–µ—Ä–æ–≤ —à—Ä–∏—Ñ—Ç–∞ ===
    print("üìù –°—Ç—Ä–∞–Ω–∏—Ü–∞ 2: –¢–µ—Å—Ç —Ä–∞–∑–º–µ—Ä–æ–≤ —à—Ä–∏—Ñ—Ç–∞")
    
    c.setFillColor(red)
    sizes = [8, 10, 12, 14, 16, 18]
    for i, size in enumerate(sizes):
        c.setFont(font_name, size)
        y_pos = A4[1] - 50*mm - (i * 30)
        x_pos = A4[0] - 15*mm
        c.drawRightString(x_pos, y_pos, f"–°—Ç—Ä. 2 –∏–∑ 3 (—Ä–∞–∑–º–µ—Ä {size})")
        print(f"üìè –†–∞–∑–º–µ—Ä {size}: –ø–æ–∑–∏—Ü–∏—è ({x_pos:.1f}, {y_pos:.1f})")
    
    c.showPage()
    
    # === –°–¢–†–ê–ù–ò–¶–ê 3: –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ ===
    print("üìù –°—Ç—Ä–∞–Ω–∏—Ü–∞ 3: –§–∏–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    
    # –§–ò–ù–ê–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ï –ù–ê–°–¢–†–û–ô–ö–ò
    final_font_size = 10
    final_x = A4[0] - 15*mm  # 15–º–º –æ—Ç –ø—Ä–∞–≤–æ–≥–æ –∫—Ä–∞—è
    final_y = A4[1] - 10*mm  # 10–º–º –æ—Ç –≤–µ—Ä—Ö–Ω–µ–≥–æ –∫—Ä–∞—è
    
    c.setFont(font_name, final_font_size)
    c.setFillColor(black)
    c.drawRightString(final_x, final_y, "–°—Ç—Ä. 3 –∏–∑ 3")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏ —Ä–∞—Å—á–µ—Ç—ã
    c.setFont(font_name, 8)
    info_y = A4[1] - 40*mm
    c.drawString(20*mm, info_y, f"–§–ò–ù–ê–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò:")
    c.drawString(20*mm, info_y - 10, f"‚Ä¢ –®—Ä–∏—Ñ—Ç: {font_name}, —Ä–∞–∑–º–µ—Ä: {final_font_size}")
    c.drawString(20*mm, info_y - 20, f"‚Ä¢ X –ø–æ–∑–∏—Ü–∏—è: A4[0] - 15*mm = {final_x:.1f} points")
    c.drawString(20*mm, info_y - 30, f"‚Ä¢ Y –ø–æ–∑–∏—Ü–∏—è: A4[1] - 10*mm = {final_y:.1f} points")
    c.drawString(20*mm, info_y - 40, f"‚Ä¢ A4 —Ä–∞–∑–º–µ—Ä—ã: {A4[0]:.1f} x {A4[1]:.1f} points")
    c.drawString(20*mm, info_y - 50, f"‚Ä¢ 1 –º–º = {1*mm:.3f} points")
    
    print(f"‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: —à—Ä–∏—Ñ—Ç {font_name} {final_font_size}, –ø–æ–∑–∏—Ü–∏—è ({final_x:.1f}, {final_y:.1f})")
    
    c.save()
    print(f"üíæ PDF —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {filename}")

def test_font_positioning():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –í–ò–ó–£–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ü–û–ó–ò–¶–ò–û–ù–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π PDF
    test_file = "visual_positioning_test.pdf"
    create_position_test_pdf(test_file)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    if os.path.exists(test_file):
        file_size = os.path.getsize(test_file)
        print(f"üìä –†–∞–∑–º–µ—Ä —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
        
        if file_size > 5000:  # –ë–æ–ª—å—à–µ 5KB –æ–∑–Ω–∞—á–∞–µ—Ç —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ
            print("‚úÖ PDF —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print("üëÄ –û–¢–ö–†–û–ô–¢–ï –§–ê–ô–õ –î–õ–Ø –í–ò–ó–£–ê–õ–¨–ù–û–ô –ü–†–û–í–ï–†–ö–ò:")
            print(f"   {os.path.abspath(test_file)}")
        else:
            print("‚ö†Ô∏è –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π, –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã")
    else:
        print("‚ùå –§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω!")

if __name__ == "__main__":
    test_font_positioning()