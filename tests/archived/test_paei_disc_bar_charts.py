#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç —Å—Ç–æ–ª–±–∏–∫–æ–≤—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º –¥–ª—è PAEI –∏ DISC
"""

import sys
sys.path.append('.')
sys.path.append('src')

from pathlib import Path
from enhanced_pdf_report_v2 import EnhancedPDFReportV2
from scale_normalizer import ScaleNormalizer
from datetime import datetime
from pdf_paths import get_docs_pdf_path

def test_bar_charts_paei_disc():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ —Å—Ç–æ–ª–±–∏–∫–æ–≤—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã –¥–ª—è PAEI –∏ DISC"""
    print("üìä –¢–µ—Å—Ç —Å—Ç–æ–ª–±–∏–∫–æ–≤—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º –¥–ª—è PAEI –∏ DISC")
    print("=" * 60)
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        "paei": {"P": 1, "A": 5, "E": 2, "I": 0},     # –ë—É–¥–µ—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–æ
        "disc": {"D": 6, "I": 1, "S": 2, "C": 0},     # –ë—É–¥–µ—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–æ 
        "hexaco": {"H": 2.3, "E": 4.7, "X": 1.9, "A": 3.6, "C": 2.1, "O": 4.4},  # –û—Ä–∏–≥–∏–Ω–∞–ª
        "soft_skills": {"–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è": 7.8, "–õ–∏–¥–µ—Ä—Å—Ç–≤–æ": 6.3, "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å": 8.9, "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å": 5.4}  # –û—Ä–∏–≥–∏–Ω–∞–ª
    }
    
    print("üìà –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    for test_type, scores in test_data.items():
        print(f"   {test_type.upper()}: {scores}")
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é
    print("\nüîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–µ–ª–µ–∫—Ç–∏–≤–Ω—É—é –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é...")
    normalized_data = {}
    
    for test_type, scores in test_data.items():
        normalized_scores, method = ScaleNormalizer.auto_normalize(test_type.upper(), scores)
        normalized_data[test_type] = normalized_scores
        print(f"   {test_type.upper()}: {normalized_scores}")
        print(f"      ‚îî‚îÄ {method}")
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç —Å –Ω–æ–≤—ã–º–∏ —Å—Ç–æ–ª–±–∏–∫–æ–≤—ã–º–∏ –¥–∏–∞–≥—Ä–∞–º–º–∞–º–∏
    print("\nüìÑ –°–æ–∑–¥–∞–Ω–∏–µ PDF –æ—Ç—á–µ—Ç–∞ —Å —Å—Ç–æ–ª–±–∏–∫–æ–≤—ã–º–∏ –¥–∏–∞–≥—Ä–∞–º–º–∞–º–∏...")
    
    try:
        generator = EnhancedPDFReportV2()
        
        # AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏
        ai_interpretations = {
            "paei": "PAEI —Å—Ç–æ–ª–±–∏–∫–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞: —á–µ—Ç–∫–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä–∞ A (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä) –ø–æ—Å–ª–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏",
            "disc": "DISC —Å—Ç–æ–ª–±–∏–∫–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞: –Ω–∞–≥–ª—è–¥–Ω–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–µ–æ–±–ª–∞–¥–∞–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä–∞ D (–î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ) –ø–æ—Å–ª–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏", 
            "hexaco": "HEXACO —Ä–∞–¥–∞—Ä–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞: —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —à–∫–∞–ª—É 1-5 –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏",
            "soft_skills": "Soft Skills —Ä–∞–¥–∞—Ä–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞: –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –Ω–∞–≤—ã–∫–∏ –≤ –ø—Ä–∏–≤—ã—á–Ω–æ–π —à–∫–∞–ª–µ 1-10"
        }
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç –≤ –ø–∞–ø–∫–µ docs/
        pdf_path = get_docs_pdf_path("bar_charts_test", "–¢–µ—Å—Ç_–°—Ç–æ–ª–±–∏–∫–æ–≤—ã—Ö_–î–∏–∞–≥—Ä–∞–º–º")
        
        pdf_path = generator.generate_enhanced_report(
            participant_name="–¢–µ—Å—Ç –°—Ç–æ–ª–±–∏–∫–æ–≤—ã—Ö –î–∏–∞–≥—Ä–∞–º–º",
            test_date=datetime.now().strftime("%d.%m.%Y"),
            paei_scores=normalized_data["paei"],
            disc_scores=normalized_data["disc"],
            hexaco_scores=normalized_data["hexaco"],
            soft_skills_scores=normalized_data["soft_skills"],
            ai_interpretations=ai_interpretations,
            out_path=pdf_path
        )
        
        print(f"‚úÖ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: {pdf_path}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–∏–∞–≥—Ä–∞–º–º
        print(f"\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º:")
        
        # –°–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞–µ–º—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º
        expected_charts = [
            "paei_bar.png",      # –ù–æ–≤–∞—è —Å—Ç–æ–ª–±–∏–∫–æ–≤–∞—è
            "disc_bar.png",      # –ù–æ–≤–∞—è —Å—Ç–æ–ª–±–∏–∫–æ–≤–∞—è
            "hexaco_radar.png",  # –û—Å—Ç–∞–µ—Ç—Å—è —Ä–∞–¥–∞—Ä–Ω–∞—è
            "soft_skills_radar.png"  # –û—Å—Ç–∞–µ—Ç—Å—è —Ä–∞–¥–∞—Ä–Ω–∞—è
        ]
        
        # –ò—â–µ–º –ø–∞–ø–∫—É —Å –¥–∏–∞–≥—Ä–∞–º–º–∞–º–∏ —Ä—è–¥–æ–º —Å PDF
        charts_dir = pdf_path.parent / "temp_charts_v2"
        if charts_dir.exists():
            for chart_name in expected_charts:
                chart_path = charts_dir / chart_name
                if chart_path.exists():
                    chart_type = "—Å—Ç–æ–ª–±–∏–∫–æ–≤–∞—è" if "bar" in chart_name else "—Ä–∞–¥–∞—Ä–Ω–∞—è"
                    test_name = chart_name.split("_")[0].upper()
                    print(f"   ‚úÖ {test_name}: {chart_type} –¥–∏–∞–≥—Ä–∞–º–º–∞ —Å–æ–∑–¥–∞–Ω–∞")
                else:
                    print(f"   ‚ùå {chart_name}: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"   ‚ö†Ô∏è  –ü–∞–ø–∫–∞ –¥–∏–∞–≥—Ä–∞–º–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {charts_dir}")
            # –ü—Ä–æ–≤–µ—Ä–∏–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Å—Ç–∞
            for possible_dir in ["temp_charts", "charts"]:
                alt_charts_dir = pdf_path.parent / possible_dir
                if alt_charts_dir.exists():
                    print(f"   üìÅ –ù–∞–π–¥–µ–Ω–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø–∞–ø–∫–∞: {alt_charts_dir}")
                    break
        
        return pdf_path
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return None

def demo_bar_vs_radar():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —Å—Ç–æ–ª–±–∏–∫–æ–≤—ã–º–∏ –∏ —Ä–∞–¥–∞—Ä–Ω—ã–º–∏ –¥–∏–∞–≥—Ä–∞–º–º–∞–º–∏"""
    print(f"\nüìà –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∏–∞–≥—Ä–∞–º–º:")
    print("=" * 60)
    
    print("üéØ –°—Ç–æ–ª–±–∏–∫–æ–≤—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã (PAEI/DISC):")
    print("   ‚úÖ –ß–µ—Ç–∫–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π")
    print("   ‚úÖ –•–æ—Ä–æ—à–æ –≤–∏–¥–Ω—ã –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏")
    print("   ‚úÖ –õ–µ–≥–∫–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã")
    print("   ‚úÖ –ü–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –≤—ã–±–æ—Ä–æ–≤")
    
    print(f"\nüéØ –†–∞–¥–∞—Ä–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã (HEXACO/SOFT_SKILLS):")
    print("   ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞—é—Ç –æ–±—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å")
    print("   ‚úÖ –•–æ—Ä–æ—à–æ –¥–ª—è –º–Ω–æ–≥–æ–º–µ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    print("   ‚úÖ –í–∏–∑—É–∞–ª–∏–∑–∏—Ä—É—é—Ç –±–∞–ª–∞–Ω—Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫")
    print("   ‚úÖ –ü–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–æ–≤—ã—Ö —à–∫–∞–ª")

if __name__ == "__main__":
    pdf_path = test_bar_charts_paei_disc()
    
    if pdf_path:
        demo_bar_vs_radar()
        
        print(f"\nüéâ –¢–µ—Å—Ç —Å—Ç–æ–ª–±–∏–∫–æ–≤—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print(f"üìÅ –§–∞–π–ª: {pdf_path}")
        print(f"\nüìä –ò–∑–º–µ–Ω–µ–Ω–∏—è:")
        print(f"   üîÑ PAEI: —Ä–∞–¥–∞—Ä–Ω–∞—è ‚Üí —Å—Ç–æ–ª–±–∏–∫–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞")
        print(f"   üîÑ DISC: —Ä–∞–¥–∞—Ä–Ω–∞—è ‚Üí —Å—Ç–æ–ª–±–∏–∫–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞")
        print(f"   ‚úÖ HEXACO: –æ—Å—Ç–∞–µ—Ç—Å—è —Ä–∞–¥–∞—Ä–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞")
        print(f"   ‚úÖ SOFT_SKILLS: –æ—Å—Ç–∞–µ—Ç—Å—è —Ä–∞–¥–∞—Ä–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞")
    else:
        print("‚ùå –¢–µ—Å—Ç –Ω–µ —É–¥–∞–ª—Å—è")