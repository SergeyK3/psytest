#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π –ø–æ–¥ –¥–∏–∞–≥—Ä–∞–º–º–∞–º–∏
"""

import sys
from pathlib import Path
sys.path.append(str(Path(__file__).parent.parent))

from enhanced_pdf_report_v2 import EnhancedPDFReportV2
from datetime import datetime

def test_dynamic_ai_interpretations():
    """–¢–µ—Å—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π –ø–æ–¥ –∫–∞–∂–¥–æ–π –¥–∏–∞–≥—Ä–∞–º–º–æ–π"""
    print("ü§ñ –¢–ï–°–¢ –î–ò–ù–ê–ú–ò–ß–ï–°–ö–ò–• AI –ò–ù–¢–ï–†–ü–†–ï–¢–ê–¶–ò–ô")
    print("=" * 60)
    print("‚úÖ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ —Å –ø–æ–º–æ—â—å—é AI –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–æ–º–ø—Ç—ã *_system_res.txt")
    print("‚úÖ –†–∞–∑–º–µ—â–∞–µ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –ø–æ–¥ –∫–∞–∂–¥–æ–π –¥–∏–∞–≥—Ä–∞–º–º–æ–π")
    print("üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ Google Drive –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è")
    print()
    
    # –°–æ–∑–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤
    report_generator = EnhancedPDFReportV2()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π
    participant_name = "–¢–ï–°–¢ –î–ò–ù–ê–ú–ò–ß–ï–°–ö–ò–• AI –ò–ù–¢–ï–†–ü–†–ï–¢–ê–¶–ò–ô"
    test_date = datetime.now().strftime("%Y-%m-%d")
    
    # –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π
    paei_scores = {
        "–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å (E)": 94,  # –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π
        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (A)": 67,    # –°—Ä–µ–¥–Ω–∏–π
        "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å (P)": 89,    # –í—ã—Å–æ–∫–∏–π
        "–ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä (I)": 73        # –í—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ
    }
    
    disc_scores = {
        "–î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (D)": 91,    # –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π
        "–í–ª–∏—è–Ω–∏–µ (I)": 78,          # –í—ã—Å–æ–∫–∏–π
        "–ü–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ (S)": 62,      # –ù–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ
        "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ (C)": 85      # –í—ã—Å–æ–∫–∏–π
    }
    
    hexaco_scores = {
        "–ß–µ—Å—Ç–Ω–æ—Å—Ç—å": 95,            # –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π
        "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å": 58,      # –ù–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ
        "–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è": 86,         # –í—ã—Å–æ–∫–∏–π
        "–î–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å": 92,   # –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π
        "–î–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å": 98,     # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π
        "–û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –æ–ø—ã—Ç—É": 74      # –í—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ
    }
    
    soft_skills_scores = {
        "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è": 93,         # –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π
        "–õ–∏–¥–µ—Ä—Å—Ç–≤–æ": 96,            # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π
        "–ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞": 88,     # –í—ã—Å–æ–∫–∏–π
        "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å": 79,         # –í—ã—Å–æ–∫–∏–π
        "–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º": 97       # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π
    }
    
    # –ù–ï –ø–µ—Ä–µ–¥–∞–µ–º ai_interpretations - –æ–Ω–∏ –±—É–¥—É—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏!
    ai_interpretations = {}  # –ü—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å - AI —Å–∞–º —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç
    
    # –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
    out_path = Path(f"DYNAMIC_AI_INTERPRETATIONS_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf")
    
    print(f"üë§ –£—á–∞—Å—Ç–Ω–∏–∫: {participant_name}")
    print("ü§ñ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è–º–∏...")
    print("üìã AI –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–º–ø—Ç—ã: adizes_system_res.txt, soft_system_res.txt, hexaco_system_res.txt, disk_system_res.txt")
    print()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è–º–∏
    result = report_generator.generate_enhanced_report(
        participant_name=participant_name,
        test_date=test_date,
        paei_scores=paei_scores,
        disc_scores=disc_scores,
        hexaco_scores=hexaco_scores,
        soft_skills_scores=soft_skills_scores,
        ai_interpretations=ai_interpretations,  # –ü—É—Å—Ç–æ–π - AI —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–∞–º
        out_path=out_path
    )
    
    print()
    print("üîç –†–ï–ó–£–õ–¨–¢–ê–¢:")
    if isinstance(result, str) and result.startswith("https://"):
        print(f"‚úÖ PDF —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è–º–∏ —Å–æ–∑–¥–∞–Ω!")
        print(f"üîó –°–°–´–õ–ö–ê –î–õ–Ø –í–ò–ó–£–ê–õ–¨–ù–û–ì–û –ö–û–ù–¢–†–û–õ–Ø:")
        print(f"üîó {result}")
        print()
        print("üëÅÔ∏è –ß–¢–û –ü–†–û–í–ï–†–ò–¢–¨ –í PDF:")
        print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ PDF –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ")
        print("   2. –ù–∞–π–¥–∏—Ç–µ —Ä–∞–∑–¥–µ–ª—ã —Å —Ç–µ—Å—Ç–∞–º–∏ –∏ –¥–∏–∞–≥—Ä–∞–º–º–∞–º–∏:")
        print()
        print("   ü§ñ 1. –¢–ï–°–¢ –ê–î–ò–ó–ï–°–ê (PAEI)")
        print("      ‚Ü≥ –ü–æ—Å–ª–µ –¥–∏–∞–≥—Ä–∞–º–º—ã –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–µ–∫—Ü–∏—è '–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:'")
        print("      ‚Ü≥ –¢–µ–∫—Å—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω AI –Ω–∞ –æ—Å–Ω–æ–≤–µ adizes_system_res.txt")
        print()
        print("   ü§ñ 2. SOFT SKILLS")
        print("      ‚Ü≥ –ü–æ—Å–ª–µ –¥–∏–∞–≥—Ä–∞–º–º—ã –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–µ–∫—Ü–∏—è '–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:'")
        print("      ‚Ü≥ –¢–µ–∫—Å—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω AI –Ω–∞ –æ—Å–Ω–æ–≤–µ soft_system_res.txt")
        print()
        print("   ü§ñ 3. –¢–ï–°–¢ HEXACO")
        print("      ‚Ü≥ –ü–æ—Å–ª–µ –¥–∏–∞–≥—Ä–∞–º–º—ã –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–µ–∫—Ü–∏—è '–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:'")
        print("      ‚Ü≥ –¢–µ–∫—Å—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω AI –Ω–∞ –æ—Å–Ω–æ–≤–µ hexaco_system_res.txt")
        print()
        print("   ü§ñ 4. –¢–ï–°–¢ DISC")
        print("      ‚Ü≥ –ü–æ—Å–ª–µ –¥–∏–∞–≥—Ä–∞–º–º—ã –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–µ–∫—Ü–∏—è '–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:'")
        print("      ‚Ü≥ –¢–µ–∫—Å—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω AI –Ω–∞ –æ—Å–Ω–æ–≤–µ disk_system_res.txt")
        print()
        print("   ‚úÖ –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º")
        
        return result
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞: {result}")
        return None

if __name__ == "__main__":
    test_dynamic_ai_interpretations()