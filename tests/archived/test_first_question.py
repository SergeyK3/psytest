#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ PAEI –∏–∑ prompts
"""

import sys
sys.path.append("d:/MyActivity/MyInfoBusiness/MyPythonApps/07 PsychTest")

from src.psytest.prompts import load_prompt

def parse_paei_questions(prompt_text):
    """–ü–∞—Ä—Å–∏–Ω–≥ –≤–æ–ø—Ä–æ—Å–æ–≤ PAEI –∏–∑ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–º–ø—Ç–∞"""
    lines = prompt_text.strip().split('\n')
    questions = []
    current_question = None
    current_options = []
    
    for line in lines:
        line = line.strip()
        if not line:
            continue
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å –Ω–æ–º–µ—Ä–∞ (1. 2. –∏ —Ç.–¥.)
        if line[0].isdigit() and line[1:3] == '. ':
            # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
            if current_question:
                questions.append({
                    'question': current_question,
                    'options': current_options
                })
            
            # –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
            current_question = line[3:]  # –£–±–∏—Ä–∞–µ–º "1. "
            current_options = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ (P. A. E. I.)
        elif line.startswith(('P. ', 'A. ', 'E. ', 'I. ')):
            option_letter = line[0]
            option_text = line[3:]  # –£–±–∏—Ä–∞–µ–º "P. "
            current_options.append({
                'letter': option_letter,
                'text': option_text
            })
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å
    if current_question:
        questions.append({
            'question': current_question,
            'options': current_options
        })
    
    return questions

def main():
    print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ PAEI...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–º–ø—Ç
    prompt_text = load_prompt("adizes_user.txt")
    print(f"üìÑ –ü—Ä–æ–º–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω, —Ä–∞–∑–º–µ—Ä: {len(prompt_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ü–∞—Ä—Å–∏–º –≤–æ–ø—Ä–æ—Å—ã
    questions = parse_paei_questions(prompt_text)
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {len(questions)}")
    
    if questions:
        first_question = questions[0]
        print(f"\nüéØ –ü–ï–†–í–´–ô –í–û–ü–†–û–° PAEI:")
        print(f"‚ùì {first_question['question']}")
        print(f"\nüìù –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:")
        for option in first_question['options']:
            print(f"  {option['letter']}. {option['text']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å
        expected_start = "–ö–æ–≥–¥–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç —Å–ª–æ–∂–Ω–∞—è –∑–∞–¥–∞—á–∞"
        if first_question['question'].startswith(expected_start):
            print(f"\n‚úÖ –£–°–ü–ï–•! –ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")
            print(f"‚úÖ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: '{expected_start}'")
        else:
            print(f"\n‚ùå –û–®–ò–ë–ö–ê! –û–∂–∏–¥–∞–ª—Å—è –≤–æ–ø—Ä–æ—Å, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å: '{expected_start}'")
            print(f"‚ùå –ü–æ–ª—É—á–µ–Ω: '{first_question['question'][:50]}...'")
    else:
        print("‚ùå –û–®–ò–ë–ö–ê! –í–æ–ø—Ä–æ—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

if __name__ == "__main__":
    main()