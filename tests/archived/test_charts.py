#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤—ã—Ö –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º –¥–ª—è PDF –æ—Ç—á–µ—Ç–æ–≤
"""

from pathlib import Path
from src.psytest.charts import make_radar, make_bar_chart
from test_scenarios import TEST_SCENARIOS

def test_charts():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–≥—Ä–∞–º–º —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"""
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    output_dir = Path("test_charts_output")
    output_dir.mkdir(exist_ok=True)
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
    scenario = TEST_SCENARIOS["manager_leader"]
    paei_scores = scenario["paei_scores"]
    disc_scores = scenario["disc_scores"]
    hexaco_scores = scenario["hexaco_scores"]
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ soft skills (–ø–æ—Å–∫–æ–ª—å–∫—É –∏—Ö –Ω–µ—Ç –≤ —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö)
    soft_skills = {
        "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è": 8,
        "–õ–∏–¥–µ—Ä—Å—Ç–≤–æ": 9,
        "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ": 7,
        "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å": 6,
        "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞": 8,
        "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ": 5
    }
    
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º...")
    
    # –¢–µ—Å—Ç —Ä–∞–¥–∞—Ä–Ω—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º
    print("\nüìä –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–¥–∞—Ä–Ω—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º:")
    
    # PAEI —Ä–∞–¥–∞—Ä
    paei_labels = list(paei_scores.keys())
    paei_values = list(paei_scores.values())
    paei_path = output_dir / "paei_radar.png"
    
    make_radar(paei_labels, paei_values, paei_path, 
              title="PAEI - –°—Ç–∏–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", max_value=10)
    print(f"‚úÖ PAEI —Ä–∞–¥–∞—Ä: {paei_path}")
    
    # DISC —Ä–∞–¥–∞—Ä  
    disc_labels = list(disc_scores.keys())
    disc_values = list(disc_scores.values())
    disc_path = output_dir / "disc_radar.png"
    
    make_radar(disc_labels, disc_values, disc_path,
              title="DISC - –ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ —Å—Ç–∏–ª–∏", max_value=10)
    print(f"‚úÖ DISC —Ä–∞–¥–∞—Ä: {disc_path}")
    
    # HEXACO —Ä–∞–¥–∞—Ä
    hexaco_labels = list(hexaco_scores.keys())
    hexaco_values = list(hexaco_scores.values())
    hexaco_path = output_dir / "hexaco_radar.png"
    
    make_radar(hexaco_labels, hexaco_values, hexaco_path,
              title="HEXACO - –õ–∏—á–Ω–æ—Å—Ç–Ω—ã–µ —á–µ—Ä—Ç—ã", max_value=10)
    print(f"‚úÖ HEXACO —Ä–∞–¥–∞—Ä: {hexaco_path}")
    
    # –¢–µ—Å—Ç —Å—Ç–æ–ª–±—á–∞—Ç—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º
    print("\nüìà –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–æ–ª–±—á–∞—Ç—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º:")
    
    # Soft Skills —Å—Ç–æ–ª–±—á–∞—Ç–∞—è
    soft_labels = list(soft_skills.keys())
    soft_values = list(soft_skills.values())
    soft_path = output_dir / "soft_skills_bar.png"
    
    make_bar_chart(soft_labels, soft_values, soft_path,
                  title="Soft Skills", max_value=10)
    print(f"‚úÖ Soft Skills —Å—Ç–æ–ª–±—á–∞—Ç–∞—è: {soft_path}")
    
    # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è —Å—Ç–æ–ª–±—á–∞—Ç–∞—è –¥–ª—è PAEI
    paei_horizontal_path = output_dir / "paei_horizontal_bar.png"
    make_bar_chart(paei_labels, paei_values, paei_horizontal_path,
                  title="PAEI - –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è", max_value=10, horizontal=True)
    print(f"‚úÖ PAEI –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è: {paei_horizontal_path}")
    
    print(f"\nüéâ –í—Å–µ –¥–∏–∞–≥—Ä–∞–º–º—ã —Å–æ–∑–¥–∞–Ω—ã –≤ –ø–∞–ø–∫–µ: {output_dir}")
    print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–∏–∞–≥—Ä–∞–º–º –¥–ª—è –ø–µ—á–∞—Ç–∏")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–º —Ñ–∞–π–ª–∞–º
    chart_files = list(output_dir.glob("*.png"))
    total_size = sum(f.stat().st_size for f in chart_files)
    
    print(f"\nüìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –°–æ–∑–¥–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(chart_files)}")
    print(f"   –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {total_size / 1024:.1f} KB")
    
    for chart_file in chart_files:
        size_kb = chart_file.stat().st_size / 1024
        print(f"   {chart_file.name}: {size_kb:.1f} KB")

if __name__ == "__main__":
    test_charts()