#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∏–º—É–ª—è—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram –±–æ—Ç–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from telegram_test_bot import (
    parse_paei_questions, parse_disc_questions, 
    parse_hexaco_questions, parse_soft_skills_questions,
    UserSession
)

def simulate_testing_session():
    """–°–∏–º—É–ª–∏—Ä—É–µ—Ç —Å–µ—Å—Å–∏—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üß™ –°–∏–º—É–ª—è—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ –±–æ—Ç–∞...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã
    paei_questions = parse_paei_questions()
    disc_questions = parse_disc_questions()
    hexaco_questions = parse_hexaco_questions()
    soft_questions = parse_soft_skills_questions()
    
    print(f"\nüìã –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:")
    print(f"  PAEI: {len(paei_questions)}")
    print(f"  DISC: {len(disc_questions)}")
    print(f"  HEXACO: {len(hexaco_questions)}")
    print(f"  Soft Skills: {len(soft_questions)}")
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é —Å–µ—Å—Å–∏—é
    user_session = UserSession(user_id=12345)  # –¢–µ—Å—Ç–æ–≤—ã–π ID
    print(f"\nüë§ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print(f"   User ID: {user_session.user_id}")
    print(f"   –¢–µ–∫—É—â–∏–π —Ç–µ—Å—Ç: {user_session.current_test}")
    print(f"   –¢–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å: {user_session.current_question}")
    print(f"   DISC scores: {user_session.disc_scores}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º PAEI –≤–æ–ø—Ä–æ—Å
    if paei_questions:
        print(f"\nüìù –¢–µ—Å—Ç PAEI –≤–æ–ø—Ä–æ—Å–∞:")
        q = paei_questions[0]
        print(f"   –í–æ–ø—Ä–æ—Å: {q['question'][:60]}...")
        print(f"   –í–∞—Ä–∏–∞–Ω—Ç—ã:")
        for key, answer in q['answers'].items():
            print(f"     {key}. {answer[:40]}...")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª: P")
        user_session.paei_scores["P"] += 1
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º DISC –≤–æ–ø—Ä–æ—Å
    if disc_questions:
        print(f"\nüìù –¢–µ—Å—Ç DISC –≤–æ–ø—Ä–æ—Å–∞:")
        q = disc_questions[0]
        print(f"   –í–æ–ø—Ä–æ—Å: {q['question'][:60]}...")
        print(f"   –®–∫–∞–ª–∞: {q['scale']}")
        print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª: 4 (–°–æ–≥–ª–∞—Å–µ–Ω)")
        user_session.disc_scores.append(4)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º HEXACO –≤–æ–ø—Ä–æ—Å
    if hexaco_questions:
        print(f"\nüìù –¢–µ—Å—Ç HEXACO –≤–æ–ø—Ä–æ—Å–∞:")
        q = hexaco_questions[0]
        print(f"   –í–æ–ø—Ä–æ—Å: {q['question'][:60]}...")
        print(f"   –®–∫–∞–ª–∞: {q['scale']}")
        print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª: 3 (–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ)")
        user_session.hexaco_scores.append(3)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Soft Skills –≤–æ–ø—Ä–æ—Å
    if soft_questions:
        print(f"\nüìù –¢–µ—Å—Ç Soft Skills –≤–æ–ø—Ä–æ—Å–∞:")
        q = soft_questions[0]
        print(f"   –í–æ–ø—Ä–æ—Å: {q['question'][:60]}...")
        print(f"   –í–∞—Ä–∏–∞–Ω—Ç—ã:")
        for key, answer in list(q['answers'].items())[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            print(f"     {key}. {answer[:40]}...")
        print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª: 4")
        user_session.soft_skills_scores.append(8)  # 4 * 2 = 8
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–º—É–ª—è—Ü–∏–∏:")
    print(f"   PAEI –±–∞–ª–ª—ã: {user_session.paei_scores}")
    print(f"   DISC –±–∞–ª–ª—ã: {user_session.disc_scores}")
    print(f"   HEXACO –±–∞–ª–ª—ã: {user_session.hexaco_scores}")
    print(f"   Soft Skills –±–∞–ª–ª—ã: {user_session.soft_skills_scores}")
    
    print(f"\n‚úÖ –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print(f"üí° –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–µ–∞–ª—å–Ω–æ–º—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –≤ Telegram")
    
    return True

def test_question_formats():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—ã –≤–æ–ø—Ä–æ—Å–æ–≤"""
    
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–æ–≤ –≤–æ–ø—Ä–æ—Å–æ–≤:")
    
    # PAEI - –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã P/A/E/I
    paei_q = parse_paei_questions()[0] if parse_paei_questions() else None
    if paei_q:
        expected_keys = {'P', 'A', 'E', 'I'}
        actual_keys = set(paei_q['answers'].keys())
        print(f"   PAEI –∫–ª—é—á–∏: –æ–∂–∏–¥–∞–µ–º {expected_keys}, –ø–æ–ª—É—á–∏–ª–∏ {actual_keys}")
        print(f"   ‚úÖ PAEI —Ñ–æ—Ä–º–∞—Ç –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: {expected_keys == actual_keys}")
    
    # DISC - –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —à–∫–∞–ª—É 1-5
    disc_q = parse_disc_questions()[0] if parse_disc_questions() else None
    if disc_q:
        has_scale = 'scale' in disc_q and disc_q['scale'] == '1-5'
        print(f"   DISC —à–∫–∞–ª–∞: {disc_q.get('scale', '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')}")
        print(f"   ‚úÖ DISC —Ñ–æ—Ä–º–∞—Ç –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: {has_scale}")
    
    # Soft Skills - –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã 1-5
    soft_q = parse_soft_skills_questions()[0] if parse_soft_skills_questions() else None
    if soft_q:
        expected_keys = {'1', '2', '3', '4', '5'}
        actual_keys = set(soft_q['answers'].keys())
        print(f"   Soft Skills –∫–ª—é—á–∏: –æ–∂–∏–¥–∞–µ–º {expected_keys}, –ø–æ–ª—É—á–∏–ª–∏ {actual_keys}")
        print(f"   ‚úÖ Soft Skills —Ñ–æ—Ä–º–∞—Ç –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: {expected_keys == actual_keys}")

if __name__ == "__main__":
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞...")
    
    # –û—Å–Ω–æ–≤–Ω–∞—è —Å–∏–º—É–ª—è—Ü–∏—è
    simulate_testing_session()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–æ–≤
    test_question_formats()
    
    print(f"\nüéØ –ì–æ—Ç–æ–≤–æ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –≤ Telegram!")
    print(f"üì± –ë–æ—Ç: @psychtestteambot")
    print(f"üîß –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"   /start - –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print(f"   /help - –°–ø—Ä–∞–≤–∫–∞")
    print(f"   /cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é")