#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è Telegram –±–æ—Ç–∞
–°–∏–º—É–ª–∏—Ä—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
"""

import asyncio
import time
from datetime import datetime
from telegram_test_bot import UserSession

async def simulate_user_session(user_id: int, name: str):
    """–°–∏–º—É–ª–∏—Ä—É–µ—Ç —Å–µ—Å—Å–∏—é –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} ({name}) –Ω–∞—á–∞–ª —Ç–µ—Å—Ç –≤ {datetime.now().strftime('%H:%M:%S')}")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    session = UserSession(user_id)
    session.name = name
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ DISC —Ç–µ—Å—Ç–∞ (8 –≤–æ–ø—Ä–æ—Å–æ–≤)
    for i in range(8):
        # –°–ª—É—á–∞–π–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
        import random
        answer = random.choice(['D', 'I', 'S', 'C'])
        session.disc_scores[answer] += 1
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –æ–±–¥—É–º—ã–≤–∞–Ω–∏—è
        await asyncio.sleep(random.uniform(1, 3))
        
        print(f"  üìù {name} –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤–æ–ø—Ä–æ—Å {i+1}/8")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º HEXACO —Ç–µ—Å—Ç (12 –≤–æ–ø—Ä–æ—Å–æ–≤)
    session.hexaco_scores = [random.randint(1, 5) for _ in range(12)]
    await asyncio.sleep(2)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º Soft Skills —Ç–µ—Å—Ç (5 –≤–æ–ø—Ä–æ—Å–æ–≤)  
    session.soft_skills_scores = [random.randint(1, 10) for _ in range(5)]
    await asyncio.sleep(1)
    
    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} ({name}) –∑–∞–≤–µ—Ä—à–∏–ª —Ç–µ—Å—Ç –≤ {datetime.now().strftime('%H:%M:%S')}")
    
    return session

async def test_concurrent_users():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏\n")
    
    # –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    users = [
        (1001, "–ê–ª–µ–∫—Å–µ–π"),
        (1002, "–ú–∞—Ä–∏—è"), 
        (1003, "–î–º–∏—Ç—Ä–∏–π"),
        (1004, "–ï–ª–µ–Ω–∞"),
        (1005, "–°–µ—Ä–≥–µ–π"),
    ]
    
    start_time = time.time()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
    tasks = [simulate_user_session(user_id, name) for user_id, name in users]
    sessions = await asyncio.gather(*tasks)
    
    end_time = time.time()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞:")
    print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
    print(f"‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è: {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
    print(f"üìà –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {(end_time - start_time) / len(users):.2f} —Å–µ–∫—É–Ω–¥")
    
    print(f"\nüìã –î–µ—Ç–∞–ª–∏ —Å–µ—Å—Å–∏–π:")
    for session in sessions:
        print(f"  üë§ {session.name} (ID: {session.user_id})")
        print(f"     DISC: {session.disc_scores}")
        print(f"     HEXACO: {len(session.hexaco_scores)} –æ—Ç–≤–µ—Ç–æ–≤")
        print(f"     Soft Skills: {len(session.soft_skills_scores)} –æ—Ç–≤–µ—Ç–æ–≤")

def test_session_isolation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–∑–æ–ª—è—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    
    print("üîí –¢–µ—Å—Ç –∏–∑–æ–ª—è—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö\n")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ—Å—Å–∏–π
    sessions = {}
    
    for i in range(1, 6):
        user_id = 2000 + i
        sessions[user_id] = UserSession(user_id)
        sessions[user_id].name = f"User_{i}"
        sessions[user_id].disc_scores['D'] = i * 2  # –†–∞–∑–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–æ–ª—è—Ü–∏—é
    print("üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–ª—è—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö:")
    for user_id, session in sessions.items():
        print(f"  üë§ {session.name}: D-score = {session.disc_scores['D']}")
    
    # –ò–∑–º–µ–Ω—è–µ–º –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    sessions[2001].disc_scores['D'] = 999
    
    print(f"\nüîÑ –ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è User_1:")
    for user_id, session in sessions.items():
        print(f"  üë§ {session.name}: D-score = {session.disc_scores['D']}")
    
    print(f"‚úÖ –ò–∑–æ–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã\n")
    
    # –¢–µ—Å—Ç –∏–∑–æ–ª—è—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
    test_session_isolation()
    
    print("\n" + "="*50 + "\n")
    
    # –¢–µ—Å—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏
    asyncio.run(test_concurrent_users())
    
    print(f"\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print(f"‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Ä–∞–±–æ—Ç–µ")