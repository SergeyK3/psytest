#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF —Å —Ä–µ–∞–ª—å–Ω—ã–º AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–æ–º –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º
"""

import sys
from pathlib import Path
import datetime

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ PYTHONPATH
sys.path.insert(0, str(Path(__file__).parent / "src"))

def test_ai_interpreter_with_new_format():
    """–¢–µ—Å—Ç AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –∏–∑ general_system_res.txt"""
    
    try:
        from psytest.ai_interpreter import AIInterpreter
        from enhanced_pdf_report_v2 import EnhancedPDFReportV2
        
        print("üß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º...")
        print("=" * 60)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä
        ai = AIInterpreter()
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_scores = {
            'paei': {'P': 8, 'A': 5, 'E': 7, 'I': 6},
            'disc': {'D': 7, 'I': 5, 'S': 3, 'C': 4},
            'hexaco': {'H': 4, 'E': 3, 'X': 5, 'A': 4, 'C': 5, 'O': 3},
            'soft_skills': {
                '–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è': 8.5,
                '–õ–∏–¥–µ—Ä—Å—Ç–≤–æ': 9.0,
                '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ': 6.5,
                '–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å': 7.2,
                '–†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ': 8.8,
                '–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å': 8.1,
                '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç': 9.2,
                '–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º': 7.8,
                '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–µ–º': 8.5,
                '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ –Ω–∞–≤—ã–∫–∏': 7.0
            }
        }
        
        print("üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º...")
        
        # –ü–æ–ª—É—á–∞–µ–º AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏
        ai_interpretations = {}
        
        # PAEI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è
        print("    üîÑ PAEI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è...")
        ai_interpretations['paei'] = ai.interpret_paei(test_scores['paei'])
        
        # Soft Skills –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è
        print("    üîÑ Soft Skills –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è...")
        ai_interpretations['soft_skills'] = ai.interpret_soft_skills(test_scores['soft_skills'])
        
        # HEXACO –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è
        print("    üîÑ HEXACO –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è...")
        ai_interpretations['hexaco'] = ai.interpret_hexaco(test_scores['hexaco'])
        
        # DISC –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è
        print("    üîÑ DISC –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è...")
        ai_interpretations['disc'] = ai.interpret_disc(test_scores['disc'])
        
        # –û–±—â–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è
        print("    üîÑ –û–±—â–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è...")
        ai_interpretations['general'] = ai.interpret_general(test_scores)
        
        print("‚úÖ AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω—ã!")
        print()
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF —Å –Ω–æ–≤—ã–º–∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è–º–∏
        print("üìÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF —Å –Ω–æ–≤—ã–º–∏ AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è–º–∏...")
        generator = EnhancedPDFReportV2()
        timestamp = datetime.datetime.now().strftime('%Y%m%d_%H%M%S')
        output_path = Path(f'ai_test_format_{timestamp}.pdf')
        
        # –°–æ–∑–¥–∞–µ–º PDF –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ Google Drive
        drive_url = generator.generate_enhanced_report_with_gdrive(
            'AI –¢–µ—Å—Ç –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –§–æ—Ä–º–∞—Ç',
            '2025-10-04',
            test_scores['paei'],
            test_scores['disc'], 
            test_scores['hexaco'],
            test_scores['soft_skills'],
            ai_interpretations,
            output_path
        )
        
        print("‚úÖ PDF —Å–æ–∑–¥–∞–Ω —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è–º–∏!")
        print()
        print("üîó Google Drive URL:", drive_url[1] if isinstance(drive_url, tuple) else drive_url)
        print("üìÑ –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª:", output_path)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π
        print()
        print("üìù –§–†–ê–ì–ú–ï–ù–¢–´ AI –ò–ù–¢–ï–†–ü–†–ï–¢–ê–¶–ò–ô:")
        for key, value in ai_interpretations.items():
            if value:
                preview = value[:150] + "..." if len(value) > 150 else value
                print(f"    {key.upper()}: {preview}")
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_ai_interpreter_with_new_format()