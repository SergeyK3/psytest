#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ PAEI/Adizes –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
"""

import re

def parse_adizes_questions(filepath="data/prompts/adizes_user.txt"):
    """–ü–∞—Ä—Å–∏—Ç –≤–æ–ø—Ä–æ—Å—ã PAEI/Adizes –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        questions = []
        with open(filepath, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –±–ª–æ–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ (–∏—â–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω —Å –Ω–æ–º–µ—Ä–æ–º)
        question_blocks = re.split(r'\n(?=\d+\.)', content)
        
        for block in question_blocks:
            if not block.strip() or not re.match(r'^\d+\.', block.strip()):
                continue
                
            lines = block.strip().split('\n')
            question_text = lines[0].strip()
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–∞–º –≤–æ–ø—Ä–æ—Å (—É–±–∏—Ä–∞–µ–º –Ω–æ–º–µ—Ä)
            question_text = re.sub(r'^\d+\.\s*', '', question_text)
            
            answers = {}
            for line in lines[1:]:
                line = line.strip()
                if re.match(r'^[PAEI]\.', line):
                    code = line[0]  # P, A, E, –∏–ª–∏ I
                    answer_text = re.sub(r'^[PAEI]\.\s*', '', line)
                    answers[code] = answer_text
            
            if question_text and len(answers) == 4:  # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å 4 –æ—Ç–≤–µ—Ç–∞
                questions.append({
                    "question": question_text,
                    "answers": answers
                })
        
        print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(questions)} PAEI –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ {filepath}")
        return questions
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ PAEI –≤–æ–ø—Ä–æ—Å–æ–≤: {e}")
        return []

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ PAEI –≤–æ–ø—Ä–æ—Å–æ–≤...")
    questions = parse_adizes_questions()
    
    print(f"\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(questions)} –≤–æ–ø—Ä–æ—Å–æ–≤")
    
    for i, q in enumerate(questions, 1):
        print(f"\n{i}. {q['question']}")
        for code, answer in q['answers'].items():
            print(f"   {code}. {answer}")
    
    print("\nüéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")