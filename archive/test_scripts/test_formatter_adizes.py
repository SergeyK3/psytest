#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –ê–¥–∏–∑–µ—Å–∞ —á–µ—Ä–µ–∑ interpretation_formatter
"""

from interpretation_formatter import format_ai_interpretations
from interpretation_utils import generate_interpretations_from_prompt

def test_adizes_through_formatter():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –ê–¥–∏–∑–µ—Å–∞ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ê–¥–∏–∑–µ—Å–∞ —á–µ—Ä–µ–∑ formatter")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ 
    test_results = {
        'paei': {'P': 1, 'A': 2, 'E': 4, 'I': 1},  # –î–æ–º–∏–Ω–∏—Ä—É–µ—Ç –ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å
        'disc': {'D': 4.0, 'I': 3.0, 'S': 2.5, 'C': 3.0},
        'hexaco': {'H': 3.8, 'E': 4.2, 'X': 3.5, 'A': 4.0, 'C': 3.9, 'O': 4.3},
        'soft': {'leadership': 4, 'communication': 5, 'teamwork': 3}
    }
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏
    print("üìù –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏...")
    raw_interpretations = generate_interpretations_from_prompt(
        paei_scores=test_results['paei'],
        disc_scores=test_results['disc'],
        hexaco_scores=test_results['hexaco'],
        soft_skills_scores=test_results['soft']
    )
    
    if 'paei' in raw_interpretations:
        print("‚úÖ PAEI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞")
        raw_adizes = raw_interpretations['paei']
        
        print(f"üìä –ò—Å—Ö–æ–¥–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:")
        print(f"   ‚Ä¢ –î–ª–∏–Ω–∞: {len(raw_adizes)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   ‚Ä¢ –°—Ç—Ä–æ–∫: {len(raw_adizes.split('\n'))}")
        
        # –°—á–∏—Ç–∞–µ–º –º–∞—Ä–∫–¥–∞—É–Ω —ç–ª–µ–º–µ–Ω—Ç—ã
        markdown_before = {
            'bold': raw_adizes.count('**'),
            'headers': raw_adizes.count('###'),
            'separators': raw_adizes.count('---'),
            'lists': raw_adizes.count('- ')
        }
        print(f"   ‚Ä¢ –ú–∞—Ä–∫–¥–∞—É–Ω —ç–ª–µ–º–µ–Ω—Ç—ã –î–û: {markdown_before}")
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ formatter
        print("\nüîÑ –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ interpretation_formatter...")
        formatted_interpretations = format_ai_interpretations(raw_interpretations)
        
        if 'paei' in formatted_interpretations:
            formatted_adizes = formatted_interpretations['paei']
            
            print(f"üìä –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:")
            print(f"   ‚Ä¢ –î–ª–∏–Ω–∞: {len(formatted_adizes)} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"   ‚Ä¢ –°—Ç—Ä–æ–∫: {len(formatted_adizes.split('\n'))}")
            
            # –°—á–∏—Ç–∞–µ–º –º–∞—Ä–∫–¥–∞—É–Ω —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ—Å–ª–µ
            markdown_after = {
                'bold': formatted_adizes.count('**'),
                'headers': formatted_adizes.count('###'),
                'separators': formatted_adizes.count('---'),
                'lists': formatted_adizes.count('- ')
            }
            print(f"   ‚Ä¢ –ú–∞—Ä–∫–¥–∞—É–Ω —ç–ª–µ–º–µ–Ω—Ç—ã –ü–û–°–õ–ï: {markdown_after}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            changed = any(markdown_before[k] != markdown_after[k] for k in markdown_before)
            if changed:
                print("‚ö†Ô∏è –§–æ—Ä–º–∞—Ç—Ç–µ—Ä –∏–∑–º–µ–Ω–∏–ª –º–∞—Ä–∫–¥–∞—É–Ω —Ä–∞–∑–º–µ—Ç–∫—É!")
                for key in markdown_before:
                    if markdown_before[key] != markdown_after[key]:
                        print(f"   ‚Ä¢ {key}: {markdown_before[key]} ‚Üí {markdown_after[key]}")
            else:
                print("‚úÖ –ú–∞—Ä–∫–¥–∞—É–Ω —Ä–∞–∑–º–µ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
                
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é
            lines = formatted_adizes.split('\n')[:10]
            print(f"\nüìÑ –ü—Ä–µ–≤—å—é –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏:")
            for line in lines:
                print(f"   {line}")
            if len(formatted_adizes.split('\n')) > 10:
                print("   ...")
        else:
            print("‚ùå PAEI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –ø–æ—Ç–µ—Ä—è–Ω–∞ –ø–æ—Å–ª–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!")
    else:
        print("‚ùå PAEI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!")
    
    print("\n" + "=" * 60)

if __name__ == "__main__":
    test_adizes_through_formatter()