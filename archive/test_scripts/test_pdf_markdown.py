#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ–≥–æ PDF –æ—Ç—á–µ—Ç–∞ —Å –Ω–æ–≤–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–µ–π –ê–¥–∏–∑–µ—Å–∞
"""

from enhanced_pdf_report_v2 import EnhancedPDFReportV2
from interpretation_utils import generate_interpretations_from_prompt
import tempfile
import os

def test_pdf_with_adizes_markdown():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é PDF —Å –º–∞—Ä–∫–¥–∞—É–Ω —Ä–∞–∑–º–µ—Ç–∫–æ–π –ê–¥–∏–∑–µ—Å–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PDF —Å –º–∞—Ä–∫–¥–∞—É–Ω —Ä–∞–∑–º–µ—Ç–∫–æ–π –ê–¥–∏–∑–µ—Å–∞")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = {
        'name': '–¢–µ—Å—Ç –ú–∞—Ä–∫–¥–∞—É–Ω',
        'user_id': 'test_markdown_12345'
    }
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_results = {
        'paei': {'P': 1, 'A': 2, 'E': 4, 'I': 1},  # –î–æ–º–∏–Ω–∏—Ä—É–µ—Ç –ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å
        'disc': {'D': 4.0, 'I': 3.0, 'S': 2.5, 'C': 3.0},
        'hexaco': {'H': 3.8, 'E': 4.2, 'X': 3.5, 'A': 4.0, 'C': 3.9, 'O': 4.3},
        'soft': {'leadership': 4, 'communication': 5, 'teamwork': 3, 'creativity': 4,
                'time_management': 3, 'critical_thinking': 4, 'adaptability': 5,
                'problem_solving': 4, 'emotional_intelligence': 3, 'conflict_resolution': 4}
    }
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏
    print("üìù –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏...")
    interpretations = generate_interpretations_from_prompt(
        paei_scores=test_results['paei'],
        disc_scores=test_results['disc'],
        hexaco_scores=test_results['hexaco'],
        soft_skills_scores=test_results['soft']
    )
    
    print(f"‚úÖ –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã: {list(interpretations.keys())}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –ê–¥–∏–∑–µ—Å–∞
    if 'paei' in interpretations:
        adizes_text = interpretations['paei']
        print(f"üìä –î–ª–∏–Ω–∞ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –ê–¥–∏–∑–µ—Å–∞: {len(adizes_text)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ä–∫–¥–∞—É–Ω —ç–ª–µ–º–µ–Ω—Ç—ã
        markdown_count = {
            'bold': adizes_text.count('**'),
            'headers': adizes_text.count('###'),
            'separators': adizes_text.count('---'),
            'lists': adizes_text.count('- ')
        }
        print(f"üìù –ú–∞—Ä–∫–¥–∞—É–Ω —ç–ª–µ–º–µ–Ω—Ç—ã: {markdown_count}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF –æ—Ç—á–µ—Ç
    print("\nüìÑ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF –æ—Ç—á–µ—Ç...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è PDF
        from pathlib import Path
        pdf_path = Path(f"test_adizes_markdown_{user_data['user_id']}.pdf")
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤
        pdf_generator = EnhancedPDFReportV2()
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF —Å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è–º–∏
        pdf_path_obj, gdrive_link = pdf_generator.generate_enhanced_report(
            participant_name=user_data['name'],
            test_date="2025-10-24",
            paei_scores=test_results['paei'],
            disc_scores=test_results['disc'],
            hexaco_scores=test_results['hexaco'],
            soft_skills_scores=test_results['soft'],
            ai_interpretations=interpretations,
            out_path=pdf_path,
            user_answers=None
        )
        
        if pdf_path_obj and os.path.exists(pdf_path):
            file_size = os.path.getsize(pdf_path)
            print(f"‚úÖ PDF —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
            print(f"üìÅ –ü—É—Ç—å: {pdf_path}")
            print(f"üìè –†–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç")
            
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª
            print(f"\nüîç –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∞—Ä–∫–¥–∞—É–Ω —Ä–∞–∑–º–µ—Ç–∫–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª:")
            print(f"   {pdf_path}")
            
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 60)

if __name__ == "__main__":
    test_pdf_with_adizes_markdown()