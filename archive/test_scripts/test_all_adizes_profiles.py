#!/usr/bin/env python3
"""
–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –ê–¥–∏–∑–µ—Å–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π
"""

from interpretation_utils import generate_interpretations_from_prompt

def test_different_profiles():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –ø—Ä–æ—Ñ–∏–ª–µ–π PAEI"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –ê–¥–∏–∑–µ—Å–∞")
    print("=" * 70)
    
    test_cases = [
        {
            'name': '–î–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å (P)',
            'paei': {'P': 4, 'A': 1, 'E': 1, 'I': 0}
        },
        {
            'name': '–î–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (A)',
            'paei': {'P': 1, 'A': 4, 'E': 0, 'I': 1}
        },
        {
            'name': '–î–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π –ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å (E)',
            'paei': {'P': 0, 'A': 1, 'E': 4, 'I': 1}
        },
        {
            'name': '–î–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π –ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä (I)',
            'paei': {'P': 1, 'A': 0, 'E': 1, 'I': 4}
        },
        {
            'name': '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å',
            'paei': {'P': 2, 'A': 2, 'E': 2, 'I': 2}
        }
    ]
    
    for i, test_case in enumerate(test_cases, 1):
        print(f"\nüìã –¢–µ—Å—Ç {i}: {test_case['name']}")
        print("-" * 50)
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_results = {
            'paei': test_case['paei'],
            'disc': {'D': 15, 'I': 12, 'S': 10, 'C': 8},
            'soft': {'leadership': 4, 'communication': 5, 'teamwork': 3},
            'hexaco': {'H': 3.5, 'E': 4.0, 'X': 3.8, 'A': 4.2, 'C': 3.9, 'O': 4.1}
        }
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏
        interpretations = generate_interpretations_from_prompt(
            paei_scores=test_results['paei'],
            disc_scores=test_results['disc'],
            hexaco_scores=test_results['hexaco'],
            soft_skills_scores=test_results['soft']
        )
        
        if 'paei' in interpretations:
            paei_text = interpretations['paei']
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫
            lines = paei_text.split('\n')
            preview_lines = lines[:8]  # –ü–µ—Ä–≤—ã–µ 8 —Å—Ç—Ä–æ–∫
            
            print("üìÑ –ü—Ä–µ–≤—å—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏:")
            for line in preview_lines:
                print(f"   {line}")
            
            if len(lines) > 8:
                print(f"   ... (–µ—â–µ {len(lines) - 8} —Å—Ç—Ä–æ–∫)")
            
            print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"   ‚Ä¢ –î–ª–∏–Ω–∞: {len(paei_text)} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"   ‚Ä¢ –°—Ç—Ä–æ–∫: {len(lines)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ä–∫–¥–∞—É–Ω —ç–ª–µ–º–µ–Ω—Ç—ã
            markdown_elements = []
            if '**' in paei_text:
                markdown_elements.append("–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç")
            if '###' in paei_text:
                markdown_elements.append("–ó–∞–≥–æ–ª–æ–≤–∫–∏")
            if '---' in paei_text:
                markdown_elements.append("–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏")
            if '- ' in paei_text:
                markdown_elements.append("–°–ø–∏—Å–∫–∏")
                
            print(f"   ‚Ä¢ –ú–∞—Ä–∫–¥–∞—É–Ω: {', '.join(markdown_elements) if markdown_elements else '–ù–µ—Ç'}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ —Ä–æ–ª–∏
            role_names = {'P': '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å', 'A': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', 'E': '–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å', 'I': '–ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä'}
            max_role = max(test_case['paei'], key=test_case['paei'].get)
            expected_role = role_names[max_role]
            
            if expected_role in paei_text or max_role in paei_text:
                print(f"   ‚úÖ –†–æ–ª—å {expected_role} ({max_role}) –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ç–µ–∫—Å—Ç–µ")
            else:
                print(f"   ‚ö†Ô∏è –†–æ–ª—å {expected_role} ({max_role}) –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ç–µ–∫—Å—Ç–µ")
                
        else:
            print("‚ùå –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è PAEI –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
    
    print("\n" + "=" * 70)
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_different_profiles()