#!/usr/bin/env python3
"""–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–≥—Ä—É–∑–∫—É –≤ Google Drive"""

from oauth_google_drive import setup_oauth_google_drive
from datetime import datetime, timedelta

def main():
    try:
        service = setup_oauth_google_drive()
        if not service:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ Google Drive")
            return

        # ID –≤–∞—à–µ–π –ø–∞–ø–∫–∏
        folder_id = "1TI-P8ZGj0IOjw97OmEpjyVc7jAW_hsy2"
        
        print(f"–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É: {folder_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∞–º—É –ø–∞–ø–∫—É
        try:
            folder = service.files().get(fileId=folder_id, fields="id,name").execute()
            print(f"‚úÖ –ü–∞–ø–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞: {folder.get('name')}")
        except Exception as e:
            print(f"‚ùå –ü–∞–ø–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {e}")
            return
        
        # –ò—â–µ–º –ø–∞–ø–∫—É October –≤–Ω—É—Ç—Ä–∏ 2025
        print("\nüîç –ü–æ–∏—Å–∫ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫...")
        
        # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –ø–∞–ø–∫—É 2025
        query = f"'{folder_id}' in parents and name='2025' and mimeType='application/vnd.google-apps.folder'"
        results = service.files().list(q=query, fields="files(id, name)").execute()
        year_folders = results.get('files', [])
        
        if year_folders:
            year_folder_id = year_folders[0]['id']
            print(f"üìÅ –ù–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ 2025: {year_folder_id}")
            
            # –¢–µ–ø–µ—Ä—å –∏—â–µ–º –ø–∞–ø–∫—É October
            query = f"'{year_folder_id}' in parents and name='10-October' and mimeType='application/vnd.google-apps.folder'"
            results = service.files().list(q=query, fields="files(id, name)").execute()
            month_folders = results.get('files', [])
            
            if month_folders:
                month_folder_id = month_folders[0]['id']
                print(f"üìÅ –ù–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ 10-October: {month_folder_id}")
                
                # –ò—â–µ–º —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ October
                query = f"'{month_folder_id}' in parents"
                results = service.files().list(q=query, fields="files(id, name, createdTime, webViewLink)", orderBy="createdTime desc").execute()
                files = results.get('files', [])
                
                print(f"\nüìä –§–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ 10-October ({len(files)} —à—Ç.):")
                for file in files:
                    created = file.get('createdTime', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                    print(f"  üìÑ {file['name']}")
                    print(f"      –°–æ–∑–¥–∞–Ω: {created}")
                    print(f"      ID: {file['id']}")
                    print(f"      –°—Å—ã–ª–∫–∞: {file.get('webViewLink', '–ù–µ—Ç —Å—Å—ã–ª–∫–∏')}")
                    print()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
                test_files = [f for f in files if 'TEST' in f['name']]
                if test_files:
                    latest_test = test_files[0]
                    print(f"üéØ –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {latest_test['name']}")
                    print(f"üîó –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞: {latest_test.get('webViewLink')}")
                else:
                    print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            else:
                print("‚ùå –ü–∞–ø–∫–∞ 10-October –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("‚ùå –ü–∞–ø–∫–∞ 2025 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
            # –ü–æ–∫–∞–∂–µ–º —á—Ç–æ –µ—Å—Ç—å –≤ –∫–æ—Ä–Ω–µ
            query = f"'{folder_id}' in parents"
            results = service.files().list(q=query, fields="files(id, name, mimeType)").execute()
            root_files = results.get('files', [])
            
            print(f"\n–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏:")
            for file in root_files:
                icon = "üìÅ" if file['mimeType'] == 'application/vnd.google-apps.folder' else "üìÑ"
                print(f"  {icon} {file['name']} (ID: {file['id']})")
        
    except Exception as e:
        print(f"ERROR: {e}")

if __name__ == "__main__":
    main()