#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Google Drive OAuth –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
"""

import os
from oauth_google_drive import setup_oauth_google_drive, create_monthly_folder_structure

def test_google_drive_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Drive"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Drive...")
    
    service = setup_oauth_google_drive()
    if not service:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Google Drive")
        return False
    
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Drive —É—Å–ø–µ—à–Ω–æ")
    return service

def test_folder_search(service):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–∞–ø–æ–∫"""
    print("\nüîç –ü–æ–∏—Å–∫ –ø–∞–ø–∫–∏ MyAiProjects...")
    
    try:
        # –ü–æ–∏—Å–∫ –ø–∞–ø–∫–∏ MyAiProjects
        query = "name='MyAiProjects' and mimeType='application/vnd.google-apps.folder'"
        results = service.files().list(q=query, fields="files(id, name, parents)").execute()
        folders = results.get('files', [])
        
        if folders:
            folder = folders[0]
            print(f"‚úÖ –ü–∞–ø–∫–∞ MyAiProjects –Ω–∞–π–¥–µ–Ω–∞:")
            print(f"   ID: {folder['id']}")
            print(f"   –ò–º—è: {folder['name']}")
            print(f"   –†–æ–¥–∏—Ç–µ–ª–∏: {folder.get('parents', '–ö–æ—Ä–µ–Ω—å')}")
            return folder['id']
        else:
            print("‚ùå –ü–∞–ø–∫–∞ MyAiProjects –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–∞–ø–∫–∏: {e}")
        return None

def test_monthly_structure(service):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –º–µ—Å—è—á–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Å—è—á–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...")
    
    try:
        folder_id = create_monthly_folder_structure(service, 2025, 10, "PsychTest Reports")
        
        if folder_id:
            print(f"‚úÖ –ú–µ—Å—è—á–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            print(f"   ID –ø–∞–ø–∫–∏ –æ–∫—Ç—è–±—Ä—è: {folder_id}")
            return folder_id
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –º–µ—Å—è—á–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: {e}")
        return None

def test_file_upload(service, folder_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞"""
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –≤ –ø–∞–ø–∫—É {folder_id}...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    test_filename = "test_google_drive.txt"
    test_content = f"""–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Google Drive –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: {os.popen('date /t & time /t').read()}
–ü–∞–ø–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è: {folder_id}
"""
    
    try:
        with open(test_filename, 'w', encoding='utf-8') as f:
            f.write(test_content)
        
        from googleapiclient.http import MediaFileUpload
        
        # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞
        file_metadata = {
            'name': test_filename,
            'parents': [folder_id]
        }
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
        media = MediaFileUpload(test_filename, mimetype='text/plain')
        file = service.files().create(
            body=file_metadata,
            media_body=media,
            fields='id,webViewLink'
        ).execute()
        
        # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        os.remove(test_filename)
        
        file_id = file.get('id')
        web_link = file.get('webViewLink')
        
        print(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ:")
        print(f"   ID —Ñ–∞–π–ª–∞: {file_id}")
        print(f"   –°—Å—ã–ª–∫–∞: {web_link}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: {e}")
        if os.path.exists(test_filename):
            os.remove(test_filename)
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("=" * 60)
    print("           –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï GOOGLE DRIVE –ò–ù–¢–ï–ì–†–ê–¶–ò–ò")
    print("=" * 60)
    
    # 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    service = test_google_drive_connection()
    if not service:
        return
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–∞–ø–æ–∫
    main_folder_id = test_folder_search(service)
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    month_folder_id = test_monthly_structure(service)
    
    # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞
    if month_folder_id:
        success = test_file_upload(service, month_folder_id)
        
        print("\n" + "=" * 60)
        if success:
            print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
            print("   –û—Ç—á–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –≤ Google Drive")
        else:
            print("‚ùå –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´")
            print("   –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π")
        print("=" * 60)
    
if __name__ == "__main__":
    main()