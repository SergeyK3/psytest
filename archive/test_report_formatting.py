#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è PDF –æ—Ç—á–µ—Ç–∞
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ –±–µ–∑ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
"""

import os
import sys
from datetime import datetime
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent / "src"))

from enhanced_pdf_report_v2 import EnhancedPDFReportV2
from oauth_google_drive import upload_to_google_drive_oauth

def get_test_answers():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã PAEI (–ê–¥–∏–∑–µ—Å)
    paei_answers = {
        '0': 'P',  # –í–æ–ø—Ä–æ—Å 1: Producer
        '1': 'A',  # –í–æ–ø—Ä–æ—Å 2: Administrator  
        '2': 'E',  # –í–æ–ø—Ä–æ—Å 3: Entrepreneur
        '3': 'I',  # –í–æ–ø—Ä–æ—Å 4: Integrator
        '4': 'P'   # –í–æ–ø—Ä–æ—Å 5: Producer
    }
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã DISC (8 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ 2 –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é)
    disc_answers = {
        '0': 5,  # D1: –†–µ—à–∏—Ç–µ–ª—å–Ω—ã–π
        '1': 4,  # D2: –í–ª–∞—Å—Ç–Ω—ã–π
        '2': 3,  # I1: –û–±—â–∏—Ç–µ–ª—å–Ω—ã–π
        '3': 4,  # I2: –í–ª–∏—è—Ç–µ–ª—å–Ω—ã–π
        '4': 2,  # S1: –°—Ç–∞–±–∏–ª—å–Ω—ã–π
        '5': 3,  # S2: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π
        '6': 4,  # C1: –¢–æ—á–Ω—ã–π
        '7': 5   # C2: –°–æ–±–ª—é–¥–∞—é—â–∏–π –ø—Ä–∞–≤–∏–ª–∞
    }
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã Soft Skills (10 –≤–æ–ø—Ä–æ—Å–æ–≤)
    soft_skills_answers = {
        '0': 4,  # –ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è
        '1': 5,  # –õ–∏–¥–µ—Ä—Å—Ç–≤–æ
        '2': 3,  # –†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ
        '3': 4,  # –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å
        '4': 5,  # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ
        '5': 3,  # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–µ–º
        '6': 4,  # –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç
        '7': 5,  # –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º
        '8': 4,  # –ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å
        '9': 3   # –°—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å
    }
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã HEXACO (6 –≤–æ–ø—Ä–æ—Å–æ–≤)
    hexaco_answers = {
        '0': 4,  # –ß–µ—Å—Ç–Ω–æ—Å—Ç—å-–°–∫—Ä–æ–º–Ω–æ—Å—Ç—å
        '1': 3,  # –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
        '2': 5,  # –≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è
        '3': 4,  # –î–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        '4': 3,  # –î–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å
        '5': 4   # –û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –æ–ø—ã—Ç—É
    }
    
    return {
        'PAEI': paei_answers,
        'DISC': disc_answers,
        'SOFT_SKILLS': soft_skills_answers,
        'HEXACO': hexaco_answers
    }

def create_test_user_data():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    return {
        'first_name': '–¢–µ—Å—Ç–æ–≤—ã–π',
        'last_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        'telegram_id': 'test_user',
        'username': 'test_format'
    }

def test_user_report():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ—Ç—á–µ—Ç (–∫—Ä–∞—Ç–∫–∏–π)"""
    print("üî¨ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞ (–∫—Ä–∞—Ç–∫–∏–π —Ñ–æ—Ä–º–∞—Ç)...")
    
    user_data = create_test_user_data()
    answers = get_test_answers()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º timestamp –¥–ª—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    user_filename = f"{timestamp}_TEST_USER_report.pdf"
    
    try:
        from pathlib import Path
        
        generator = EnhancedPDFReportV2(include_questions_section=False)
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç—ã –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
        paei_scores = {'P': 2, 'A': 1, 'E': 1, 'I': 1}  # –ü–æ–¥—Å—á–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤
        disc_scores = {'D': 4.5, 'I': 3.5, 'S': 2.5, 'C': 4.5}  # –°—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
        hexaco_scores = {'H': 4, 'E': 3, 'eX': 5, 'A': 4, 'C': 3, 'O': 4}
        soft_skills_scores = {
            'Communication': 4, 'Leadership': 5, 'Teamwork': 3,
            'Adaptability': 4, 'Critical Thinking': 5, 'Time Management': 3,
            'Emotional Intelligence': 4, 'Problem Solving': 5,
            'Creativity': 4, 'Stress Management': 3
        }
        
        generator.generate_enhanced_report(
            participant_name=f"{user_data['first_name']} {user_data['last_name']}",
            test_date=timestamp,
            paei_scores=paei_scores,
            disc_scores=disc_scores,
            hexaco_scores=hexaco_scores,
            soft_skills_scores=soft_skills_scores,
            ai_interpretations={},
            out_path=Path(user_filename),
            user_answers=None  # –ö—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç –±–µ–∑ –æ—Ç–≤–µ—Ç–æ–≤
        )
        
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: {user_filename}")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ Google Drive
        print("üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç—á–µ—Ç –≤ Google Drive...")
        gdrive_link = upload_to_google_drive_oauth(user_filename)
        
        if gdrive_link:
            print(f"üéâ –û—Ç—á–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Google Drive: {gdrive_link}")
        else:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤ Google Drive")
        
        return user_filename
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
        return None

def test_full_report():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç (—Å –¥–µ—Ç–∞–ª—è–º–∏ –≤–æ–ø—Ä–æ—Å–æ–≤)"""
    print("üî¨ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ (—Å –¥–µ—Ç–∞–ª—è–º–∏ –≤–æ–ø—Ä–æ—Å–æ–≤)...")
    
    user_data = create_test_user_data()
    answers = get_test_answers()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º timestamp –¥–ª—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    full_filename = f"{timestamp}_TEST_FULL_report.pdf"
    
    try:
        from pathlib import Path
        
        generator = EnhancedPDFReportV2(include_questions_section=True)
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç—ã –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
        paei_scores = {'P': 2, 'A': 1, 'E': 1, 'I': 1}  # –ü–æ–¥—Å—á–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤
        disc_scores = {'D': 4.5, 'I': 3.5, 'S': 2.5, 'C': 4.5}  # –°—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
        hexaco_scores = {'H': 4, 'E': 3, 'eX': 5, 'A': 4, 'C': 3, 'O': 4}
        soft_skills_scores = {
            'Communication': 4, 'Leadership': 5, 'Teamwork': 3,
            'Adaptability': 4, 'Critical Thinking': 5, 'Time Management': 3,
            'Emotional Intelligence': 4, 'Problem Solving': 5,
            'Creativity': 4, 'Stress Management': 3
        }
        
        generator.generate_enhanced_report(
            participant_name=f"{user_data['first_name']} {user_data['last_name']}",
            test_date=timestamp,
            paei_scores=paei_scores,
            disc_scores=disc_scores,
            hexaco_scores=hexaco_scores,
            soft_skills_scores=soft_skills_scores,
            ai_interpretations={},
            out_path=Path(full_filename),
            user_answers=answers  # –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç —Å –¥–µ—Ç–∞–ª—è–º–∏ –æ—Ç–≤–µ—Ç–æ–≤
        )
        
        print(f"‚úÖ –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: {full_filename}")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ Google Drive
        print("üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç—á–µ—Ç –≤ Google Drive...")
        gdrive_link = upload_to_google_drive_oauth(full_filename)
        
        if gdrive_link:
            print(f"üéâ –û—Ç—á–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Google Drive: {gdrive_link}")
        else:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤ Google Drive")
        
        return full_filename
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
        return None

def test_both_reports():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–±–∞ —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è"""
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤")
    print("=" * 50)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ—Ç—á–µ—Ç
    user_file = test_user_report()
    print()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç  
    full_file = test_full_report()
    print()
    
    print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("-" * 30)
    
    if user_file and os.path.exists(user_file):
        print(f"üìÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ—Ç—á–µ—Ç: {user_file}")
        print(f"üìè –†–∞–∑–º–µ—Ä: {os.path.getsize(user_file)} –±–∞–π—Ç")
    else:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ—Ç—á–µ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω")
    
    if full_file and os.path.exists(full_file):
        print(f"üìÑ –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç: {full_file}")
        print(f"üìè –†–∞–∑–º–µ—Ä: {os.path.getsize(full_file)} –±–∞–π—Ç")
    else:
        print("‚ùå –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω")
    
    print()
    print("üîç –ß—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ –æ—Ç—á–µ—Ç–∞—Ö:")
    print("‚Ä¢ –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
    print("‚Ä¢ –†–∞–∑–º–µ—Ä—ã –∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏ –¥–∏–∞–≥—Ä–∞–º–º") 
    print("‚Ä¢ –ß–∏—Ç–∞–µ–º–æ—Å—Ç—å —Ç–µ–∫—Å—Ç–∞ –∏ –æ—Ç—Å—Ç—É–ø—ã")
    print("‚Ä¢ –ü–µ—Ä–µ–Ω–æ—Å—ã –Ω–∞ –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É")
    print("‚Ä¢ –û–±—â–∏–π –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –∏ –∫–æ–º–ø–æ–Ω–æ–≤–∫—É")

def quick_user_report():
    """–ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞"""
    return test_user_report()

def quick_full_report():
    """–ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞"""
    return test_full_report()

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–æ–≤—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print()
    
    if len(sys.argv) > 1:
        mode = sys.argv[1].lower()
        
        if mode == 'user':
            quick_user_report()
        elif mode == 'full':
            quick_full_report()
        elif mode == 'both':
            test_both_reports()
        else:
            print("‚ùì –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
            print("  python test_report_formatting.py user   # –¢–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ—Ç—á–µ—Ç")
            print("  python test_report_formatting.py full   # –¢–æ–ª—å–∫–æ –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç") 
            print("  python test_report_formatting.py both   # –û–±–∞ –æ—Ç—á–µ—Ç–∞")
    else:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–±–∞ –æ—Ç—á–µ—Ç–∞
        test_both_reports()