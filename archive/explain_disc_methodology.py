#!/usr/bin/env python3
"""
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ DISC - –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–¥—Å—á–µ—Ç –±–∞–ª–ª–æ–≤
"""

def explain_disc_methodology():
    """–û–±—ä—è—Å–Ω—è–µ–º –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—é DISC –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ"""
    print("üéØ –ú–ï–¢–û–î–û–õ–û–ì–ò–Ø DISC - –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ")
    print("=" * 60)
    
    print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–µ—Å—Ç–∞:")
    print("   ‚Ä¢ 8 –≤–æ–ø—Ä–æ—Å–æ–≤ (–ø–æ 2 –Ω–∞ –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é)")
    print("   ‚Ä¢ 4 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: D (–î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ), I (–í–ª–∏—è–Ω–∏–µ), S (–ü–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ), C (–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ)")
    print("   ‚Ä¢ –®–∫–∞–ª–∞ –æ—Ç–≤–µ—Ç–æ–≤: 1-5 –±–∞–ª–ª–æ–≤")
    
    print("\nüìù –ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞:")
    print("-" * 40)
    
    # –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤
    questions_example = [
        {"text": "–Ø –±–µ—Ä—É—é –Ω–∞ —Å–µ–±—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏", "category": "D"},
        {"text": "–Ø —Å—Ç—Ä–µ–º–ª—é—Å—å –∫ –±—ã—Å—Ç—Ä–æ–º—É –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é —Ü–µ–ª–µ–π", "category": "D"},
        {"text": "–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –ª—é–¥–µ–π –Ω–∞ –Ω–æ–≤—ã–µ –∏–¥–µ–∏", "category": "I"},
        {"text": "–Ø –ª–µ–≥–∫–æ –∑–∞–≤–æ–∂—É –Ω–æ–≤—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞", "category": "I"},
        {"text": "–Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é —Å—Ç–∞–±–∏–ª—å–Ω—É—é —Å—Ä–µ–¥—É", "category": "S"},
        {"text": "–ú–Ω–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ —Å–ª–µ–¥–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º", "category": "S"},
        {"text": "–Ø –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è—é –¥–µ—Ç–∞–ª–∏", "category": "C"},
        {"text": "–Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏", "category": "C"}
    ]
    
    # –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_answers = [5, 4, 2, 3, 3, 4, 5, 4]  # –û—Ü–µ–Ω–∫–∏ 1-5 –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    
    print("–í–æ–ø—Ä–æ—Å ‚Üí –û—Ç–≤–µ—Ç ‚Üí –ö–∞—Ç–µ–≥–æ—Ä–∏—è")
    disc_totals = {"D": 0, "I": 0, "S": 0, "C": 0}
    
    for i, (question, answer) in enumerate(zip(questions_example, user_answers)):
        category = question["category"]
        disc_totals[category] += answer
        print(f"{i+1}. {question['text'][:40]}... ‚Üí {answer} ‚Üí {category}")
    
    print(f"\nüìä –ò—Ç–æ–≥–æ–≤—ã–µ –±–∞–ª–ª—ã:")
    print(f"   D (–î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ): {disc_totals['D']}/10 (–∏–∑ 2 –≤–æ–ø—Ä–æ—Å–æ–≤: 5+4=9)")
    print(f"   I (–í–ª–∏—è–Ω–∏–µ): {disc_totals['I']}/10 (–∏–∑ 2 –≤–æ–ø—Ä–æ—Å–æ–≤: 2+3=5)")
    print(f"   S (–ü–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ): {disc_totals['S']}/10 (–∏–∑ 2 –≤–æ–ø—Ä–æ—Å–æ–≤: 3+4=7)")
    print(f"   C (–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ): {disc_totals['C']}/10 (–∏–∑ 2 –≤–æ–ø—Ä–æ—Å–æ–≤: 5+4=9)")

def explain_key_points():
    """–ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏"""
    print("\nüí° –ö–õ–Æ–ß–ï–í–´–ï –ú–û–ú–ï–ù–¢–´:")
    print("=" * 40)
    
    print("\n‚ùì –í–æ–ø—Ä–æ—Å: –í–ª–∏—è–µ—Ç –ª–∏ –∫–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏?")
    print("‚úÖ –û—Ç–≤–µ—Ç: –ù–ï–¢! –ö–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –û–î–ù–û–ô –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    
    print("\nüéØ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:")
    print("   1. –ö–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å –∑–∞—Ä–∞–Ω–µ–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (D/I/S/C)")
    print("   2. –í–∞—à –æ—Ç–≤–µ—Ç (1-5 –±–∞–ª–ª–æ–≤) –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –¢–û–õ–¨–ö–û –∫ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    print("   3. –ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–ª = —Å—É–º–º–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    
    print("\nüìà –î–∏–∞–ø–∞–∑–æ–Ω—ã –±–∞–ª–ª–æ–≤:")
    print("   ‚Ä¢ –ú–∏–Ω–∏–º—É–º: 8 –±–∞–ª–ª–æ–≤ (8 –≤–æ–ø—Ä–æ—Å–æ–≤ √ó 1 –±–∞–ª–ª = 8)")
    print("   ‚Ä¢ –ú–∞–∫—Å–∏–º—É–º: 40 –±–∞–ª–ª–æ–≤ (8 –≤–æ–ø—Ä–æ—Å–æ–≤ √ó 5 –±–∞–ª–ª–æ–≤ = 40)")
    print("   ‚Ä¢ –ù–æ –Ω–µ –≤—Å–µ 8 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–¥—É—Ç –≤ –æ–¥–Ω—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é!")
    
    print("\nüîç –†–µ–∞–ª—å–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã (–ø—Ä–∏ 2 –≤–æ–ø—Ä–æ—Å–∞—Ö –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é):")
    print("   ‚Ä¢ –ú–∏–Ω–∏–º—É–º: 2 –±–∞–ª–ª–∞ (2 –≤–æ–ø—Ä–æ—Å–∞ √ó 1 –±–∞–ª–ª = 2)")
    print("   ‚Ä¢ –ú–∞–∫—Å–∏–º—É–º: 10 –±–∞–ª–ª–æ–≤ (2 –≤–æ–ø—Ä–æ—Å–∞ √ó 5 –±–∞–ª–ª–æ–≤ = 10)")
    
def explain_your_results():
    """–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ D=32, I=20, S=28, C=24"""
    print("\nüéØ –ê–ù–ê–õ–ò–ó –í–ê–®–ò–• –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:")
    print("=" * 40)
    
    your_results = {"D": 32, "I": 20, "S": 28, "C": 24}
    total = sum(your_results.values())
    
    print(f"–í–∞—à–∏ –±–∞–ª–ª—ã: {your_results}")
    print(f"–û–±—â–∞—è —Å—É–º–º–∞: {total} –±–∞–ª–ª–æ–≤")
    
    # –ï—Å–ª–∏ 8 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –∫–∞–∂–¥—ã–π 1-5 –±–∞–ª–ª–æ–≤, —Ç–æ –º–∞–∫—Å–∏–º—É–º = 8*5 = 40 –±–∞–ª–ª–æ–≤ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞
    # –ù–æ –±–∞–ª–ª—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    
    print(f"\nü§î –ê–Ω–∞–ª–∏–∑:")
    questions_per_category = total / sum(your_results.values()) * len(your_results)
    avg_per_category = total / len(your_results)
    
    print(f"   ‚Ä¢ –û–±—â–∞—è —Å—É–º–º–∞: {total} –±–∞–ª–ª–æ–≤")
    print(f"   ‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {avg_per_category:.1f} –±–∞–ª–ª–æ–≤")
    print(f"   ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: D = {your_results['D']} –±–∞–ª–ª–æ–≤")
    print(f"   ‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: I = {your_results['I']} –±–∞–ª–ª–æ–≤")
    
    if total > 40:
        estimated_questions = total // 5  # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –µ—Å–ª–∏ –≤—Å–µ –æ—Ç–≤–µ—á–∞–ª–∏ –Ω–∞ 5
        print(f"\nüí≠ –ü—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ: –í —Ç–µ—Å—Ç–µ –±—ã–ª–æ –æ–∫–æ–ª–æ {estimated_questions} –≤–æ–ø—Ä–æ—Å–æ–≤")
        print(f"   (–µ—Å–ª–∏ —Å—Ä–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç –±—ã–ª 5 –±–∞–ª–ª–æ–≤)")
    
def check_current_system():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å–∏—Å—Ç–µ–º—É –≤ –∫–æ–¥–µ"""
    print("\nüîß –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ô –°–ò–°–¢–ï–ú–´:")
    print("=" * 40)
    
    try:
        import sys, os
        current_dir = os.path.dirname(os.path.abspath(__file__))
        sys.path.insert(0, current_dir)
        
        from telegram_test_bot import DISC_QUESTIONS
        
        print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(DISC_QUESTIONS)} DISC –≤–æ–ø—Ä–æ—Å–æ–≤")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        category_count = {"D": 0, "I": 0, "S": 0, "C": 0}
        
        for i, q in enumerate(DISC_QUESTIONS):
            if 'category' in q:
                category = q['category']
                category_count[category] += 1
                print(f"   –í–æ–ø—Ä–æ—Å {i+1}: {q['category']} - {q['question'][:50]}...")
            else:
                print(f"   –í–æ–ø—Ä–æ—Å {i+1}: –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç - {list(q.get('answers', {}).keys())}")
        
        print(f"\nüìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
        for category, count in category_count.items():
            print(f"   {category}: {count} –≤–æ–ø—Ä–æ—Å–æ–≤")
        
        return category_count
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
        return None

if __name__ == "__main__":
    explain_disc_methodology()
    explain_key_points()
    explain_your_results()
    check_current_system()