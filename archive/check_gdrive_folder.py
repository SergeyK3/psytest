#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Google Drive –ø–∞–ø–æ–∫ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
"""

from oauth_google_drive import setup_oauth_google_drive

def check_folder_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ"""
    
    service = setup_oauth_google_drive()
    if not service:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Google Drive")
        return
    
    try:
        # –ë–∞–∑–æ–≤–∞—è –ø–∞–ø–∫–∞
        base_folder_id = "1TI-P8ZGj0IOjw97OmEpjyVc7jAW_hsy2"
        print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é –ø–∞–ø–∫—É: {base_folder_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–∑–æ–≤–æ–π –ø–∞–ø–∫–µ
        base_folder = service.files().get(fileId=base_folder_id, fields="id,name").execute()
        print(f"üìÅ –ë–∞–∑–æ–≤–∞—è –ø–∞–ø–∫–∞: {base_folder['name']} (ID: {base_folder['id']})")
        
        # –ò—â–µ–º –ø–∞–ø–∫—É 2025
        query = f"name='2025' and mimeType='application/vnd.google-apps.folder' and '{base_folder_id}' in parents"
        results = service.files().list(q=query, fields="files(id, name)").execute()
        year_folders = results.get('files', [])
        
        print(f"üîç –ù–∞–π–¥–µ–Ω–æ –ø–∞–ø–æ–∫ '2025': {len(year_folders)}")
        for folder in year_folders:
            year_id = folder['id']
            print(f"üìÅ –ü–∞–ø–∫–∞ 2025: {folder['name']} (ID: {year_id})")
            
            # –ò—â–µ–º –ø–∞–ø–∫—É –º–µ—Å—è—Ü–∞ –≤ –∫–∞–∂–¥–æ–π –ø–∞–ø–∫–µ –≥–æ–¥–∞
            month_query = f"name='10-October' and mimeType='application/vnd.google-apps.folder' and '{year_id}' in parents"
            month_results = service.files().list(q=month_query, fields="files(id, name)").execute()
            month_folders = month_results.get('files', [])
            
            print(f"  üîç –í –ø–∞–ø–∫–µ {year_id} –Ω–∞–π–¥–µ–Ω–æ –ø–∞–ø–æ–∫ '10-October': {len(month_folders)}")
            for month_folder in month_folders:
                month_id = month_folder['id']
                print(f"  üìÅ –ü–∞–ø–∫–∞ 10-October: {month_folder['name']} (ID: {month_id})")
                
                # –ò—â–µ–º PDF —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ –º–µ—Å—è—Ü–∞
                pdf_query = f"mimeType='application/pdf' and '{month_id}' in parents"
                pdf_results = service.files().list(q=pdf_query, fields="files(id, name, createdTime, modifiedTime)", orderBy="createdTime desc").execute()
                pdf_files = pdf_results.get('files', [])
                
                print(f"    üìÑ PDF —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ: {len(pdf_files)}")
                for pdf in pdf_files:
                    print(f"    üìÑ {pdf['name']}")
                    print(f"       –°–æ–∑–¥–∞–Ω: {pdf['createdTime']}")
                    print(f"       –ò–∑–º–µ–Ω–µ–Ω: {pdf['modifiedTime']}")
                    print(f"       ID: {pdf['id']}")
                    print()
        
        # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º, –Ω–µ—Ç –ª–∏ —Ñ–∞–π–ª–æ–≤ –ø—Ä—è–º–æ –≤ –±–∞–∑–æ–≤–æ–π –ø–∞–ø–∫–µ
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –ø—Ä—è–º–æ –≤ –±–∞–∑–æ–≤–æ–π –ø–∞–ø–∫–µ:")
        base_pdf_query = f"mimeType='application/pdf' and '{base_folder_id}' in parents"
        base_pdf_results = service.files().list(q=base_pdf_query, fields="files(id, name, createdTime)").execute()
        base_pdf_files = base_pdf_results.get('files', [])
        
        print(f"üìÑ PDF —Ñ–∞–π–ª–æ–≤ –≤ –±–∞–∑–æ–≤–æ–π –ø–∞–ø–∫–µ: {len(base_pdf_files)}")
        for pdf in base_pdf_files:
            print(f"üìÑ {pdf['name']} (—Å–æ–∑–¥–∞–Ω: {pdf['createdTime']})")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_folder_structure()