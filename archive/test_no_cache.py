#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏
"""

from enhanced_pdf_report_v2 import EnhancedPDFReportV2
from scale_normalizer import ScaleNormalizer
from bot_integration_example import UserAnswersCollector
from interpretation_utils import generate_interpretations_from_prompt
from pathlib import Path
import tempfile

def test_no_cache_between_reports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º, —á—Ç–æ –º–µ–∂–¥—É –æ—Ç—á–µ—Ç–∞–º–∏ –Ω–µ—Ç –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üß™ –¢–µ—Å—Ç: –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–∂–¥—É –æ—Ç—á–µ—Ç–∞–º–∏")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    test_data_1 = {
        'paei_scores': {'P': 3, 'A': 2, 'E': 4, 'I': 1},
        'disc_scores': {'D': 2.5, 'I': 4.0, 'S': 3.5, 'C': 2.0},
        'hexaco_scores': {'H': 3.5, 'E': 2.5, 'X': 4.0, 'A': 3.0, 'C': 2.8, 'O': 4.2},
        'soft_skills_scores': {'leadership': 3.8, 'communication': 4.2}
    }
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥—Ä—É–≥–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è)
    test_data_2 = {
        'paei_scores': {'P': 1, 'A': 4, 'E': 2, 'I': 3},
        'disc_scores': {'D': 4.0, 'I': 2.0, 'S': 1.5, 'C': 4.5},
        'hexaco_scores': {'H': 2.0, 'E': 4.5, 'X': 1.5, 'A': 4.0, 'C': 4.2, 'O': 2.8},
        'soft_skills_scores': {'leadership': 2.2, 'communication': 1.8}
    }
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    with tempfile.TemporaryDirectory() as temp_dir:
        temp_path = Path(temp_dir)
        
        # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤
        print("üìä –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –æ—Ç—á–µ—Ç–æ–≤...")
        report_1 = EnhancedPDFReportV2(template_dir=temp_path)
        report_2 = EnhancedPDFReportV2(template_dir=temp_path)
        
        print(f"üìä Report 1 ID: {id(report_1)}")
        print(f"üìä Report 2 ID: {id(report_2)}")
        print(f"‚úÖ –†–∞–∑–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –æ—Ç—á–µ—Ç–æ–≤: {id(report_1) != id(report_2)}")
        
        # –¢–µ—Å—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏...")
        interpretations_1 = generate_interpretations_from_prompt(
            test_data_1['paei_scores'],
            test_data_1['disc_scores'],
            test_data_1['hexaco_scores'],
            test_data_1['soft_skills_scores']
        )
        
        interpretations_2 = generate_interpretations_from_prompt(
            test_data_2['paei_scores'],
            test_data_2['disc_scores'],
            test_data_2['hexaco_scores'],
            test_data_2['soft_skills_scores']
        )
        
        print(f"üìä –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ 1 –∫–ª—é—á–∏: {list(interpretations_1.keys())}")
        print(f"üìä –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ 2 –∫–ª—é—á–∏: {list(interpretations_2.keys())}")
        print(f"‚úÖ –†–∞–∑–Ω—ã–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏: {interpretations_1 != interpretations_2}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º UserAnswersCollector
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º UserAnswersCollector...")
        collector_1 = UserAnswersCollector()
        collector_2 = UserAnswersCollector()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Ä–∞–∑–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã
        print(f"üìä Collector 1 ID: {id(collector_1)}")
        print(f"üìä Collector 2 ID: {id(collector_2)}")
        print(f"‚úÖ –†–∞–∑–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã: {id(collector_1) != id(collector_2)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º ScaleNormalizer
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º ScaleNormalizer...")
        norm_1, method_1 = ScaleNormalizer.auto_normalize("PAEI", test_data_1['paei_scores'])
        norm_2, method_2 = ScaleNormalizer.auto_normalize("PAEI", test_data_2['paei_scores'])
        
        print(f"üìä –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è 1: {norm_1}")
        print(f"üìä –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è 2: {norm_2}")
        print(f"‚úÖ –†–∞–∑–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: {norm_1 != norm_2}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è—Ö —Ä–∞–∑–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
        if 'paei' in interpretations_1 and 'paei' in interpretations_2:
            paei_1_len = len(interpretations_1['paei'])
            paei_2_len = len(interpretations_2['paei'])
            print(f"\nüìè PAEI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è 1: {paei_1_len} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"üìè PAEI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è 2: {paei_2_len} —Å–∏–º–≤–æ–ª–æ–≤")
        
    print("\nüéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω: –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
    return True

if __name__ == "__main__":
    test_no_cache_between_reports()