#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –ø–æ–∑–∏—Ü–∏–π –Ω—É–º–µ—Ä–∞—Ü–∏–∏ - —Å–æ–∑–¥–∞–µ—Ç PDF —Å –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
"""

from final_full_numbered_generator import FinalFullVolumeGenerator
from reportlab.lib.pagesizes import A4
from reportlab.lib.units import mm
from reportlab.pdfgen import canvas
from reportlab.lib.colors import red, blue, green, black
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
import os

class MultiPositionCanvas(canvas.Canvas):
    """Canvas —Å –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π –≤ –†–ê–ó–ù–´–• –ø–æ–∑–∏—Ü–∏—è—Ö –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏"""
    def __init__(self, *args, **kwargs):
        canvas.Canvas.__init__(self, *args, **kwargs)
        self._saved_page_states = []

    def showPage(self):
        self._saved_page_states.append(dict(self.__dict__))
        self._startPage()

    def save(self):
        num_pages = len(self._saved_page_states)
        for (page_num, page_state) in enumerate(self._saved_page_states):
            self.__dict__.update(page_state)
            self.draw_multiple_positions(page_num + 1, num_pages)
            canvas.Canvas.showPage(self)
        canvas.Canvas.save(self)

    def draw_multiple_positions(self, page_num, total_pages):
        """–†–∏—Å—É–µ—Ç –Ω—É–º–µ—Ä–∞—Ü–∏—é –≤ –†–ê–ó–ù–´–• –ø–æ–∑–∏—Ü–∏—è—Ö —Å —Ä–∞–∑–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏"""
        self.saveState()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —à—Ä–∏—Ñ—Ç
        try:
            arial_path = "C:/Windows/Fonts/arial.ttf"
            if os.path.exists(arial_path):
                pdfmetrics.registerFont(TTFont('Arial-Multi', arial_path))
                font_name = "Arial-Multi"
            else:
                font_name = "Times-Roman"
        except:
            font_name = "Times-Roman"
        
        self.setFont(font_name, 12)
        text = f"–°—Ç—Ä. {page_num} –∏–∑ {total_pages}"
        
        # –ü–û–ó–ò–¶–ò–Ø 1: –ü—Ä–∞–≤—ã–π –≤–µ—Ä—Ö (–ö–†–ê–°–ù–´–ô) - –æ—Å–Ω–æ–≤–Ω–∞—è
        self.setFillColor(red)
        self.drawRightString(A4[0] - 25*mm, A4[1] - 15*mm, f"–ü–†–ê–í–û-–í–ï–†–•: {text}")
        
        # –ü–û–ó–ò–¶–ò–Ø 2: –ü—Ä–∞–≤—ã–π –≤–µ—Ä—Ö –±–ª–∏–∂–µ –∫ –∫—Ä–∞—é (–°–ò–ù–ò–ô)
        self.setFillColor(blue)
        self.drawRightString(A4[0] - 10*mm, A4[1] - 10*mm, f"–ö–†–ê–ô: {text}")
        
        # –ü–û–ó–ò–¶–ò–Ø 3: –ü—Ä–∞–≤—ã–π –≤–µ—Ä—Ö –¥–∞–ª—å—à–µ –æ—Ç –∫—Ä–∞—è (–ó–ï–õ–ï–ù–´–ô)
        self.setFillColor(green)
        self.drawRightString(A4[0] - 40*mm, A4[1] - 20*mm, f"–î–ê–õ–¨–®–ï: {text}")
        
        # –ü–û–ó–ò–¶–ò–Ø 4: –¶–µ–Ω—Ç—Ä –≤–µ—Ä—Ö–∞ (–ß–ï–†–ù–´–ô)
        self.setFillColor(black)
        self.drawCentredText(A4[0] / 2, A4[1] - 15*mm, f"–¶–ï–ù–¢–†-–í–ï–†–•: {text}")
        
        # –ü–û–ó–ò–¶–ò–Ø 5: –ü—Ä–∞–≤—ã–π –Ω–∏–∑ (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è)
        self.setFillColor(red)
        self.drawRightString(A4[0] - 25*mm, 20*mm, f"–ü–†–ê–í–û-–ù–ò–ó: {text}")
        
        self.restoreState()

def create_position_test():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç –ø–æ–∑–∏—Ü–∏–π –Ω—É–º–µ—Ä–∞—Ü–∏–∏"""
    
    filename = 'position_test.pdf'
    
    doc = SimpleDocTemplate(
        filename,
        pagesize=A4,
        leftMargin=25*mm,
        rightMargin=25*mm,
        topMargin=30*mm,  # –ë–æ–ª—å—à–µ –º–µ—Å—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
        bottomMargin=25*mm,
        canvasmaker=MultiPositionCanvas
    )
    
    styles = getSampleStyleSheet()
    story = []
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞–∫ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
    title_style = styles['Title']
    title_style.fontSize = 14
    title_style.alignment = 1
    
    story.append(Paragraph("–ö–û–ú–ü–õ–ï–ö–°–ù–ê–Ø –û–¶–ï–ù–ö–ê –ö–û–ú–ê–ù–î–ù–´–• –ù–ê–í–´–ö–û–í", title_style))
    story.append(Spacer(1, 30))
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –∫–∞–∫ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏  
    info_text = """
    –ò–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: –¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å<br/>
    –î–∞—Ç–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: 2025-10-05<br/>
    –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Ç–æ–¥–∏–∫: 4 (PAEI, DISC, HEXACO, Soft Skills)
    """
    story.append(Paragraph(info_text, styles['Normal']))
    story.append(Spacer(1, 30))
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
    story.append(Paragraph("–û–ë–©–ï–ï –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï –ò –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò", styles['Heading1']))
    story.append(Spacer(1, 20))
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç –∫–∞–∫ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
    main_text = """
    –ù–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –¢–µ—Å—Ç–æ–≤—ã–π
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–≤–µ–¥–µ–Ω –∞–Ω–∞–ª–∏–∑ —É–ø—Ä–∞–≤–ª–µ–Ω—á–µ—Å–∫–æ–≥–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞, –ª–∏—á–Ω–æ—Å—Ç–Ω—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π,
    –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏—Ö —Å—Ç–∏–ª–µ–π –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∑–≤–æ–ª—è—é—Ç
    —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–º –ø—Ä–æ—Ñ–∏–ª–µ –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–µ
    —Ä–∞–∑–≤–∏—Ç–∏—è.
    """
    story.append(Paragraph(main_text, styles['Normal']))
    
    # –°—Ç—Ä–æ–∏–º –¥–æ–∫—É–º–µ–Ω—Ç
    doc.build(story)
    return filename

if __name__ == "__main__":
    try:
        result = create_position_test()
        print(f"‚úÖ –¢–µ—Å—Ç –ø–æ–∑–∏—Ü–∏–π —Å–æ–∑–¥–∞–Ω: {result}")
        print("üîç –ò—â–∏—Ç–µ –¶–í–ï–¢–ù–£–Æ –Ω—É–º–µ—Ä–∞—Ü–∏—é –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö:")
        print("   üî¥ –ö–†–ê–°–ù–´–ô - –ø—Ä–∞–≤—ã–π –≤–µ—Ä—Ö (–æ—Å–Ω–æ–≤–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è)")
        print("   üîµ –°–ò–ù–ò–ô - –±–ª–∏–∂–µ –∫ –∫—Ä–∞—é")
        print("   üü¢ –ó–ï–õ–ï–ù–´–ô - –¥–∞–ª—å—à–µ –æ—Ç –∫—Ä–∞—è")
        print("   ‚ö´ –ß–ï–†–ù–´–ô - —Ü–µ–Ω—Ç—Ä –≤–µ—Ä—Ö–∞")
        print("   üî¥ –ö–†–ê–°–ù–´–ô –≤–Ω–∏–∑—É - –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()