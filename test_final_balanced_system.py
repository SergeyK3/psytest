#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, str(Path(__file__).parent / "src"))

from enhanced_pdf_report_v2 import EnhancedCharts

def test_balanced_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("üß™ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –°–ë–ê–õ–ê–ù–°–ò–†–û–í–ê–ù–ù–´–• –î–ò–ê–ì–†–ê–ú–ú")
    print("=" * 70)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    test_dir = Path("test_balanced_integration")
    test_dir.mkdir(exist_ok=True)
    
    # –†–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ç–µ—Å—Ç–æ–≤
    test_cases = [
        {
            "name": "–ü—Ä–æ–±–ª–µ–º–Ω—ã–π —Å–ª—É—á–∞–π - PAEI —Å —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–º A",
            "test_type": "PAEI",
            "labels": ["P", "A", "E", "I"],
            "values": [1.0, 10.0, 1.0, 1.0],
            "description": "–°–∏–ª—å–Ω—ã–π –¥–∏—Å–±–∞–ª–∞–Ω—Å - A –≤ 10 —Ä–∞–∑ –±–æ–ª—å—à–µ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö"
        },
        {
            "name": "–ü—Ä–æ–±–ª–µ–º–Ω—ã–π —Å–ª—É—á–∞–π - DISC —Å –¥–æ–º–∏–Ω–∏—Ä—É—é—â–∏–º D",
            "test_type": "DISC", 
            "labels": ["D", "I", "S", "C"],
            "values": [7.8, 1.0, 3.2, 1.0],
            "description": "–°—Ä–µ–¥–Ω–∏–π –¥–∏—Å–±–∞–ª–∞–Ω—Å - D –ø–æ—á—Ç–∏ –≤ 8 —Ä–∞–∑ –±–æ–ª—å—à–µ –º–∏–Ω–∏–º—É–º–∞"
        },
        {
            "name": "–°–ª–∞–±—ã–π –¥–∏—Å–±–∞–ª–∞–Ω—Å - HEXACO",
            "test_type": "HEXACO",
            "labels": ["H", "E", "X", "A", "C", "O"],
            "values": [4.0, 8.0, 3.0, 6.0, 5.0, 7.0],
            "description": "–ù–µ–±–æ–ª—å—à–æ–π –¥–∏—Å–±–∞–ª–∞–Ω—Å - —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ 2.7:1"
        },
        {
            "name": "–•–æ—Ä–æ—à–æ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å",
            "test_type": "Balanced",
            "labels": ["A", "B", "C", "D"],
            "values": [6.2, 7.1, 5.8, 6.5],
            "description": "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ 1.2:1"
        }
    ]
    
    charts = EnhancedCharts()
    results = []
    
    for i, case in enumerate(test_cases, 1):
        print(f"\nüìä –¢–µ—Å—Ç {i}: {case['name']}")
        print(f"–¢–∏–ø: {case['test_type']}")
        print(f"–ó–Ω–∞—á–µ–Ω–∏—è: {dict(zip(case['labels'], case['values']))}")
        print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {case['description']}")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ
        max_val = max(case['values'])
        min_val = min(v for v in case['values'] if v > 0)
        ratio = max_val / min_val
        print(f"–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –º–∞–∫—Å/–º–∏–Ω: {ratio:.2f}")
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–≥—Ä–∞–º–º—ã —á–µ—Ä–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
        radar_path = test_dir / f"final_radar_{i}_{case['test_type']}.png"
        bar_path = test_dir / f"final_bar_{i}_{case['test_type']}.png"
        
        try:
            # –†–∞–¥–∞—Ä–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞
            charts.create_minimalist_radar(
                case['labels'], case['values'], 
                f"{case['test_type']} - –†–∞–¥–∞—Ä (–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)", radar_path
            )
            
            # –°—Ç–æ–ª–±—á–∞—Ç–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞
            charts.create_minimalist_bar_chart(
                case['labels'], case['values'],
                f"{case['test_type']} - –°—Ç–æ–ª–±—Ü—ã (–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ)", bar_path
            )
            
            print(f"  ‚úÖ –î–∏–∞–≥—Ä–∞–º–º—ã —Å–æ–∑–¥–∞–Ω—ã: {radar_path.name}, {bar_path.name}")
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∂–∏–¥–∞–µ–º—ã–π –º–µ—Ç–æ–¥ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏
            if ratio > 8.0:
                expected_method = "–ª–æ–≥–∞—Ä–∏—Ñ–º"
            elif ratio > 4.0:
                expected_method = "–∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å"
            elif ratio > 2.0:
                expected_method = "–º—è–≥–∫–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è"
            else:
                expected_method = "–±–µ–∑ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏"
            
            print(f"  üìè –û–∂–∏–¥–∞–µ–º–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: {expected_method}")
            
            results.append({
                "test": case['name'],
                "ratio": ratio,
                "expected_norm": expected_method,
                "files": [radar_path, bar_path]
            })
            
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print(f"\nüéâ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –§–ò–ù–ê–õ–¨–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"–°–æ–∑–¥–∞–Ω–æ {len(results) * 2} –¥–∏–∞–≥—Ä–∞–º–º –≤ –ø–∞–ø–∫–µ: {test_dir}")
    
    print(f"\nüìà –ê–ù–ê–õ–ò–ó –ù–û–†–ú–ê–õ–ò–ó–ê–¶–ò–ò:")
    for result in results:
        print(f"  ‚Ä¢ {result['test']}: —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ {result['ratio']:.2f} ‚Üí {result['expected_norm']}")
    
    print(f"\nüí° –ü–†–û–í–ï–†–¨–¢–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print("1. –î–∏–∞–≥—Ä–∞–º–º—ã —Å –≤—ã—Å–æ–∫–∏–º–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∏–∑—É–∞–ª—å–Ω–æ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏")
    print("2. –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–º–µ–Ω—ë–Ω–Ω–æ–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏")
    print("3. –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π")
    print("4. –í—Å–µ –¥–∏–∞–≥—Ä–∞–º–º—ã –¥–æ–ª–∂–Ω—ã —Ö–æ—Ä–æ—à–æ —á–∏—Ç–∞—Ç—å—Å—è –∏ –≤—ã–≥–ª—è–¥–µ—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ")
    
    return results, test_dir

def compare_before_after():
    """–°–æ–∑–¥–∞–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–æ –∏ –ø–æ—Å–ª–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —É–ª—É—á—à–µ–Ω–∏–π"""
    print(f"\nüîç –°–û–ó–î–ê–ù–ò–ï –°–†–ê–í–ù–ï–ù–ò–Ø –î–û/–ü–û–°–õ–ï")
    print("=" * 50)
    
    from src.psytest.charts import make_radar, make_bar_chart
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    compare_dir = Path("comparison_before_after")
    compare_dir.mkdir(exist_ok=True)
    
    # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π —Å–ª—É—á–∞–π
    labels = ["P", "A", "E", "I"]
    values = [1.0, 10.0, 1.0, 1.0]
    
    print("–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ PAEI: P=1.0, A=10.0, E=1.0, I=1.0 (—Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ 10:1)")
    
    # –î–û (—Å—Ç–∞—Ä–∞—è —Å–∏—Å—Ç–µ–º–∞ –±–µ–∑ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏)
    before_radar = compare_dir / "before_radar_unnormalized.png"
    before_bar = compare_dir / "before_bar_unnormalized.png"
    
    make_radar(labels, values, before_radar, 
              title="–î–û: –ë–µ–∑ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ (–Ω–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ)", 
              normalize=False, max_value=10)
    
    make_bar_chart(labels, values, before_bar,
                  title="–î–û: –ë–µ–∑ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ (–Ω–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ)", 
                  normalize=False, max_value=10)
    
    # –ü–û–°–õ–ï (–Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–µ–π)
    after_radar = compare_dir / "after_radar_normalized.png"
    after_bar = compare_dir / "after_bar_normalized.png"
    
    make_radar(labels, values, after_radar,
              title="–ü–û–°–õ–ï: –° –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–µ–π (—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ)",
              normalize=True, normalize_method="adaptive")
    
    make_bar_chart(labels, values, after_bar,
              title="–ü–û–°–õ–ï: –° –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–µ–π (—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ)",
              normalize=True, normalize_method="adaptive")
    
    print(f"‚úÖ –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã —Å–æ–∑–¥–∞–Ω—ã –≤ –ø–∞–ø–∫–µ: {compare_dir}")
    print("üìä –§–∞–π–ª—ã before_* –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—É –Ω–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏")
    print("üéØ –§–∞–π–ª—ã after_* –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ä–µ—à–µ–Ω–∏–µ —Å –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–µ–π")
    
    return compare_dir

if __name__ == "__main__":
    print("üöÄ –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –°–ë–ê–õ–ê–ù–°–ò–†–û–í–ê–ù–ù–´–• –î–ò–ê–ì–†–ê–ú–ú")
    print("=" * 80)
    
    try:
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
        results, test_dir = test_balanced_integration()
        
        # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–æ/–ø–æ—Å–ª–µ
        compare_dir = compare_before_after()
        
        print(f"\n‚ú® –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
        print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ø–∞–ø–∫–∞—Ö: {test_dir}, {compare_dir}")
        print("\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –≤–∏–∑—É–∞–ª—å–Ω–æ–º –±–∞–ª–∞–Ω—Å–µ")
        print("3. –ì–æ—Ç–æ–≤–æ –∫ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()