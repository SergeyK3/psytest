#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
–≤–∫–ª—é—á–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏, –æ—Ç–≤–µ—Ç–∞–º–∏ –∏ –±–∞–ª–ª–∞–º–∏ –≤ PDF –æ—Ç—á–µ—Ç
"""

from pathlib import Path
from datetime import datetime
from enhanced_pdf_report_v2 import EnhancedPDFReportV2
from questions_answers_section import create_sample_data_for_testing


def demonstrate_questions_section():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Ä–∞–∑–¥–µ–ª–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∞–º–∏
    """
    print("üß™ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ê–ó–î–ï–õ–ê –° –í–û–ü–†–û–°–ê–ú–ò –ò –û–¢–í–ï–¢–ê–ú–ò")
    print("=" * 60)
    
    # === –°–û–ó–î–ê–ù–ò–ï –û–¢–ß–ï–¢–ê –ë–ï–ó –†–ê–ó–î–ï–õ–ê –í–û–ü–†–û–°–û–í ===
    print("\n1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ã—á–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ (–ë–ï–ó —Ä–∞–∑–¥–µ–ª–∞ –≤–æ–ø—Ä–æ—Å–æ–≤)...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤ –ë–ï–ó —Ä–∞–∑–¥–µ–ª–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
    report_generator_standard = EnhancedPDFReportV2(
        include_questions_section=False  # üö´ –†–∞–∑–¥–µ–ª –æ—Ç–∫–ª—é—á–µ–Ω
    )
    
    # –û–±—Ä–∞–∑—Ü—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    sample_data = create_sample_data_for_testing()
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
    standard_report_path = Path("demo_report_standard.pdf")
    
    try:
        report_generator_standard.generate_enhanced_report(
            participant_name="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á (–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç—á–µ—Ç)",
            test_date=datetime.now().strftime("%d.%m.%Y"),
            paei_scores=sample_data['paei_scores'],
            disc_scores=sample_data['disc_scores'],
            hexaco_scores=sample_data['hexaco_scores'],
            soft_skills_scores=sample_data['soft_skills_scores'],
            ai_interpretations={
                'paei': '–û–±—Ä–∞–∑–µ—Ü –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ PAEI –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏.',
                'soft_skills': '–û–±—Ä–∞–∑–µ—Ü –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ Soft Skills –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏.',
                'hexaco': '–û–±—Ä–∞–∑–µ—Ü –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ HEXACO –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏.',
                'disc': '–û–±—Ä–∞–∑–µ—Ü –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ DISC –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏.'
            },
            out_path=standard_report_path
        )
        print(f"‚úÖ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: {standard_report_path}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
    
    # === –°–û–ó–î–ê–ù–ò–ï –û–¢–ß–ï–¢–ê –° –†–ê–ó–î–ï–õ–û–ú –í–û–ü–†–û–°–û–í ===
    print("\n2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ (–° —Ä–∞–∑–¥–µ–ª–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤)...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤ –° —Ä–∞–∑–¥–µ–ª–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤
    report_generator_extended = EnhancedPDFReportV2(
        include_questions_section=True  # ‚úÖ –†–∞–∑–¥–µ–ª –≤–∫–ª—é—á–µ–Ω
    )
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
    extended_report_path = Path("demo_report_with_questions.pdf")
    
    try:
        report_generator_extended.generate_enhanced_report(
            participant_name="–ü–µ—Ç—Ä–æ–≤–∞ –ê–Ω–Ω–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞ (–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç)",
            test_date=datetime.now().strftime("%d.%m.%Y"),
            paei_scores=sample_data['paei_scores'],
            disc_scores=sample_data['disc_scores'],
            hexaco_scores=sample_data['hexaco_scores'],
            soft_skills_scores=sample_data['soft_skills_scores'],
            ai_interpretations={
                'paei': '–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è PAEI —Å –∞–Ω–∞–ª–∏–∑–æ–º –¥–æ–º–∏–Ω–∏—Ä—É—é—â–µ–π —Ä–æ–ª–∏ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è.',
                'soft_skills': '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –º—è–≥–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é.',
                'hexaco': '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç –ª–∏—á–Ω–æ—Å—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–æ–¥–µ–ª–∏ HEXACO.',
                'disc': '–ê–Ω–∞–ª–∏–∑ –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –∏ —Å—Ç–∏–ª–µ–π –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏.'
            },
            out_path=extended_report_path,
            user_answers={  # üîë –ö–õ–Æ–ß–ï–í–û–ô –ü–ê–†–ê–ú–ï–¢–† - –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                'paei': sample_data['paei_answers'],
                'soft_skills': sample_data['soft_skills_answers'],
                'hexaco': sample_data['hexaco_answers'],
                'disc': sample_data['disc_answers']
            }
        )
        print(f"‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: {extended_report_path}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
    
    # === –†–ï–ó–£–õ–¨–¢–ê–¢–´ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò ===
    print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò:")
    print("-" * 40)
    
    if standard_report_path.exists():
        size_standard = standard_report_path.stat().st_size / 1024  # KB
        print(f"üìÑ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç—á–µ—Ç: {size_standard:.1f} KB")
    
    if extended_report_path.exists():
        size_extended = extended_report_path.stat().st_size / 1024  # KB
        print(f"üìÑ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç: {size_extended:.1f} KB")
        
        if standard_report_path.exists():
            difference = size_extended - size_standard
            print(f"üìà –†–∞–∑–Ω–∏—Ü–∞ –≤ —Ä–∞–∑–º–µ—Ä–µ: +{difference:.1f} KB")
    
    print("\nüéØ –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:")
    print("-" * 40)
    print("1Ô∏è‚É£ –î–ª—è –û–ë–´–ß–ù–û–ì–û –æ—Ç—á–µ—Ç–∞ (–±–µ–∑ –≤–æ–ø—Ä–æ—Å–æ–≤):")
    print("   report = EnhancedPDFReportV2(include_questions_section=False)")
    print("")
    print("2Ô∏è‚É£ –î–ª—è –†–ê–°–®–ò–†–ï–ù–ù–û–ì–û –æ—Ç—á–µ—Ç–∞ (—Å –≤–æ–ø—Ä–æ—Å–∞–º–∏):")
    print("   report = EnhancedPDFReportV2(include_questions_section=True)")
    print("   # –ò –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å user_answers –≤ generate_enhanced_report()")
    print("")
    print("3Ô∏è‚É£ –î–ª—è –õ–ï–ì–ö–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø —Ä–∞–∑–¥–µ–ª–∞:")
    print("   # –ü—Ä–æ—Å—Ç–æ –∏–∑–º–µ–Ω–∏—Ç–µ include_questions_section=False")
    print("   # –ò–ª–∏ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ –∫–æ–¥–µ")


def demonstrate_data_structure():
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è user_answers
    """
    print("\n\nüìã –°–¢–†–£–ö–¢–£–†–ê –î–ê–ù–ù–´–• user_answers:")
    print("=" * 50)
    
    sample_data = create_sample_data_for_testing()
    
    print("user_answers = {")
    print("    'paei': {")
    for q_id, answer in sample_data['paei_answers'].items():
        print(f"        '{q_id}': '{answer}',  # –í–æ–ø—Ä–æ—Å {int(q_id)+1} -> –≤—ã–±—Ä–∞–Ω–æ {answer}")
    print("    },")
    
    print("    'soft_skills': {")
    for q_id, answer in list(sample_data['soft_skills_answers'].items())[:3]:
        print(f"        '{q_id}': {answer},  # –í–æ–ø—Ä–æ—Å {int(q_id)+1} -> –æ—Ü–µ–Ω–∫–∞ {answer}/10")
    print("        # ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
    print("    },")
    
    print("    'hexaco': {")
    for q_id, answer in list(sample_data['hexaco_answers'].items())[:3]:
        print(f"        '{q_id}': {answer},  # –í–æ–ø—Ä–æ—Å {int(q_id)+1} -> –æ—Ü–µ–Ω–∫–∞ {answer}/5")
    print("        # ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
    print("    },")
    
    print("    'disc': {")
    for q_id, answer in list(sample_data['disc_answers'].items())[:3]:
        print(f"        '{q_id}': {answer},  # –í–æ–ø—Ä–æ—Å {int(q_id)+1} -> –æ—Ü–µ–Ω–∫–∞ {answer}/5")
    print("        # ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
    print("    }")
    print("}")


def test_questions_module():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–æ–¥—É–ª—å questions_answers_section.py
    """
    print("\n\nüîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–î–£–õ–Ø questions_answers_section.py:")
    print("=" * 55)
    
    try:
        from questions_answers_section import QuestionAnswerSection
        
        qa_section = QuestionAnswerSection()
        print(f"‚úÖ –ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤:")
        print(f"   - PAEI: {len(qa_section.paei_questions)}")
        print(f"   - Soft Skills: {len(qa_section.soft_skills_questions)}")
        print(f"   - HEXACO: {len(qa_section.hexaco_questions)}")
        print(f"   - DISC: {len(qa_section.disc_questions)}")
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—Ä–∞–∑—Ü–æ–≤ –¥–∞–Ω–Ω—ã—Ö
        sample_data = create_sample_data_for_testing()
        print(f"\n‚úÖ –û–±—Ä–∞–∑—Ü—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω—ã:")
        print(f"   - PAEI –æ—Ç–≤–µ—Ç—ã: {len(sample_data['paei_answers'])}")
        print(f"   - Soft Skills –æ—Ç–≤–µ—Ç—ã: {len(sample_data['soft_skills_answers'])}")
        print(f"   - HEXACO –æ—Ç–≤–µ—Ç—ã: {len(sample_data['hexaco_answers'])}")
        print(f"   - DISC –æ—Ç–≤–µ—Ç—ã: {len(sample_data['disc_answers'])}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥—É–ª—è: {e}")
        import traceback
        traceback.print_exc()
        return False


if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò –ù–û–í–û–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å
    if test_questions_module():
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
        demonstrate_data_structure()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
        demonstrate_questions_section()
        
        print("\nüéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("\nüìù –û—Ç–∫—Ä–æ–π—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ PDF —Ñ–∞–π–ª—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:")
        print("   - demo_report_standard.pdf (–æ–±—ã—á–Ω—ã–π)")
        print("   - demo_report_with_questions.pdf (—Å –≤–æ–ø—Ä–æ—Å–∞–º–∏)")
        
    else:
        print("‚ùå –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫ –≤ –º–æ–¥—É–ª–µ")