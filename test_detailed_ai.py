#!/usr/bin/env python3
"""
–ü–æ–¥—Ä–æ–±–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ AI –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –∫–æ–º–∞–Ω–¥–µ
"""

from interpretation_utils import generate_interpretations_from_prompt

def detailed_team_recommendations_test():
    """–ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
    
    print("üîç –ü–û–î–†–û–ë–ù–´–ô –ê–ù–ê–õ–ò–ó AI –ì–ï–ù–ï–†–ê–¶–ò–ò")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Å —è–≤–Ω—ã–º–∏ —Å–ª–∞–±—ã–º–∏ –æ–±–ª–∞—Å—Ç—è–º–∏
    test_data = {
        'paei_results': {'P': 1, 'A': 1, 'E': 5, 'I': 4},  # P –∏ A - –æ—á–µ–Ω—å —Å–ª–∞–±—ã–µ
        'disc_results': {'D': 5.0, 'I': 4.0, 'S': 1.0, 'C': 2.0},  # S –æ—á–µ–Ω—å —Å–ª–∞–±—ã–π
        'hexaco_results': {
            'honesty_humility': 4.0,
            'emotionality': 1.5,      # –û—á–µ–Ω—å —Å–ª–∞–±–∞—è
            'extraversion': 1.2,      # –û—á–µ–Ω—å —Å–ª–∞–±–∞—è  
            'agreeableness': 2.0,     # –°–ª–∞–±–∞—è
            'conscientiousness': 4.5,
            'openness': 3.8
        },
        'soft_skills_results': {
            'leadership': 5,
            'emotional_intelligence': 5, 
            'communication': 4,
            'critical_thinking': 1,   # –û—á–µ–Ω—å —Å–ª–∞–±—ã–π
            'time_management': 4,
            'conflict_resolution': 5,
            'adaptability': 2,        # –°–ª–∞–±—ã–π
            'employee_development': 5,
            'teamwork': 2,            # –°–ª–∞–±—ã–π
            'creativity': 1           # –û—á–µ–Ω—å —Å–ª–∞–±—ã–π
        }
    }
    
    print("üìä –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("PAEI —Å–ª–∞–±—ã–µ –æ–±–ª–∞—Å—Ç–∏: P=1, A=1")
    print("DISC —Å–ª–∞–±—ã–µ –æ–±–ª–∞—Å—Ç–∏: S=1.0, C=2.0") 
    print("HEXACO —Å–ª–∞–±—ã–µ –æ–±–ª–∞—Å—Ç–∏: emotionality=1.5, extraversion=1.2, agreeableness=2.0")
    print("Soft Skills —Å–ª–∞–±—ã–µ –æ–±–ª–∞—Å—Ç–∏: critical_thinking=1, adaptability=2, teamwork=2, creativity=1")
    print()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏
    interpretations = generate_interpretations_from_prompt(
        test_data['paei_results'],
        test_data['disc_results'], 
        test_data['hexaco_results'],
        test_data['soft_skills_results']
    )
    
    print("üìÑ –ü–û–õ–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ AI –ì–ï–ù–ï–†–ê–¶–ò–ò:")
    print("=" * 50)
    
    for section_name, content in interpretations.items():
        print(f"\nüîπ –†–ê–ó–î–ï–õ: {section_name.upper()}")
        print("-" * 40)
        print(content)
        print("-" * 40)
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –∫–æ–º–∞–Ω–¥
        content_lower = content.lower()
        team_keywords = [
            '—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ–¥–±–æ—Ä—É', '–∫–æ–º–∞–Ω–¥—É', '–∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤', '–ø–æ–¥–±–æ—Ä',
            'disc-–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è', 'paei-–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ', 'hexaco-–±–∞–ª–∞–Ω—Å', 'soft skills-—Å–∏–Ω–µ—Ä–≥–∏—è',
            '—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã', '–±–∞–ª–∞–Ω—Å –∫–æ–º–∞–Ω–¥—ã', '–∫–æ–º–ø–µ–Ω—Å–∏—Ä–æ–≤–∞—Ç—å', '–¥–æ–ø–æ–ª–Ω–∏—Ç—å'
        ]
        
        found_keywords = [kw for kw in team_keywords if kw in content_lower]
        if found_keywords:
            print(f"   üéØ –ù–∞–π–¥–µ–Ω—ã –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∫–æ–º–∞–Ω–¥: {found_keywords}")
        else:
            print("   ‚ö†Ô∏è  –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∫–æ–º–∞–Ω–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    print("\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
    all_content = " ".join(interpretations.values()).lower()
    
    if '–∫–æ–º–∞–Ω–¥' in all_content:
        print("‚úÖ –°–ª–æ–≤–æ '–∫–æ–º–∞–Ω–¥' –Ω–∞–π–¥–µ–Ω–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö")
    else:
        print("‚ùå –°–ª–æ–≤–æ '–∫–æ–º–∞–Ω–¥' –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö")
        
    if '–ø–æ–¥–±–æ—Ä' in all_content:
        print("‚úÖ –°–ª–æ–≤–æ '–ø–æ–¥–±–æ—Ä' –Ω–∞–π–¥–µ–Ω–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö")
    else:
        print("‚ùå –°–ª–æ–≤–æ '–ø–æ–¥–±–æ—Ä' –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö")
        
    if '–∫–∞–Ω–¥–∏–¥–∞—Ç' in all_content:
        print("‚úÖ –°–ª–æ–≤–æ '–∫–∞–Ω–¥–∏–¥–∞—Ç' –Ω–∞–π–¥–µ–Ω–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö") 
    else:
        print("‚ùå –°–ª–æ–≤–æ '–∫–∞–Ω–¥–∏–¥–∞—Ç' –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö")

if __name__ == "__main__":
    detailed_team_recommendations_test()