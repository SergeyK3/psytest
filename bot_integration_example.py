#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ä–∞–∑–¥–µ–ª–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∞–º–∏ –≤ Telegram –±–æ—Ç
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Å–æ–±–∏—Ä–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏—Ö –≤ –æ—Ç—á–µ—Ç
"""

from pathlib import Path
from enhanced_pdf_report_v2 import EnhancedPDFReportV2
from datetime import datetime


class UserAnswersCollector:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —Å–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ, 
    –ø–æ–¥—Ö–æ–¥—è—â–µ–º –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤
    """
    
    def __init__(self):
        self.user_answers = {
            'paei': {},
            'soft_skills': {},
            'hexaco': {},
            'disc': {}
        }
        
    def add_paei_answer(self, question_index: int, selected_option: str):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç PAEI (P, A, E, I)"""
        self.user_answers['paei'][str(question_index)] = selected_option
        
    def add_soft_skills_answer(self, question_index: int, rating: int):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç Soft Skills (1-10)"""
        self.user_answers['soft_skills'][str(question_index)] = rating
        
    def add_hexaco_answer(self, question_index: int, rating: int):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç HEXACO (1-5)"""
        self.user_answers['hexaco'][str(question_index)] = rating
        
    def add_disc_answer(self, question_index: int, rating: int):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç DISC (1-5)"""
        self.user_answers['disc'][str(question_index)] = rating
        
    def get_answers_dict(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ –æ—Ç—á–µ—Ç"""
        return self.user_answers.copy()
        
    def clear(self):
        """–û—á–∏—â–∞–µ—Ç –≤—Å–µ –æ—Ç–≤–µ—Ç—ã"""
        for test_type in self.user_answers:
            self.user_answers[test_type].clear()


def simulate_user_session_with_questions():
    """
    –°–∏–º—É–ª–∏—Ä—É–µ—Ç —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–±–æ—Ä–æ–º –æ—Ç–≤–µ—Ç–æ–≤
    –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –æ—Ç—á–µ—Ç–∞ —Å —Ä–∞–∑–¥–µ–ª–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤
    """
    print("ü§ñ –°–ò–ú–£–õ–Ø–¶–ò–Ø –°–ï–°–°–ò–ò TELEGRAM –ë–û–¢–ê –° –†–ê–ó–î–ï–õ–û–ú –í–û–ü–†–û–°–û–í")
    print("=" * 65)
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–ª–ª–µ–∫—Ç–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤
    answers_collector = UserAnswersCollector()
    
    # === –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ PAEI —Ç–µ—Å—Ç–∞ ===
    print("\nüìã –°–∏–º—É–ª–∏—Ä—É–µ–º PAEI —Ç–µ—Å—Ç...")
    paei_simulation = [
        (0, "P", "–í–æ–ø—Ä–æ—Å 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª P (–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å)"),
        (1, "A", "–í–æ–ø—Ä–æ—Å 2: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª A (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)"),  
        (2, "E", "–í–æ–ø—Ä–æ—Å 3: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª E (–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å)"),
        (3, "I", "–í–æ–ø—Ä–æ—Å 4: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª I (–ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä)"),
        (4, "P", "–í–æ–ø—Ä–æ—Å 5: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª P (–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å)")
    ]
    
    for q_idx, answer, description in paei_simulation:
        answers_collector.add_paei_answer(q_idx, answer)
        print(f"  ‚úÖ {description}")
    
    # === –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ Soft Skills —Ç–µ—Å—Ç–∞ ===
    print("\nüí° –°–∏–º—É–ª–∏—Ä—É–µ–º Soft Skills —Ç–µ—Å—Ç...")
    soft_skills_simulation = [
        (0, 8, "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è: 8/10"),
        (1, 7, "–†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ: 7/10"), 
        (2, 9, "–õ–∏–¥–µ—Ä—Å—Ç–≤–æ: 9/10"),
        (3, 6, "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ: 6/10"),
        (4, 7, "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–µ–º: 7/10"),
        (5, 8, "–°—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å: 8/10"),
        (6, 8, "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç: 8/10"),
        (7, 6, "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å: 6/10"),
        (8, 9, "–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º: 9/10"),
        (9, 7, "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å: 7/10")
    ]
    
    for q_idx, rating, description in soft_skills_simulation:
        answers_collector.add_soft_skills_answer(q_idx, rating)
        print(f"  ‚úÖ {description}")
    
    # === –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ HEXACO —Ç–µ—Å—Ç–∞ ===
    print("\nüß† –°–∏–º—É–ª–∏—Ä—É–µ–º HEXACO —Ç–µ—Å—Ç...")
    hexaco_simulation = [
        (0, 4, "–ß–µ—Å—Ç–Ω–æ—Å—Ç—å-–°–∫—Ä–æ–º–Ω–æ—Å—Ç—å: 4/5"),
        (1, 3, "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: 3/5"),
        (2, 5, "–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è: 5/5"), 
        (3, 4, "–î–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 4/5"),
        (4, 3, "–î–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ—Å—Ç—å: 3/5"),
        (5, 4, "–û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –æ–ø—ã—Ç—É: 4/5")
    ]
    
    for q_idx, rating, description in hexaco_simulation:
        answers_collector.add_hexaco_answer(q_idx, rating)
        print(f"  ‚úÖ {description}")
    
    # === –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ DISC —Ç–µ—Å—Ç–∞ ===
    print("\nüé≠ –°–∏–º—É–ª–∏—Ä—É–µ–º DISC —Ç–µ—Å—Ç...")
    disc_simulation = [
        (0, 4, "–î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: 4/5"),
        (1, 5, "–í–ª–∏—è–Ω–∏–µ: 5/5"),
        (2, 3, "–ü–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ: 3/5"),
        (3, 2, "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: 2/5")
    ]
    
    for q_idx, rating, description in disc_simulation:
        answers_collector.add_disc_answer(q_idx, rating)
        print(f"  ‚úÖ {description}")
    
    # === –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞ ===
    print("\nüìä –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç—á–µ—Ç–∞...")
    
    # –ò—Ç–æ–≥–æ–≤—ã–µ –±–∞–ª–ª—ã (–æ–±—ã—á–Ω–æ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤)
    paei_scores = {"P": 2, "A": 1, "E": 1, "I": 1}  # 2 —Ä–∞–∑–∞ –≤—ã–±—Ä–∞–ª P
    soft_skills_scores = {
        "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è": 8, "–†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ": 7, "–õ–∏–¥–µ—Ä—Å—Ç–≤–æ": 9,
        "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ": 6, "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–µ–º": 7,
        "–°—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å": 8, "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç": 8,
        "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å": 6, "–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º": 9, "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å": 7
    }
    hexaco_scores = {"H": 4.0, "E": 3.0, "X": 5.0, "A": 4.0, "C": 3.0, "O": 4.0}
    disc_scores = {"D": 4.0, "I": 5.0, "S": 3.0, "C": 2.0}
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    user_answers = answers_collector.get_answers_dict()
    
    print(f"  üìã –°–æ–±—Ä–∞–Ω–æ –æ—Ç–≤–µ—Ç–æ–≤:")
    print(f"    - PAEI: {len(user_answers['paei'])}")
    print(f"    - Soft Skills: {len(user_answers['soft_skills'])}")
    print(f"    - HEXACO: {len(user_answers['hexaco'])}")
    print(f"    - DISC: {len(user_answers['disc'])}")
    
    # === –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç —Å —Ä–∞–∑–¥–µ–ª–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤ ===
    print("\nüìÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ —Å —Ä–∞–∑–¥–µ–ª–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤ –° —Ä–∞–∑–¥–µ–ª–æ–º –≤–æ–ø—Ä–æ—Å–æ–≤
        report_generator = EnhancedPDFReportV2(include_questions_section=True)
        
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –æ—Ç—á–µ—Ç–∞
        report_path = Path("bot_simulation_report_with_questions.pdf")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        report_generator.generate_enhanced_report(
            participant_name="–°–∏–º—É–ª—è—Ü–∏—è Telegram –ë–æ—Ç–∞",
            test_date=datetime.now().strftime("%d.%m.%Y %H:%M"),
            paei_scores=paei_scores,
            disc_scores=disc_scores,
            hexaco_scores=hexaco_scores,
            soft_skills_scores=soft_skills_scores,
            ai_interpretations={
                'paei': '–í—ã—Ä–∞–∂–µ–Ω–Ω–∞—è —Å–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ —Ä–æ–ª–∏ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –¥—Ä—É–≥–∏—Ö —Å—Ç–∏–ª–µ–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.',
                'soft_skills': '–í—ã—Å–æ–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤ –ª–∏–¥–µ—Ä—Å—Ç–≤–µ –∏ —Ä–µ—à–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º, —Å—Ä–µ–¥–Ω–∏–µ –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –æ–±–ª–∞—Å—Ç—è—Ö.',
                'hexaco': '–í—ã—Å–æ–∫–∞—è —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Å–∏—è, —É–º–µ—Ä–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø–æ –¥—Ä—É–≥–∏–º —Ñ–∞–∫—Ç–æ—Ä–∞–º.',
                'disc': '–î–æ–º–∏–Ω–∏—Ä—É–µ—Ç —Å—Ç–∏–ª—å –í–ª–∏—è–Ω–∏—è (I), —á—Ç–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω–æ –¥–ª—è –æ–±—â–∏—Ç–µ–ª—å–Ω—ã—Ö –∏ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏—Ö –ª—é–¥–µ–π.'
            },
            out_path=report_path,
            user_answers=user_answers  # üîë –ü–µ—Ä–µ–¥–∞–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
        )
        
        print(f"‚úÖ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: {report_path}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        file_size = report_path.stat().st_size / 1024
        print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:.1f} KB")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
    
    return user_answers


def demonstrate_bot_integration_code():
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ Telegram –±–æ—Ç
    """
    print("\n\nüíª –ü–†–ò–ú–ï–†–´ –ö–û–î–ê –î–õ–Ø TELEGRAM –ë–û–¢–ê")
    print("=" * 45)
    
    print("\n1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–∞ –≤ UserSession:")
    print("""
class UserSession:
    def __init__(self, user_id: int):
        self.user_id = user_id
        self.name = ""
        # ... –¥—Ä—É–≥–∏–µ –ø–æ–ª—è ...
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–ª–µ–∫—Ç–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
        self.answers_collector = UserAnswersCollector()
    """)
    
    print("\n2Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ PAEI:")
    print("""
async def handle_paei_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    session = user_sessions[user_id]
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç (P, A, E, I)
    selected_answer = update.message.text.strip()[0]  # –ü–µ—Ä–≤–∞—è –±—É–∫–≤–∞
    
    # –û–±—ã—á–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞ –±–∞–ª–ª–æ–≤
    session.paei_scores[selected_answer] += 1
    
    # –ù–û–í–û–ï: —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
    session.answers_collector.add_paei_answer(
        question_index=session.current_question,
        selected_option=selected_answer
    )
    """)
    
    print("\n3Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ Soft Skills:")
    print("""
async def handle_soft_skills_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    session = user_sessions[user_id]
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ü–µ–Ω–∫—É (1-10)
    rating = int(update.message.text.strip())
    
    # –û–±—ã—á–Ω–∞—è –ª–æ–≥–∏–∫–∞
    session.soft_skills_scores.append(rating)
    
    # –ù–û–í–û–ï: —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    session.answers_collector.add_soft_skills_answer(
        question_index=session.current_question,
        rating=rating
    )
    """)
    
    print("\n4Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞:")
    print("""
async def generate_final_report(user_session):
    # –í—ã–±–∏—Ä–∞–µ–º, –≤–∫–ª—é—á–∞—Ç—å –ª–∏ —Ä–∞–∑–¥–µ–ª –≤–æ–ø—Ä–æ—Å–æ–≤
    include_questions = os.getenv('INCLUDE_QUESTIONS_SECTION', 'false').lower() == 'true'
    
    # –°–æ–∑–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤
    report_generator = EnhancedPDFReportV2(
        include_questions_section=include_questions
    )
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω—ã)
    user_answers = user_session.answers_collector.get_answers_dict() if include_questions else None
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    report_path, gdrive_link = report_generator.generate_enhanced_report_with_gdrive(
        participant_name=user_session.name,
        test_date=datetime.now().strftime("%d.%m.%Y %H:%M"),
        paei_scores=calculate_paei_scores(user_session),
        disc_scores=calculate_disc_scores(user_session),
        hexaco_scores=calculate_hexaco_scores(user_session),
        soft_skills_scores=calculate_soft_skills_scores(user_session),
        ai_interpretations=generate_interpretations(...),
        out_path=Path(f"report_{user_session.user_id}.pdf"),
        user_answers=user_answers  # üîë –ü–µ—Ä–µ–¥–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    )
    """)
    
    print("\n5Ô∏è‚É£ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
    print("""
# –í .env —Ñ–∞–π–ª–µ:
INCLUDE_QUESTIONS_SECTION=false  # –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# INCLUDE_QUESTIONS_SECTION=true  # –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–µ–π/–ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤
    """)


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–º—É–ª—è—Ü–∏—é
    user_answers = simulate_user_session_with_questions()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    demonstrate_bot_integration_code()
    
    print(f"\nüéâ –°–ò–ú–£–õ–Ø–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
    print(f"üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: bot_simulation_report_with_questions.pdf")
    print(f"üìã –°–æ–±—Ä–∞–Ω–æ {sum(len(answers) for answers in user_answers.values())} –æ—Ç–≤–µ—Ç–æ–≤")